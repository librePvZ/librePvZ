(function() {var type_impls = {
"bevy":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBytes-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#3234-3308\">source</a><a href=\"#impl-AsBytes-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#2720\">source</a><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerocopy/trait.AsBytes.html#method.as_bytes\" class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a href=\"zerocopy/trait.AsBytes.html#method.as_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#2871\">source</a><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerocopy/trait.AsBytes.html#method.write_to\" class=\"fn\">write_to</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>bytes</code>. <a href=\"zerocopy/trait.AsBytes.html#method.write_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#2928\">source</a><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerocopy/trait.AsBytes.html#method.write_to_prefix\" class=\"fn\">write_to_prefix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>bytes</code>. <a href=\"zerocopy/trait.AsBytes.html#method.write_to_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#2989\">source</a><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerocopy/trait.AsBytes.html#method.write_to_suffix\" class=\"fn\">write_to_suffix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>bytes</code>. <a href=\"zerocopy/trait.AsBytes.html#method.write_to_suffix\">Read more</a></div></details></div></details>","AsBytes","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#135\">source</a></span><a href=\"#impl-Binary-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#135\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Binary","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CNonZero%3CT%3E%3E-for-T\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#311-313\">source</a></span><a href=\"#impl-BitOr%3CNonZero%3CT%3E%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;&gt; for T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#318\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<NonZero<T>>","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CT%3E-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#297-299\">source</a></span><a href=\"#impl-BitOr%3CT%3E-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#304\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: T) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<T>","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#283-285\">source</a></span><a href=\"#impl-BitOr-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#290\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CT%3E-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#337-340\">source</a></span><a href=\"#impl-BitOrAssign%3CT%3E-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;T, Output = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#343\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: T)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<T>","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#325-328\">source</a></span><a href=\"#impl-BitOrAssign-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;Output = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#331\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedBitPattern-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bytemuck/checked.rs.html#189-202\">source</a><a href=\"#impl-CheckedBitPattern-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bytemuck/checked/trait.CheckedBitPattern.html\" title=\"trait bytemuck::checked::CheckedBitPattern\">CheckedBitPattern</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Bits\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bits\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bytemuck/checked/trait.CheckedBitPattern.html#associatedtype.Bits\" class=\"associatedtype\">Bits</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'><code>Self</code> <em>must</em> have the same layout as the specified <code>Bits</code> except for\nthe possible invalid bit patterns being checked during\n<a href=\"bytemuck/checked/trait.CheckedBitPattern.html#tymethod.is_valid_bit_pattern\" title=\"associated function bytemuck::checked::CheckedBitPattern::is_valid_bit_pattern\"><code>is_valid_bit_pattern</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_valid_bit_pattern\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/checked.rs.html#189-202\">source</a><a href=\"#method.is_valid_bit_pattern\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/checked/trait.CheckedBitPattern.html#tymethod.is_valid_bit_pattern\" class=\"fn\">is_valid_bit_pattern</a>(\n    bits: &amp;&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"bytemuck/checked/trait.CheckedBitPattern.html\" title=\"trait bytemuck::checked::CheckedBitPattern\">CheckedBitPattern</a>&gt;::<a class=\"associatedtype\" href=\"bytemuck/checked/trait.CheckedBitPattern.html#associatedtype.Bits\" title=\"type bytemuck::checked::CheckedBitPattern::Bits\">Bits</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>If this function returns true, then it must be valid to reinterpret <code>bits</code>\nas <code>&amp;Self</code>.</div></details></div></details>","CheckedBitPattern","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#161-163\">source</a></span><a href=\"#impl-Clone-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#166\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Contiguous-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bytemuck/contiguous.rs.html#181-204\">source</a><a href=\"#impl-Contiguous-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bytemuck/contiguous/trait.Contiguous.html\" title=\"trait bytemuck::contiguous::Contiguous\">Contiguous</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Int\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Int\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bytemuck/contiguous/trait.Contiguous.html#associatedtype.Int\" class=\"associatedtype\">Int</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The primitive integer type with an identical representation to this\ntype. <a href=\"bytemuck/contiguous/trait.Contiguous.html#associatedtype.Int\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_VALUE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/contiguous.rs.html#181-204\">source</a><a href=\"#associatedconstant.MAX_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bytemuck/contiguous/trait.Contiguous.html#associatedconstant.MAX_VALUE\" class=\"constant\">MAX_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a> = 18_446_744_073_709_551_615u64</h4></section></summary><div class='docblock'>The upper <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_VALUE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/contiguous.rs.html#181-204\">source</a><a href=\"#associatedconstant.MIN_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bytemuck/contiguous/trait.Contiguous.html#associatedconstant.MIN_VALUE\" class=\"constant\">MIN_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a> = 1u64</h4></section></summary><div class='docblock'>The lower <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_integer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/contiguous.rs.html#121\">source</a><a href=\"#method.from_integer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/contiguous/trait.Contiguous.html#method.from_integer\" class=\"fn\">from_integer</a>(value: Self::<a class=\"associatedtype\" href=\"bytemuck/contiguous/trait.Contiguous.html#associatedtype.Int\" title=\"type bytemuck::contiguous::Contiguous::Int\">Int</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>If <code>value</code> is within the range for valid instances of this type,\nreturns <code>Some(converted_value)</code>, otherwise, returns <code>None</code>. <a href=\"bytemuck/contiguous/trait.Contiguous.html#method.from_integer\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_integer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/contiguous.rs.html#156\">source</a><a href=\"#method.into_integer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/contiguous/trait.Contiguous.html#method.into_integer\" class=\"fn\">into_integer</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"bytemuck/contiguous/trait.Contiguous.html#associatedtype.Int\" title=\"type bytemuck::contiguous::Contiguous::Int\">Int</a></h4></section></summary><div class='docblock'>Perform the conversion from <code>C</code> into the underlying integral type. This\nmostly exists otherwise generic code would need unsafe for the <code>value as integer</code> <a href=\"bytemuck/contiguous/trait.Contiguous.html#method.into_integer\">Read more</a></div></details></div></details>","Contiguous","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#133\">source</a></span><a href=\"#impl-Debug-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#133\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#443-448\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#443-448\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#134\">source</a></span><a href=\"#impl-Display-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#134\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3CT%3E%3E-for-T\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.31.0\">1.31.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#271-273\">source</a></span><a href=\"#impl-From%3CNonZero%3CT%3E%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;&gt; for T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#276\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(nonzero: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; T</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NonZero<T>>","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu16%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#428\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu16%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#428\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u16.html\" title=\"primitive u16\">u16</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u16>>","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu32%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#431\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu32%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#431\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\" title=\"primitive u32\">u32</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u32>>","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#424\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#424\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\" title=\"primitive u8\">u8</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u8>>","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromReflect-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#impl-FromReflect-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy/reflect/trait.FromReflect.html\" title=\"trait bevy::reflect::FromReflect\">FromReflect</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.from_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.FromReflect.html#tymethod.from_reflect\" class=\"fn\">from_reflect</a>(reflect: &amp;(dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section></summary><div class='docblock'>Constructs a concrete instance of <code>Self</code> from a reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_from_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/from_reflect.rs.html#42\">source</a><a href=\"#method.take_from_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.FromReflect.html#method.take_from_reflect\" class=\"fn\">take_from_reflect</a>(\n    reflect: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to downcast the given value to <code>Self</code> using,\nconstructing the value using <a href=\"bevy/reflect/trait.FromReflect.html#tymethod.from_reflect\" title=\"associated function bevy_reflect::from_reflect::FromReflect::from_reflect::from_reflect\"><code>from_reflect</code></a> if that fails. <a href=\"bevy/reflect/trait.FromReflect.html#method.take_from_reflect\">Read more</a></div></details></div></details>","FromReflect","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/1.79.0/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetTypeRegistration-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#impl-GetTypeRegistration-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_type_registration\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.get_type_registration\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.GetTypeRegistration.html#tymethod.get_type_registration\" class=\"fn\">get_type_registration</a>() -&gt; <a class=\"struct\" href=\"bevy/reflect/struct.TypeRegistration.html\" title=\"struct bevy::reflect::TypeRegistration\">TypeRegistration</a></h4></section></summary><div class='docblock'>Returns the default <a href=\"bevy/reflect/struct.TypeRegistration.html\" title=\"struct bevy::reflect::TypeRegistration\"><code>TypeRegistration</code></a> for this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_type_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/type_registry.rs.html#71\">source</a><a href=\"#method.register_type_dependencies\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.GetTypeRegistration.html#method.register_type_dependencies\" class=\"fn\">register_type_dependencies</a>(registry: &amp;mut <a class=\"struct\" href=\"bevy/reflect/struct.TypeRegistry.html\" title=\"struct bevy::reflect::TypeRegistry\">TypeRegistry</a>)</h4></section></summary><div class='docblock'>Registers other types needed by this type. <a href=\"bevy/reflect/trait.GetTypeRegistration.html#method.register_type_dependencies\">Read more</a></div></details></div></details>","GetTypeRegistration","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#257-259\">source</a></span><a href=\"#impl-Hash-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#262-264\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#137\">source</a></span><a href=\"#impl-LowerHex-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#137\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NonZero%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#348-350\">source</a><a href=\"#impl-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0, const since 1.47.0\">1.28.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#357\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.new\" class=\"fn\">new</a>(n: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero if the given value is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0, const since 1.28.0\">1.28.0 (const: 1.28.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#373\">source</a></span><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(n: T) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero without checking whether the value is non-zero.\nThis results in undefined behaviour if the value is zero.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>The value must not be zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#395\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.from_mut\" class=\"fn\">from_mut</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;mut T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a reference to a non-zero mutable reference\nif the referenced value is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#413\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.from_mut_unchecked\" class=\"fn\">from_mut_unchecked</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;mut T</a>) -&gt; &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a mutable reference to a non-zero mutable reference\nwithout checking whether the referenced value is non-zero.\nThis results in undefined behavior if the referenced value is zero.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>The referenced value must not be zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0, const since 1.34.0\">1.28.0 (const: 1.34.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#434\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.get\" class=\"fn\">get</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the contained value as a primitive type.</p>\n</div></details></div></details>",0,"bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a><a href=\"#impl-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0\">1.67.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a> = 64u32</h4></section></summary><div class=\"docblock\"><p>The size of this non-zero integer type in bits.</p>\n<p>This value is equal to <a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html#associatedconstant.BITS\" title=\"associated constant u64::BITS\"><code>u64::BITS</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(NonZeroU64::BITS, u64::BITS);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading zeros in the binary representation of <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>leading_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroU64::new(u64::MAX).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.leading_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing zeros in the binary representation\nof <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>trailing_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroU64::new(<span class=\"number\">0b0101000</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.trailing_zeros(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/120287\" title=\"Tracking issue for non_zero_count_ones\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>non_zero_count_ones</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the number of ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(non_zero_count_ones)]\n\n</span><span class=\"kw\">let </span>a = NonZero::&lt;u64&gt;::new(<span class=\"number\">0b100_0000</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>b = NonZero::&lt;u64&gt;::new(<span class=\"number\">0b100_0011</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(a.count_ones(), NonZero::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>);\n<span class=\"macro\">assert_eq!</span>(b.count_ones(), NonZero::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The smallest value that can be represented by this non-zero\ninteger type, 1.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU64::MIN.get(), <span class=\"number\">1u64</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The largest value that can be represented by this non-zero\ninteger type,\nequal to <a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html#associatedconstant.MAX\" title=\"associated constant u64::MAX\"><code>u64::MAX</code></a>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU64::MAX.get(), u64::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>one = NonZeroU64::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(two), one.checked_add(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_add(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value.\nReturn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant core::num::nonzero::NonZero::MAX\"><code>NonZeroU64::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>one = NonZeroU64::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(two, one.saturating_add(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_add(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_add\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.unchecked_add\" class=\"fn\">unchecked_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self + rhs &gt; u64::MAX</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>one = NonZeroU64::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(two, <span class=\"kw\">unsafe </span>{ one.unchecked_add(<span class=\"number\">1</span>) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.checked_next_power_of_two\" class=\"fn\">checked_next_power_of_two</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to n.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\nif the next power of two is greater than the type’s maximum value.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>three = NonZeroU64::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU64::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(two), two.checked_next_power_of_two() );\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), three.checked_next_power_of_two() );\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_next_power_of_two() );</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog2\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.ilog2\" class=\"fn\">ilog2</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 2 logarithm of the number, rounded down.</p>\n<p>This is the same operation as\n<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html#method.ilog2\" title=\"method u64::ilog2\"><code>u64::ilog2</code></a>,\nexcept that it has no failure cases to worry about\nsince this value can never be zero.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">7</span>).unwrap().ilog2(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">8</span>).unwrap().ilog2(), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">9</span>).unwrap().ilog2(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog10\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.ilog10\" class=\"fn\">ilog10</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 10 logarithm of the number, rounded down.</p>\n<p>This is the same operation as\n<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html#method.ilog10\" title=\"method u64::ilog10\"><code>u64::ilog10</code></a>,\nexcept that it has no failure cases to worry about\nsince this value can never be zero.</p>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">99</span>).unwrap().ilog10(), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">100</span>).unwrap().ilog10(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">101</span>).unwrap().ilog10(), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.midpoint\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/110840\" title=\"Tracking issue for const_num_midpoint\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.midpoint\" class=\"fn\">midpoint</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>num_midpoint</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the middle point of <code>self</code> and <code>rhs</code>.</p>\n<p><code>midpoint(a, b)</code> is <code>(a + b) &gt;&gt; 1</code> as if it were performed in a\nsufficiently-large signed integral type. This implies that the result is\nalways rounded towards negative infinity and that no overflow will ever occur.</p>\n<h5 id=\"examples-12\"><a class=\"doc-anchor\" href=\"#examples-12\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(num_midpoint)]\n\n</span><span class=\"kw\">let </span>one = NonZeroU64::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU64::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(one.midpoint(four), two);\n<span class=\"macro\">assert_eq!</span>(four.midpoint(one), two);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.59.0, const since 1.59.0\">1.59.0 (const: 1.59.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.is_power_of_two\" class=\"fn\">is_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if and only if <code>self == (1 &lt;&lt; k)</code> for some <code>k</code>.</p>\n<p>On many architectures, this function can perform better than <code>is_power_of_two()</code>\non the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-13\"><a class=\"doc-anchor\" href=\"#examples-13\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>eight = std::num::NonZeroU64::new(<span class=\"number\">8</span>).unwrap();\n<span class=\"macro\">assert!</span>(eight.is_power_of_two());\n<span class=\"kw\">let </span>ten = std::num::NonZeroU64::new(<span class=\"number\">10</span>).unwrap();\n<span class=\"macro\">assert!</span>(!ten.is_power_of_two());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-14\"><a class=\"doc-anchor\" href=\"#examples-14\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU64::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), two.checked_mul(two));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_mul(two));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nReturn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant core::num::nonzero::NonZero::MAX\"><code>NonZeroU64::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-15\"><a class=\"doc-anchor\" href=\"#examples-15\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU64::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, two.saturating_mul(two));\n<span class=\"macro\">assert_eq!</span>(max, four.saturating_mul(max));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.unchecked_mul\" class=\"fn\">unchecked_mul</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self * rhs &gt; u64::MAX</code>.</p>\n<h5 id=\"examples-16\"><a class=\"doc-anchor\" href=\"#examples-16\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU64::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, <span class=\"kw\">unsafe </span>{ two.unchecked_mul(two) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.checked_pow\" class=\"fn\">checked_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Raises non-zero value to an integer power.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-17\"><a class=\"doc-anchor\" href=\"#examples-17\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroU64::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroU64::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>half_max = NonZeroU64::new(u64::MAX / <span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(twenty_seven), three.checked_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, half_max.checked_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.saturating_pow\" class=\"fn\">saturating_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Raise non-zero value to an integer power.\nReturn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant core::num::nonzero::NonZero::MAX\"><code>NonZeroU64::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-18\"><a class=\"doc-anchor\" href=\"#examples-18\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroU64::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroU64::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(twenty_seven, three.saturating_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details></div></details>",0,"bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#136\">source</a></span><a href=\"#impl-Octal-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Octal.html\" title=\"trait core::fmt::Octal\">Octal</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Octal.html\" title=\"trait core::fmt::Octal\">Octal</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#136\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Octal","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#228-230\">source</a></span><a href=\"#impl-Ord-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#233\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#238\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#244\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#250\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;, max: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#175-177\">source</a></span><a href=\"#impl-PartialEq-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#180\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#185\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#197-199\">source</a></span><a href=\"#impl-PartialOrd-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#202\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#207\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#212\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#217\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#222\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reflect-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#impl-Reflect-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_represented_type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.get_represented_type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.get_represented_type_info\" class=\"fn\">get_represented_type_info</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"enum\" href=\"bevy/reflect/enum.TypeInfo.html\" title=\"enum bevy::reflect::TypeInfo\">TypeInfo</a>&gt;</h4></section></summary><div class='docblock'>Returns the <a href=\"bevy/reflect/enum.TypeInfo.html\" title=\"enum bevy::reflect::TypeInfo\"><code>TypeInfo</code></a> of the type <em>represented</em> by this value. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.get_represented_type_info\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.into_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.into_any\" class=\"fn\">into_any</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a>&gt;</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>Box&lt;dyn Any&gt;</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.as_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.as_any\" class=\"fn\">as_any</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>&amp;dyn Any</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.as_any_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.as_any_mut\" class=\"fn\">as_any_mut</a>(&amp;mut self) -&gt; &amp;mut (dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>&amp;mut dyn Any</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.into_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.into_reflect\" class=\"fn\">into_reflect</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;</h4></section></summary><div class='docblock'>Casts this type to a boxed reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.as_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.as_reflect\" class=\"fn\">as_reflect</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)</h4></section></summary><div class='docblock'>Casts this type to a reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_reflect_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.as_reflect_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.as_reflect_mut\" class=\"fn\">as_reflect_mut</a>(&amp;mut self) -&gt; &amp;mut (dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)</h4></section></summary><div class='docblock'>Casts this type to a mutable reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.clone_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.clone_value\" class=\"fn\">clone_value</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;</h4></section></summary><div class='docblock'>Clones the value as a <code>Reflect</code> trait object. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.clone_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.try_apply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.try_apply\" class=\"fn\">try_apply</a>(\n    &amp;mut self,\n    value: &amp;(dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"bevy/reflect/enum.ApplyError.html\" title=\"enum bevy::reflect::ApplyError\">ApplyError</a>&gt;</h4></section></summary><div class='docblock'>Tries to <a href=\"bevy/reflect/trait.Reflect.html#method.apply\" title=\"method bevy::reflect::Reflect::apply\"><code>apply</code></a> a reflected value to this value. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.try_apply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Performs a type-checked assignment of a reflected value to this value. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.set\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.reflect_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_kind\" class=\"fn\">reflect_kind</a>(&amp;self) -&gt; <a class=\"enum\" href=\"bevy/reflect/enum.ReflectKind.html\" title=\"enum bevy::reflect::ReflectKind\">ReflectKind</a></h4></section></summary><div class='docblock'>Returns a zero-sized enumeration of “kinds” of type. <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_kind\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.reflect_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_ref\" class=\"fn\">reflect_ref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"bevy/reflect/enum.ReflectRef.html\" title=\"enum bevy::reflect::ReflectRef\">ReflectRef</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Returns an immutable enumeration of “kinds” of type. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.reflect_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_mut\" class=\"fn\">reflect_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"bevy/reflect/enum.ReflectMut.html\" title=\"enum bevy::reflect::ReflectMut\">ReflectMut</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Returns a mutable enumeration of “kinds” of type. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.reflect_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_owned\" class=\"fn\">reflect_owned</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;&gt;) -&gt; <a class=\"enum\" href=\"bevy/reflect/enum.ReflectOwned.html\" title=\"enum bevy::reflect::ReflectOwned\">ReflectOwned</a></h4></section></summary><div class='docblock'>Returns an owned enumeration of “kinds” of type. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_owned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#154\">source</a><a href=\"#method.reflect_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_hash\" class=\"fn\">reflect_hash</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Returns a hash of the value (which includes the type). <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_partial_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#155\">source</a><a href=\"#method.reflect_partial_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_partial_eq\" class=\"fn\">reflect_partial_eq</a>(&amp;self, value: &amp;(dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>&gt;</h4></section></summary><div class='docblock'>Returns a “partial equality” comparison result. <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_partial_eq\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.debug\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#153\">source</a><a href=\"#method.debug\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.debug\" class=\"fn\">debug</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Debug formatter for the value. <a href=\"bevy/reflect/trait.Reflect.html#method.debug\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#262\">source</a><a href=\"#method.apply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.apply\" class=\"fn\">apply</a>(&amp;mut self, value: &amp;(dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static))</h4></section></summary><div class='docblock'>Applies a reflected value to this value. <a href=\"bevy/reflect/trait.Reflect.html#method.apply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serializable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#351\">source</a><a href=\"#method.serializable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.serializable\" class=\"fn\">serializable</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"bevy/reflect/serde/enum.Serializable.html\" title=\"enum bevy::reflect::serde::Serializable\">Serializable</a>&lt;'_&gt;&gt;</h4></section></summary><div class='docblock'>Returns a serializable version of the value. <a href=\"bevy/reflect/trait.Reflect.html#method.serializable\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_dynamic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#367\">source</a><a href=\"#method.is_dynamic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.is_dynamic\" class=\"fn\">is_dynamic</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Indicates whether or not this type is a <em>dynamic</em> type. <a href=\"bevy/reflect/trait.Reflect.html#method.is_dynamic\">Read more</a></div></details></div></details>","Reflect","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#634-641\">source</a><a href=\"#impl-Serialize-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#634-641\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#540\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#540\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i128.html\">i128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i128.html\">i128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i128.html\" title=\"primitive i128\">i128</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i128>>","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci16%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#537\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci16%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#537\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i16.html\">i16</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i16.html\">i16</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i16.html\" title=\"primitive i16\">i16</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i16>>","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#538\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#538\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i32.html\">i32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i32.html\">i32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i32.html\" title=\"primitive i32\">i32</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i32>>","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#539\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#539\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i64.html\">i64</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i64.html\">i64</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i64.html\" title=\"primitive i64\">i64</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i64>>","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci8%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#536\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci8%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#536\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i8.html\">i8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i8.html\">i8</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i8.html\" title=\"primitive i8\">i8</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i8>>","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#541\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#541\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.isize.html\">isize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.isize.html\">isize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.isize.html\" title=\"primitive isize\">isize</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<isize>>","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#517\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#517\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u128.html\">u128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u128.html\">u128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u128.html\" title=\"primitive u128\">u128</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u128>>","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#518\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#518\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\" title=\"primitive usize\">usize</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<usize>>","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu64%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#484\">source</a></span><a href=\"#impl-TryFrom%3Cu64%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#484\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<u64>","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypePath-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#impl-TypePath-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.type_path\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.TypePath.html#tymethod.type_path\" class=\"fn\">type_path</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Returns the fully qualified path of the underlying type. <a href=\"bevy/reflect/trait.TypePath.html#tymethod.type_path\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.short_type_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.short_type_path\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.TypePath.html#tymethod.short_type_path\" class=\"fn\">short_type_path</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Returns a short, pretty-print enabled path to the type. <a href=\"bevy/reflect/trait.TypePath.html#tymethod.short_type_path\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_ident\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.type_ident\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.TypePath.html#method.type_ident\" class=\"fn\">type_ident</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the name of the type, or <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy/reflect/trait.TypePath.html#anonymity\" title=\"trait bevy::reflect::TypePath\">anonymous</a>. <a href=\"bevy/reflect/trait.TypePath.html#method.type_ident\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.crate_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.TypePath.html#method.crate_name\" class=\"fn\">crate_name</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the name of the crate the type is in, or <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy/reflect/trait.TypePath.html#anonymity\" title=\"trait bevy::reflect::TypePath\">anonymous</a>. <a href=\"bevy/reflect/trait.TypePath.html#method.crate_name\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.module_path\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.TypePath.html#method.module_path\" class=\"fn\">module_path</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the path to the module the type is in, or <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy/reflect/trait.TypePath.html#anonymity\" title=\"trait bevy::reflect::TypePath\">anonymous</a>. <a href=\"bevy/reflect/trait.TypePath.html#method.module_path\">Read more</a></div></details></div></details>","TypePath","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Typed-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#impl-Typed-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy/reflect/trait.Typed.html\" title=\"trait bevy::reflect::Typed\">Typed</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Typed.html#tymethod.type_info\" class=\"fn\">type_info</a>() -&gt; &amp;'static <a class=\"enum\" href=\"bevy/reflect/enum.TypeInfo.html\" title=\"enum bevy::reflect::TypeInfo\">TypeInfo</a></h4></section></summary><div class='docblock'>Returns the compile-time <a href=\"bevy/reflect/enum.TypeInfo.html\" title=\"enum bevy::reflect::TypeInfo\">info</a> for the underlying type.</div></details></div></details>","Typed","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#138\">source</a></span><a href=\"#impl-UpperHex-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#138\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","bevy::render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Value-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tracing_core/field.rs.html#517-526\">source</a><a href=\"#impl-Value-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy/utils/tracing/trait.Value.html\" title=\"trait bevy::utils::tracing::Value\">Value</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.record\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/field.rs.html#517-526\">source</a><a href=\"#method.record\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/utils/tracing/trait.Value.html#tymethod.record\" class=\"fn\">record</a>(&amp;self, key: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/field/struct.Field.html\" title=\"struct bevy::utils::tracing::field::Field\">Field</a>, visitor: &amp;mut dyn <a class=\"trait\" href=\"bevy/utils/tracing/field/trait.Visit.html\" title=\"trait bevy::utils::tracing::field::Visit\">Visit</a>)</h4></section></summary><div class='docblock'>Visits this value with the given <code>Visitor</code>.</div></details></div></details>","Value","bevy::render::render_resource::BufferSize"],["<section id=\"impl-Copy-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#172\">source</a></span><a href=\"#impl-Copy-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a>,</div></h3></section>","Copy","bevy::render::render_resource::BufferSize"],["<section id=\"impl-Eq-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#194\">source</a></span><a href=\"#impl-Eq-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","bevy::render::render_resource::BufferSize"],["<section id=\"impl-Freeze-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#153\">source</a></span><a href=\"#impl-Freeze-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a>,</div></h3></section>","Freeze","bevy::render::render_resource::BufferSize"],["<section id=\"impl-NoUninit-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bytemuck/no_uninit.rs.html#75\">source</a><a href=\"#impl-NoUninit-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bytemuck/no_uninit/trait.NoUninit.html\" title=\"trait bytemuck::no_uninit::NoUninit\">NoUninit</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section>","NoUninit","bevy::render::render_resource::BufferSize"],["<section id=\"impl-PodInOption-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bytemuck/pod_in_option.rs.html#25\">source</a><a href=\"#impl-PodInOption-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bytemuck/pod_in_option/trait.PodInOption.html\" title=\"trait bytemuck::pod_in_option::PodInOption\">PodInOption</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section>","PodInOption","bevy::render::render_resource::BufferSize"],["<section id=\"impl-RefUnwindSafe-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#154\">source</a></span><a href=\"#impl-RefUnwindSafe-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a>,</div></h3></section>","RefUnwindSafe","bevy::render::render_resource::BufferSize"],["<section id=\"impl-Send-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#155\">source</a></span><a href=\"#impl-Send-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section>","Send","bevy::render::render_resource::BufferSize"],["<section id=\"impl-StructuralPartialEq-for-NonZero%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#191\">source</a><a href=\"#impl-StructuralPartialEq-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a>,</div></h3></section>","StructuralPartialEq","bevy::render::render_resource::BufferSize"],["<section id=\"impl-Sync-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#156\">source</a></span><a href=\"#impl-Sync-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section>","Sync","bevy::render::render_resource::BufferSize"],["<section id=\"impl-Unpin-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#157\">source</a></span><a href=\"#impl-Unpin-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,</div></h3></section>","Unpin","bevy::render::render_resource::BufferSize"],["<section id=\"impl-UnwindSafe-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#158\">source</a></span><a href=\"#impl-UnwindSafe-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a>,</div></h3></section>","UnwindSafe","bevy::render::render_resource::BufferSize"],["<section id=\"impl-ZeroableInOption-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bytemuck/zeroable_in_option.rs.html#24\">source</a><a href=\"#impl-ZeroableInOption-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bytemuck/zeroable_in_option/trait.ZeroableInOption.html\" title=\"trait bytemuck::zeroable_in_option::ZeroableInOption\">ZeroableInOption</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section>","ZeroableInOption","bevy::render::render_resource::BufferSize"]],
"bevy_render":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBytes-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#3234-3308\">source</a><a href=\"#impl-AsBytes-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#2720\">source</a><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerocopy/trait.AsBytes.html#method.as_bytes\" class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a href=\"zerocopy/trait.AsBytes.html#method.as_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#2871\">source</a><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerocopy/trait.AsBytes.html#method.write_to\" class=\"fn\">write_to</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>bytes</code>. <a href=\"zerocopy/trait.AsBytes.html#method.write_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#2928\">source</a><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerocopy/trait.AsBytes.html#method.write_to_prefix\" class=\"fn\">write_to_prefix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>bytes</code>. <a href=\"zerocopy/trait.AsBytes.html#method.write_to_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#2989\">source</a><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerocopy/trait.AsBytes.html#method.write_to_suffix\" class=\"fn\">write_to_suffix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>bytes</code>. <a href=\"zerocopy/trait.AsBytes.html#method.write_to_suffix\">Read more</a></div></details></div></details>","AsBytes","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#135\">source</a></span><a href=\"#impl-Binary-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#135\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Binary","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CNonZero%3CT%3E%3E-for-T\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#311-313\">source</a></span><a href=\"#impl-BitOr%3CNonZero%3CT%3E%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;&gt; for T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#318\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<NonZero<T>>","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CT%3E-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#297-299\">source</a></span><a href=\"#impl-BitOr%3CT%3E-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#304\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: T) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<T>","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#283-285\">source</a></span><a href=\"#impl-BitOr-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#290\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CT%3E-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#337-340\">source</a></span><a href=\"#impl-BitOrAssign%3CT%3E-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;T, Output = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#343\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: T)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<T>","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#325-328\">source</a></span><a href=\"#impl-BitOrAssign-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;Output = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#331\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedBitPattern-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bytemuck/checked.rs.html#189-202\">source</a><a href=\"#impl-CheckedBitPattern-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bytemuck/checked/trait.CheckedBitPattern.html\" title=\"trait bytemuck::checked::CheckedBitPattern\">CheckedBitPattern</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Bits\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bits\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bytemuck/checked/trait.CheckedBitPattern.html#associatedtype.Bits\" class=\"associatedtype\">Bits</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'><code>Self</code> <em>must</em> have the same layout as the specified <code>Bits</code> except for\nthe possible invalid bit patterns being checked during\n<a href=\"bytemuck/checked/trait.CheckedBitPattern.html#tymethod.is_valid_bit_pattern\" title=\"associated function bytemuck::checked::CheckedBitPattern::is_valid_bit_pattern\"><code>is_valid_bit_pattern</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_valid_bit_pattern\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/checked.rs.html#189-202\">source</a><a href=\"#method.is_valid_bit_pattern\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/checked/trait.CheckedBitPattern.html#tymethod.is_valid_bit_pattern\" class=\"fn\">is_valid_bit_pattern</a>(\n    bits: &amp;&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"bytemuck/checked/trait.CheckedBitPattern.html\" title=\"trait bytemuck::checked::CheckedBitPattern\">CheckedBitPattern</a>&gt;::<a class=\"associatedtype\" href=\"bytemuck/checked/trait.CheckedBitPattern.html#associatedtype.Bits\" title=\"type bytemuck::checked::CheckedBitPattern::Bits\">Bits</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>If this function returns true, then it must be valid to reinterpret <code>bits</code>\nas <code>&amp;Self</code>.</div></details></div></details>","CheckedBitPattern","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#161-163\">source</a></span><a href=\"#impl-Clone-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#166\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Contiguous-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bytemuck/contiguous.rs.html#181-204\">source</a><a href=\"#impl-Contiguous-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bytemuck/contiguous/trait.Contiguous.html\" title=\"trait bytemuck::contiguous::Contiguous\">Contiguous</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Int\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Int\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bytemuck/contiguous/trait.Contiguous.html#associatedtype.Int\" class=\"associatedtype\">Int</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The primitive integer type with an identical representation to this\ntype. <a href=\"bytemuck/contiguous/trait.Contiguous.html#associatedtype.Int\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_VALUE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/contiguous.rs.html#181-204\">source</a><a href=\"#associatedconstant.MAX_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bytemuck/contiguous/trait.Contiguous.html#associatedconstant.MAX_VALUE\" class=\"constant\">MAX_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a> = 18_446_744_073_709_551_615u64</h4></section></summary><div class='docblock'>The upper <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_VALUE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/contiguous.rs.html#181-204\">source</a><a href=\"#associatedconstant.MIN_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bytemuck/contiguous/trait.Contiguous.html#associatedconstant.MIN_VALUE\" class=\"constant\">MIN_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a> = 1u64</h4></section></summary><div class='docblock'>The lower <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_integer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/contiguous.rs.html#121\">source</a><a href=\"#method.from_integer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/contiguous/trait.Contiguous.html#method.from_integer\" class=\"fn\">from_integer</a>(value: Self::<a class=\"associatedtype\" href=\"bytemuck/contiguous/trait.Contiguous.html#associatedtype.Int\" title=\"type bytemuck::contiguous::Contiguous::Int\">Int</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>If <code>value</code> is within the range for valid instances of this type,\nreturns <code>Some(converted_value)</code>, otherwise, returns <code>None</code>. <a href=\"bytemuck/contiguous/trait.Contiguous.html#method.from_integer\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_integer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/contiguous.rs.html#156\">source</a><a href=\"#method.into_integer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/contiguous/trait.Contiguous.html#method.into_integer\" class=\"fn\">into_integer</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"bytemuck/contiguous/trait.Contiguous.html#associatedtype.Int\" title=\"type bytemuck::contiguous::Contiguous::Int\">Int</a></h4></section></summary><div class='docblock'>Perform the conversion from <code>C</code> into the underlying integral type. This\nmostly exists otherwise generic code would need unsafe for the <code>value as integer</code> <a href=\"bytemuck/contiguous/trait.Contiguous.html#method.into_integer\">Read more</a></div></details></div></details>","Contiguous","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#133\">source</a></span><a href=\"#impl-Debug-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#133\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#443-448\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#443-448\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#134\">source</a></span><a href=\"#impl-Display-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#134\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3CT%3E%3E-for-T\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.31.0\">1.31.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#271-273\">source</a></span><a href=\"#impl-From%3CNonZero%3CT%3E%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;&gt; for T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#276\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(nonzero: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; T</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NonZero<T>>","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu16%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#428\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu16%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#428\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u16.html\" title=\"primitive u16\">u16</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u16>>","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu32%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#431\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu32%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#431\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\" title=\"primitive u32\">u32</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u32>>","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#424\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#424\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\" title=\"primitive u8\">u8</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u8>>","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromReflect-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#impl-FromReflect-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy_reflect/from_reflect/trait.FromReflect.html\" title=\"trait bevy_reflect::from_reflect::FromReflect\">FromReflect</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.from_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/from_reflect/trait.FromReflect.html#tymethod.from_reflect\" class=\"fn\">from_reflect</a>(reflect: &amp;(dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a> + 'static)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section></summary><div class='docblock'>Constructs a concrete instance of <code>Self</code> from a reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_from_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/from_reflect.rs.html#42\">source</a><a href=\"#method.take_from_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/from_reflect/trait.FromReflect.html#method.take_from_reflect\" class=\"fn\">take_from_reflect</a>(\n    reflect: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to downcast the given value to <code>Self</code> using,\nconstructing the value using <a href=\"bevy_reflect/from_reflect/trait.FromReflect.html#tymethod.from_reflect\" title=\"associated function bevy_reflect::from_reflect::FromReflect::from_reflect::from_reflect\"><code>from_reflect</code></a> if that fails. <a href=\"bevy_reflect/from_reflect/trait.FromReflect.html#method.take_from_reflect\">Read more</a></div></details></div></details>","FromReflect","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/1.79.0/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetTypeRegistration-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#impl-GetTypeRegistration-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy_reflect/type_registry/trait.GetTypeRegistration.html\" title=\"trait bevy_reflect::type_registry::GetTypeRegistration\">GetTypeRegistration</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_type_registration\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.get_type_registration\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/type_registry/trait.GetTypeRegistration.html#tymethod.get_type_registration\" class=\"fn\">get_type_registration</a>() -&gt; <a class=\"struct\" href=\"bevy_reflect/type_registry/struct.TypeRegistration.html\" title=\"struct bevy_reflect::type_registry::TypeRegistration\">TypeRegistration</a></h4></section></summary><div class='docblock'>Returns the default <a href=\"bevy_reflect/type_registry/struct.TypeRegistration.html\" title=\"struct bevy_reflect::type_registry::TypeRegistration\"><code>TypeRegistration</code></a> for this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_type_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/type_registry.rs.html#71\">source</a><a href=\"#method.register_type_dependencies\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/type_registry/trait.GetTypeRegistration.html#method.register_type_dependencies\" class=\"fn\">register_type_dependencies</a>(registry: &amp;mut <a class=\"struct\" href=\"bevy_reflect/type_registry/struct.TypeRegistry.html\" title=\"struct bevy_reflect::type_registry::TypeRegistry\">TypeRegistry</a>)</h4></section></summary><div class='docblock'>Registers other types needed by this type. <a href=\"bevy_reflect/type_registry/trait.GetTypeRegistration.html#method.register_type_dependencies\">Read more</a></div></details></div></details>","GetTypeRegistration","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#257-259\">source</a></span><a href=\"#impl-Hash-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#262-264\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#137\">source</a></span><a href=\"#impl-LowerHex-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#137\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NonZero%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#348-350\">source</a><a href=\"#impl-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0, const since 1.47.0\">1.28.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#357\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.new\" class=\"fn\">new</a>(n: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero if the given value is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0, const since 1.28.0\">1.28.0 (const: 1.28.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#373\">source</a></span><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(n: T) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero without checking whether the value is non-zero.\nThis results in undefined behaviour if the value is zero.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>The value must not be zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#395\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.from_mut\" class=\"fn\">from_mut</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;mut T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a reference to a non-zero mutable reference\nif the referenced value is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#413\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.from_mut_unchecked\" class=\"fn\">from_mut_unchecked</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;mut T</a>) -&gt; &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a mutable reference to a non-zero mutable reference\nwithout checking whether the referenced value is non-zero.\nThis results in undefined behavior if the referenced value is zero.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>The referenced value must not be zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0, const since 1.34.0\">1.28.0 (const: 1.34.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#434\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.get\" class=\"fn\">get</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the contained value as a primitive type.</p>\n</div></details></div></details>",0,"bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a><a href=\"#impl-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0\">1.67.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a> = 64u32</h4></section></summary><div class=\"docblock\"><p>The size of this non-zero integer type in bits.</p>\n<p>This value is equal to <a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html#associatedconstant.BITS\" title=\"associated constant u64::BITS\"><code>u64::BITS</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(NonZeroU64::BITS, u64::BITS);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading zeros in the binary representation of <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>leading_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroU64::new(u64::MAX).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.leading_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing zeros in the binary representation\nof <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>trailing_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroU64::new(<span class=\"number\">0b0101000</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.trailing_zeros(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/120287\" title=\"Tracking issue for non_zero_count_ones\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>non_zero_count_ones</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the number of ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(non_zero_count_ones)]\n\n</span><span class=\"kw\">let </span>a = NonZero::&lt;u64&gt;::new(<span class=\"number\">0b100_0000</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>b = NonZero::&lt;u64&gt;::new(<span class=\"number\">0b100_0011</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(a.count_ones(), NonZero::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>);\n<span class=\"macro\">assert_eq!</span>(b.count_ones(), NonZero::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The smallest value that can be represented by this non-zero\ninteger type, 1.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU64::MIN.get(), <span class=\"number\">1u64</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The largest value that can be represented by this non-zero\ninteger type,\nequal to <a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html#associatedconstant.MAX\" title=\"associated constant u64::MAX\"><code>u64::MAX</code></a>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU64::MAX.get(), u64::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>one = NonZeroU64::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(two), one.checked_add(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_add(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value.\nReturn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant core::num::nonzero::NonZero::MAX\"><code>NonZeroU64::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>one = NonZeroU64::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(two, one.saturating_add(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_add(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_add\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.unchecked_add\" class=\"fn\">unchecked_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self + rhs &gt; u64::MAX</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>one = NonZeroU64::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(two, <span class=\"kw\">unsafe </span>{ one.unchecked_add(<span class=\"number\">1</span>) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.checked_next_power_of_two\" class=\"fn\">checked_next_power_of_two</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to n.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\nif the next power of two is greater than the type’s maximum value.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>three = NonZeroU64::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU64::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(two), two.checked_next_power_of_two() );\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), three.checked_next_power_of_two() );\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_next_power_of_two() );</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog2\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.ilog2\" class=\"fn\">ilog2</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 2 logarithm of the number, rounded down.</p>\n<p>This is the same operation as\n<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html#method.ilog2\" title=\"method u64::ilog2\"><code>u64::ilog2</code></a>,\nexcept that it has no failure cases to worry about\nsince this value can never be zero.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">7</span>).unwrap().ilog2(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">8</span>).unwrap().ilog2(), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">9</span>).unwrap().ilog2(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog10\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.ilog10\" class=\"fn\">ilog10</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 10 logarithm of the number, rounded down.</p>\n<p>This is the same operation as\n<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html#method.ilog10\" title=\"method u64::ilog10\"><code>u64::ilog10</code></a>,\nexcept that it has no failure cases to worry about\nsince this value can never be zero.</p>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">99</span>).unwrap().ilog10(), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">100</span>).unwrap().ilog10(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">101</span>).unwrap().ilog10(), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.midpoint\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/110840\" title=\"Tracking issue for const_num_midpoint\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.midpoint\" class=\"fn\">midpoint</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>num_midpoint</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the middle point of <code>self</code> and <code>rhs</code>.</p>\n<p><code>midpoint(a, b)</code> is <code>(a + b) &gt;&gt; 1</code> as if it were performed in a\nsufficiently-large signed integral type. This implies that the result is\nalways rounded towards negative infinity and that no overflow will ever occur.</p>\n<h5 id=\"examples-12\"><a class=\"doc-anchor\" href=\"#examples-12\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(num_midpoint)]\n\n</span><span class=\"kw\">let </span>one = NonZeroU64::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU64::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(one.midpoint(four), two);\n<span class=\"macro\">assert_eq!</span>(four.midpoint(one), two);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.59.0, const since 1.59.0\">1.59.0 (const: 1.59.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.is_power_of_two\" class=\"fn\">is_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if and only if <code>self == (1 &lt;&lt; k)</code> for some <code>k</code>.</p>\n<p>On many architectures, this function can perform better than <code>is_power_of_two()</code>\non the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-13\"><a class=\"doc-anchor\" href=\"#examples-13\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>eight = std::num::NonZeroU64::new(<span class=\"number\">8</span>).unwrap();\n<span class=\"macro\">assert!</span>(eight.is_power_of_two());\n<span class=\"kw\">let </span>ten = std::num::NonZeroU64::new(<span class=\"number\">10</span>).unwrap();\n<span class=\"macro\">assert!</span>(!ten.is_power_of_two());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-14\"><a class=\"doc-anchor\" href=\"#examples-14\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU64::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), two.checked_mul(two));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_mul(two));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nReturn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant core::num::nonzero::NonZero::MAX\"><code>NonZeroU64::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-15\"><a class=\"doc-anchor\" href=\"#examples-15\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU64::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, two.saturating_mul(two));\n<span class=\"macro\">assert_eq!</span>(max, four.saturating_mul(max));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.unchecked_mul\" class=\"fn\">unchecked_mul</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self * rhs &gt; u64::MAX</code>.</p>\n<h5 id=\"examples-16\"><a class=\"doc-anchor\" href=\"#examples-16\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU64::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, <span class=\"kw\">unsafe </span>{ two.unchecked_mul(two) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.checked_pow\" class=\"fn\">checked_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Raises non-zero value to an integer power.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-17\"><a class=\"doc-anchor\" href=\"#examples-17\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroU64::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroU64::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>half_max = NonZeroU64::new(u64::MAX / <span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(twenty_seven), three.checked_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, half_max.checked_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.saturating_pow\" class=\"fn\">saturating_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Raise non-zero value to an integer power.\nReturn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant core::num::nonzero::NonZero::MAX\"><code>NonZeroU64::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-18\"><a class=\"doc-anchor\" href=\"#examples-18\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroU64::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroU64::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(twenty_seven, three.saturating_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details></div></details>",0,"bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#136\">source</a></span><a href=\"#impl-Octal-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Octal.html\" title=\"trait core::fmt::Octal\">Octal</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Octal.html\" title=\"trait core::fmt::Octal\">Octal</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#136\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Octal","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#228-230\">source</a></span><a href=\"#impl-Ord-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#233\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#238\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#244\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#250\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;, max: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#175-177\">source</a></span><a href=\"#impl-PartialEq-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#180\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#185\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#197-199\">source</a></span><a href=\"#impl-PartialOrd-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#202\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#207\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#212\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#217\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#222\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reflect-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#impl-Reflect-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_represented_type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.get_represented_type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.get_represented_type_info\" class=\"fn\">get_represented_type_info</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"enum\" href=\"bevy_reflect/type_info/enum.TypeInfo.html\" title=\"enum bevy_reflect::type_info::TypeInfo\">TypeInfo</a>&gt;</h4></section></summary><div class='docblock'>Returns the <a href=\"bevy_reflect/type_info/enum.TypeInfo.html\" title=\"enum bevy_reflect::type_info::TypeInfo\"><code>TypeInfo</code></a> of the type <em>represented</em> by this value. <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.get_represented_type_info\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.into_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.into_any\" class=\"fn\">into_any</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a>&gt;</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>Box&lt;dyn Any&gt;</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.as_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.as_any\" class=\"fn\">as_any</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>&amp;dyn Any</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.as_any_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.as_any_mut\" class=\"fn\">as_any_mut</a>(&amp;mut self) -&gt; &amp;mut (dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>&amp;mut dyn Any</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.into_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.into_reflect\" class=\"fn\">into_reflect</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a>&gt;</h4></section></summary><div class='docblock'>Casts this type to a boxed reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.as_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.as_reflect\" class=\"fn\">as_reflect</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a> + 'static)</h4></section></summary><div class='docblock'>Casts this type to a reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_reflect_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.as_reflect_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.as_reflect_mut\" class=\"fn\">as_reflect_mut</a>(&amp;mut self) -&gt; &amp;mut (dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a> + 'static)</h4></section></summary><div class='docblock'>Casts this type to a mutable reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.clone_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.clone_value\" class=\"fn\">clone_value</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a>&gt;</h4></section></summary><div class='docblock'>Clones the value as a <code>Reflect</code> trait object. <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.clone_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.try_apply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.try_apply\" class=\"fn\">try_apply</a>(\n    &amp;mut self,\n    value: &amp;(dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a> + 'static)\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"bevy_reflect/reflect/enum.ApplyError.html\" title=\"enum bevy_reflect::reflect::ApplyError\">ApplyError</a>&gt;</h4></section></summary><div class='docblock'>Tries to <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.apply\" title=\"method bevy_reflect::reflect::Reflect::apply\"><code>apply</code></a> a reflected value to this value. <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.try_apply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Performs a type-checked assignment of a reflected value to this value. <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.set\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.reflect_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.reflect_kind\" class=\"fn\">reflect_kind</a>(&amp;self) -&gt; <a class=\"enum\" href=\"bevy_reflect/reflect/enum.ReflectKind.html\" title=\"enum bevy_reflect::reflect::ReflectKind\">ReflectKind</a></h4></section></summary><div class='docblock'>Returns a zero-sized enumeration of “kinds” of type. <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.reflect_kind\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.reflect_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.reflect_ref\" class=\"fn\">reflect_ref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"bevy_reflect/reflect/enum.ReflectRef.html\" title=\"enum bevy_reflect::reflect::ReflectRef\">ReflectRef</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Returns an immutable enumeration of “kinds” of type. <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.reflect_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.reflect_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.reflect_mut\" class=\"fn\">reflect_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"bevy_reflect/reflect/enum.ReflectMut.html\" title=\"enum bevy_reflect::reflect::ReflectMut\">ReflectMut</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Returns a mutable enumeration of “kinds” of type. <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.reflect_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.reflect_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.reflect_owned\" class=\"fn\">reflect_owned</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;&gt;) -&gt; <a class=\"enum\" href=\"bevy_reflect/reflect/enum.ReflectOwned.html\" title=\"enum bevy_reflect::reflect::ReflectOwned\">ReflectOwned</a></h4></section></summary><div class='docblock'>Returns an owned enumeration of “kinds” of type. <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.reflect_owned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#154\">source</a><a href=\"#method.reflect_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.reflect_hash\" class=\"fn\">reflect_hash</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Returns a hash of the value (which includes the type). <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.reflect_hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_partial_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#155\">source</a><a href=\"#method.reflect_partial_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.reflect_partial_eq\" class=\"fn\">reflect_partial_eq</a>(&amp;self, value: &amp;(dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a> + 'static)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>&gt;</h4></section></summary><div class='docblock'>Returns a “partial equality” comparison result. <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.reflect_partial_eq\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.debug\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#153\">source</a><a href=\"#method.debug\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.debug\" class=\"fn\">debug</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Debug formatter for the value. <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.debug\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#262\">source</a><a href=\"#method.apply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.apply\" class=\"fn\">apply</a>(&amp;mut self, value: &amp;(dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a> + 'static))</h4></section></summary><div class='docblock'>Applies a reflected value to this value. <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.apply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serializable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#351\">source</a><a href=\"#method.serializable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.serializable\" class=\"fn\">serializable</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"bevy_reflect/serde/ser/enum.Serializable.html\" title=\"enum bevy_reflect::serde::ser::Serializable\">Serializable</a>&lt;'_&gt;&gt;</h4></section></summary><div class='docblock'>Returns a serializable version of the value. <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.serializable\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_dynamic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#367\">source</a><a href=\"#method.is_dynamic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.is_dynamic\" class=\"fn\">is_dynamic</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Indicates whether or not this type is a <em>dynamic</em> type. <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.is_dynamic\">Read more</a></div></details></div></details>","Reflect","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#634-641\">source</a><a href=\"#impl-Serialize-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#634-641\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#540\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#540\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i128.html\">i128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i128.html\">i128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i128.html\" title=\"primitive i128\">i128</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i128>>","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci16%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#537\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci16%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#537\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i16.html\">i16</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i16.html\">i16</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i16.html\" title=\"primitive i16\">i16</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i16>>","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#538\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#538\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i32.html\">i32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i32.html\">i32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i32.html\" title=\"primitive i32\">i32</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i32>>","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#539\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#539\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i64.html\">i64</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i64.html\">i64</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i64.html\" title=\"primitive i64\">i64</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i64>>","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci8%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#536\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci8%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#536\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i8.html\">i8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i8.html\">i8</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i8.html\" title=\"primitive i8\">i8</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i8>>","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#541\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#541\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.isize.html\">isize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.isize.html\">isize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.isize.html\" title=\"primitive isize\">isize</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<isize>>","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#517\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#517\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u128.html\">u128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u128.html\">u128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u128.html\" title=\"primitive u128\">u128</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u128>>","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#518\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#518\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\" title=\"primitive usize\">usize</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<usize>>","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu64%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#484\">source</a></span><a href=\"#impl-TryFrom%3Cu64%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#484\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<u64>","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypePath-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#impl-TypePath-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy_reflect/type_path/trait.TypePath.html\" title=\"trait bevy_reflect::type_path::TypePath\">TypePath</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.type_path\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/type_path/trait.TypePath.html#tymethod.type_path\" class=\"fn\">type_path</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Returns the fully qualified path of the underlying type. <a href=\"bevy_reflect/type_path/trait.TypePath.html#tymethod.type_path\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.short_type_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.short_type_path\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/type_path/trait.TypePath.html#tymethod.short_type_path\" class=\"fn\">short_type_path</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Returns a short, pretty-print enabled path to the type. <a href=\"bevy_reflect/type_path/trait.TypePath.html#tymethod.short_type_path\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_ident\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.type_ident\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/type_path/trait.TypePath.html#method.type_ident\" class=\"fn\">type_ident</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the name of the type, or <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy_reflect/type_path/trait.TypePath.html#anonymity\" title=\"trait bevy_reflect::type_path::TypePath\">anonymous</a>. <a href=\"bevy_reflect/type_path/trait.TypePath.html#method.type_ident\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.crate_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/type_path/trait.TypePath.html#method.crate_name\" class=\"fn\">crate_name</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the name of the crate the type is in, or <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy_reflect/type_path/trait.TypePath.html#anonymity\" title=\"trait bevy_reflect::type_path::TypePath\">anonymous</a>. <a href=\"bevy_reflect/type_path/trait.TypePath.html#method.crate_name\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.module_path\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/type_path/trait.TypePath.html#method.module_path\" class=\"fn\">module_path</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the path to the module the type is in, or <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy_reflect/type_path/trait.TypePath.html#anonymity\" title=\"trait bevy_reflect::type_path::TypePath\">anonymous</a>. <a href=\"bevy_reflect/type_path/trait.TypePath.html#method.module_path\">Read more</a></div></details></div></details>","TypePath","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Typed-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#impl-Typed-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy_reflect/type_info/trait.Typed.html\" title=\"trait bevy_reflect::type_info::Typed\">Typed</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#152-158\">source</a><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/type_info/trait.Typed.html#tymethod.type_info\" class=\"fn\">type_info</a>() -&gt; &amp;'static <a class=\"enum\" href=\"bevy_reflect/type_info/enum.TypeInfo.html\" title=\"enum bevy_reflect::type_info::TypeInfo\">TypeInfo</a></h4></section></summary><div class='docblock'>Returns the compile-time <a href=\"bevy_reflect/type_info/enum.TypeInfo.html\" title=\"enum bevy_reflect::type_info::TypeInfo\">info</a> for the underlying type.</div></details></div></details>","Typed","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#138\">source</a></span><a href=\"#impl-UpperHex-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#138\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","bevy_render::render_resource::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Value-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tracing_core/field.rs.html#517-526\">source</a><a href=\"#impl-Value-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"tracing_core/field/trait.Value.html\" title=\"trait tracing_core::field::Value\">Value</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.record\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/field.rs.html#517-526\">source</a><a href=\"#method.record\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"tracing_core/field/trait.Value.html#tymethod.record\" class=\"fn\">record</a>(&amp;self, key: &amp;<a class=\"struct\" href=\"tracing_core/field/struct.Field.html\" title=\"struct tracing_core::field::Field\">Field</a>, visitor: &amp;mut dyn <a class=\"trait\" href=\"tracing_core/field/trait.Visit.html\" title=\"trait tracing_core::field::Visit\">Visit</a>)</h4></section></summary><div class='docblock'>Visits this value with the given <code>Visitor</code>.</div></details></div></details>","Value","bevy_render::render_resource::BufferSize"],["<section id=\"impl-Copy-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#172\">source</a></span><a href=\"#impl-Copy-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a>,</div></h3></section>","Copy","bevy_render::render_resource::BufferSize"],["<section id=\"impl-Eq-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#194\">source</a></span><a href=\"#impl-Eq-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","bevy_render::render_resource::BufferSize"],["<section id=\"impl-Freeze-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#153\">source</a></span><a href=\"#impl-Freeze-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a>,</div></h3></section>","Freeze","bevy_render::render_resource::BufferSize"],["<section id=\"impl-NoUninit-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bytemuck/no_uninit.rs.html#75\">source</a><a href=\"#impl-NoUninit-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bytemuck/no_uninit/trait.NoUninit.html\" title=\"trait bytemuck::no_uninit::NoUninit\">NoUninit</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section>","NoUninit","bevy_render::render_resource::BufferSize"],["<section id=\"impl-PodInOption-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bytemuck/pod_in_option.rs.html#25\">source</a><a href=\"#impl-PodInOption-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bytemuck/pod_in_option/trait.PodInOption.html\" title=\"trait bytemuck::pod_in_option::PodInOption\">PodInOption</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section>","PodInOption","bevy_render::render_resource::BufferSize"],["<section id=\"impl-RefUnwindSafe-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#154\">source</a></span><a href=\"#impl-RefUnwindSafe-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a>,</div></h3></section>","RefUnwindSafe","bevy_render::render_resource::BufferSize"],["<section id=\"impl-Send-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#155\">source</a></span><a href=\"#impl-Send-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section>","Send","bevy_render::render_resource::BufferSize"],["<section id=\"impl-StructuralPartialEq-for-NonZero%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#191\">source</a><a href=\"#impl-StructuralPartialEq-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a>,</div></h3></section>","StructuralPartialEq","bevy_render::render_resource::BufferSize"],["<section id=\"impl-Sync-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#156\">source</a></span><a href=\"#impl-Sync-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section>","Sync","bevy_render::render_resource::BufferSize"],["<section id=\"impl-Unpin-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#157\">source</a></span><a href=\"#impl-Unpin-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,</div></h3></section>","Unpin","bevy_render::render_resource::BufferSize"],["<section id=\"impl-UnwindSafe-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#158\">source</a></span><a href=\"#impl-UnwindSafe-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a>,</div></h3></section>","UnwindSafe","bevy_render::render_resource::BufferSize"],["<section id=\"impl-ZeroableInOption-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bytemuck/zeroable_in_option.rs.html#24\">source</a><a href=\"#impl-ZeroableInOption-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bytemuck/zeroable_in_option/trait.ZeroableInOption.html\" title=\"trait bytemuck::zeroable_in_option::ZeroableInOption\">ZeroableInOption</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section>","ZeroableInOption","bevy_render::render_resource::BufferSize"]],
"serde":[],
"wgpu":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBytes-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#3234-3308\">source</a><a href=\"#impl-AsBytes-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#2720\">source</a><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerocopy/trait.AsBytes.html#method.as_bytes\" class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a href=\"zerocopy/trait.AsBytes.html#method.as_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#2871\">source</a><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerocopy/trait.AsBytes.html#method.write_to\" class=\"fn\">write_to</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>bytes</code>. <a href=\"zerocopy/trait.AsBytes.html#method.write_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#2928\">source</a><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerocopy/trait.AsBytes.html#method.write_to_prefix\" class=\"fn\">write_to_prefix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>bytes</code>. <a href=\"zerocopy/trait.AsBytes.html#method.write_to_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#2989\">source</a><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerocopy/trait.AsBytes.html#method.write_to_suffix\" class=\"fn\">write_to_suffix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>bytes</code>. <a href=\"zerocopy/trait.AsBytes.html#method.write_to_suffix\">Read more</a></div></details></div></details>","AsBytes","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#135\">source</a></span><a href=\"#impl-Binary-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#135\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Binary","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CNonZero%3CT%3E%3E-for-T\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#311-313\">source</a></span><a href=\"#impl-BitOr%3CNonZero%3CT%3E%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;&gt; for T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#318\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<NonZero<T>>","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CT%3E-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#297-299\">source</a></span><a href=\"#impl-BitOr%3CT%3E-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#304\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: T) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<T>","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#283-285\">source</a></span><a href=\"#impl-BitOr-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#290\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CT%3E-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#337-340\">source</a></span><a href=\"#impl-BitOrAssign%3CT%3E-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;T, Output = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#343\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: T)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<T>","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#325-328\">source</a></span><a href=\"#impl-BitOrAssign-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;Output = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#331\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#161-163\">source</a></span><a href=\"#impl-Clone-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#166\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#133\">source</a></span><a href=\"#impl-Debug-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#133\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#443-448\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#443-448\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#134\">source</a></span><a href=\"#impl-Display-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#134\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3CT%3E%3E-for-T\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.31.0\">1.31.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#271-273\">source</a></span><a href=\"#impl-From%3CNonZero%3CT%3E%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;&gt; for T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#276\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(nonzero: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; T</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NonZero<T>>","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu16%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#428\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu16%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#428\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u16.html\" title=\"primitive u16\">u16</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u16>>","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu32%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#431\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu32%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#431\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\" title=\"primitive u32\">u32</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u32>>","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#424\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#424\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\" title=\"primitive u8\">u8</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u8>>","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/1.79.0/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#257-259\">source</a></span><a href=\"#impl-Hash-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#262-264\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#137\">source</a></span><a href=\"#impl-LowerHex-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#137\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NonZero%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#348-350\">source</a><a href=\"#impl-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0, const since 1.47.0\">1.28.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#357\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.new\" class=\"fn\">new</a>(n: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero if the given value is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0, const since 1.28.0\">1.28.0 (const: 1.28.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#373\">source</a></span><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(n: T) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero without checking whether the value is non-zero.\nThis results in undefined behaviour if the value is zero.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>The value must not be zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#395\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.from_mut\" class=\"fn\">from_mut</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;mut T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a reference to a non-zero mutable reference\nif the referenced value is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#413\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.from_mut_unchecked\" class=\"fn\">from_mut_unchecked</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;mut T</a>) -&gt; &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a mutable reference to a non-zero mutable reference\nwithout checking whether the referenced value is non-zero.\nThis results in undefined behavior if the referenced value is zero.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>The referenced value must not be zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0, const since 1.34.0\">1.28.0 (const: 1.34.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#434\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.get\" class=\"fn\">get</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the contained value as a primitive type.</p>\n</div></details></div></details>",0,"wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a><a href=\"#impl-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0\">1.67.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a> = 64u32</h4></section></summary><div class=\"docblock\"><p>The size of this non-zero integer type in bits.</p>\n<p>This value is equal to <a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html#associatedconstant.BITS\" title=\"associated constant u64::BITS\"><code>u64::BITS</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(NonZeroU64::BITS, u64::BITS);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading zeros in the binary representation of <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>leading_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroU64::new(u64::MAX).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.leading_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing zeros in the binary representation\nof <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>trailing_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroU64::new(<span class=\"number\">0b0101000</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.trailing_zeros(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/120287\" title=\"Tracking issue for non_zero_count_ones\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>non_zero_count_ones</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the number of ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(non_zero_count_ones)]\n\n</span><span class=\"kw\">let </span>a = NonZero::&lt;u64&gt;::new(<span class=\"number\">0b100_0000</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>b = NonZero::&lt;u64&gt;::new(<span class=\"number\">0b100_0011</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(a.count_ones(), NonZero::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>);\n<span class=\"macro\">assert_eq!</span>(b.count_ones(), NonZero::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The smallest value that can be represented by this non-zero\ninteger type, 1.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU64::MIN.get(), <span class=\"number\">1u64</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The largest value that can be represented by this non-zero\ninteger type,\nequal to <a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html#associatedconstant.MAX\" title=\"associated constant u64::MAX\"><code>u64::MAX</code></a>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU64::MAX.get(), u64::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>one = NonZeroU64::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(two), one.checked_add(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_add(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value.\nReturn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant core::num::nonzero::NonZero::MAX\"><code>NonZeroU64::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>one = NonZeroU64::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(two, one.saturating_add(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_add(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_add\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.unchecked_add\" class=\"fn\">unchecked_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self + rhs &gt; u64::MAX</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>one = NonZeroU64::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(two, <span class=\"kw\">unsafe </span>{ one.unchecked_add(<span class=\"number\">1</span>) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.checked_next_power_of_two\" class=\"fn\">checked_next_power_of_two</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to n.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\nif the next power of two is greater than the type’s maximum value.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>three = NonZeroU64::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU64::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(two), two.checked_next_power_of_two() );\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), three.checked_next_power_of_two() );\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_next_power_of_two() );</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog2\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.ilog2\" class=\"fn\">ilog2</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 2 logarithm of the number, rounded down.</p>\n<p>This is the same operation as\n<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html#method.ilog2\" title=\"method u64::ilog2\"><code>u64::ilog2</code></a>,\nexcept that it has no failure cases to worry about\nsince this value can never be zero.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">7</span>).unwrap().ilog2(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">8</span>).unwrap().ilog2(), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">9</span>).unwrap().ilog2(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog10\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.ilog10\" class=\"fn\">ilog10</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 10 logarithm of the number, rounded down.</p>\n<p>This is the same operation as\n<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html#method.ilog10\" title=\"method u64::ilog10\"><code>u64::ilog10</code></a>,\nexcept that it has no failure cases to worry about\nsince this value can never be zero.</p>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">99</span>).unwrap().ilog10(), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">100</span>).unwrap().ilog10(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">101</span>).unwrap().ilog10(), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.midpoint\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/110840\" title=\"Tracking issue for const_num_midpoint\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.midpoint\" class=\"fn\">midpoint</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>num_midpoint</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the middle point of <code>self</code> and <code>rhs</code>.</p>\n<p><code>midpoint(a, b)</code> is <code>(a + b) &gt;&gt; 1</code> as if it were performed in a\nsufficiently-large signed integral type. This implies that the result is\nalways rounded towards negative infinity and that no overflow will ever occur.</p>\n<h5 id=\"examples-12\"><a class=\"doc-anchor\" href=\"#examples-12\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(num_midpoint)]\n\n</span><span class=\"kw\">let </span>one = NonZeroU64::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU64::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(one.midpoint(four), two);\n<span class=\"macro\">assert_eq!</span>(four.midpoint(one), two);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.59.0, const since 1.59.0\">1.59.0 (const: 1.59.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.is_power_of_two\" class=\"fn\">is_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if and only if <code>self == (1 &lt;&lt; k)</code> for some <code>k</code>.</p>\n<p>On many architectures, this function can perform better than <code>is_power_of_two()</code>\non the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-13\"><a class=\"doc-anchor\" href=\"#examples-13\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>eight = std::num::NonZeroU64::new(<span class=\"number\">8</span>).unwrap();\n<span class=\"macro\">assert!</span>(eight.is_power_of_two());\n<span class=\"kw\">let </span>ten = std::num::NonZeroU64::new(<span class=\"number\">10</span>).unwrap();\n<span class=\"macro\">assert!</span>(!ten.is_power_of_two());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-14\"><a class=\"doc-anchor\" href=\"#examples-14\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU64::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), two.checked_mul(two));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_mul(two));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nReturn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant core::num::nonzero::NonZero::MAX\"><code>NonZeroU64::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-15\"><a class=\"doc-anchor\" href=\"#examples-15\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU64::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, two.saturating_mul(two));\n<span class=\"macro\">assert_eq!</span>(max, four.saturating_mul(max));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.unchecked_mul\" class=\"fn\">unchecked_mul</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self * rhs &gt; u64::MAX</code>.</p>\n<h5 id=\"examples-16\"><a class=\"doc-anchor\" href=\"#examples-16\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU64::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, <span class=\"kw\">unsafe </span>{ two.unchecked_mul(two) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.checked_pow\" class=\"fn\">checked_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Raises non-zero value to an integer power.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-17\"><a class=\"doc-anchor\" href=\"#examples-17\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroU64::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroU64::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>half_max = NonZeroU64::new(u64::MAX / <span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(twenty_seven), three.checked_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, half_max.checked_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#1653-1656\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#tymethod.saturating_pow\" class=\"fn\">saturating_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Raise non-zero value to an integer power.\nReturn <a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant core::num::nonzero::NonZero::MAX\"><code>NonZeroU64::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-18\"><a class=\"doc-anchor\" href=\"#examples-18\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroU64::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroU64::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(twenty_seven, three.saturating_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details></div></details>",0,"wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#136\">source</a></span><a href=\"#impl-Octal-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Octal.html\" title=\"trait core::fmt::Octal\">Octal</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Octal.html\" title=\"trait core::fmt::Octal\">Octal</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#136\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Octal","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#228-230\">source</a></span><a href=\"#impl-Ord-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#233\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#238\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#244\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#250\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;, max: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#175-177\">source</a></span><a href=\"#impl-PartialEq-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#180\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#185\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#197-199\">source</a></span><a href=\"#impl-PartialOrd-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#202\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#207\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#212\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#217\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#222\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#634-641\">source</a><a href=\"#impl-Serialize-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#634-641\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#540\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#540\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i128.html\">i128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i128.html\">i128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i128.html\" title=\"primitive i128\">i128</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i128>>","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci16%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#537\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci16%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#537\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i16.html\">i16</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i16.html\">i16</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i16.html\" title=\"primitive i16\">i16</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i16>>","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#538\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#538\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i32.html\">i32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i32.html\">i32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i32.html\" title=\"primitive i32\">i32</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i32>>","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#539\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#539\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i64.html\">i64</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i64.html\">i64</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i64.html\" title=\"primitive i64\">i64</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i64>>","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci8%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#536\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci8%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#536\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i8.html\">i8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i8.html\">i8</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i8.html\" title=\"primitive i8\">i8</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i8>>","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#541\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#541\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.isize.html\">isize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.isize.html\">isize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.isize.html\" title=\"primitive isize\">isize</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<isize>>","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#517\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#517\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u128.html\">u128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u128.html\">u128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u128.html\" title=\"primitive u128\">u128</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u128>>","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#518\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#518\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\" title=\"primitive usize\">usize</a>&gt;</code> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<usize>>","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu64%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#484\">source</a></span><a href=\"#impl-TryFrom%3Cu64%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/convert/num.rs.html#484\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a> \nto <code><a href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\" title=\"primitive u64\">u64</a>&gt;</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<u64>","wgpu::BufferSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#138\">source</a></span><a href=\"#impl-UpperHex-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#138\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","wgpu::BufferSize"],["<section id=\"impl-Copy-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#172\">source</a></span><a href=\"#impl-Copy-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a>,</div></h3></section>","Copy","wgpu::BufferSize"],["<section id=\"impl-Eq-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#194\">source</a></span><a href=\"#impl-Eq-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","wgpu::BufferSize"],["<section id=\"impl-Freeze-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#153\">source</a></span><a href=\"#impl-Freeze-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a>,</div></h3></section>","Freeze","wgpu::BufferSize"],["<section id=\"impl-RefUnwindSafe-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#154\">source</a></span><a href=\"#impl-RefUnwindSafe-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a>,</div></h3></section>","RefUnwindSafe","wgpu::BufferSize"],["<section id=\"impl-Send-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#155\">source</a></span><a href=\"#impl-Send-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section>","Send","wgpu::BufferSize"],["<section id=\"impl-StructuralPartialEq-for-NonZero%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#191\">source</a><a href=\"#impl-StructuralPartialEq-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a>,</div></h3></section>","StructuralPartialEq","wgpu::BufferSize"],["<section id=\"impl-Sync-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#156\">source</a></span><a href=\"#impl-Sync-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section>","Sync","wgpu::BufferSize"],["<section id=\"impl-Unpin-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#157\">source</a></span><a href=\"#impl-Unpin-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,</div></h3></section>","Unpin","wgpu::BufferSize"],["<section id=\"impl-UnwindSafe-for-NonZero%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/num/nonzero.rs.html#158\">source</a></span><a href=\"#impl-UnwindSafe-for-NonZero%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a>,</div></h3></section>","UnwindSafe","wgpu::BufferSize"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()