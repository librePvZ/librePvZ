(function() {var type_impls = {
"bevy":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bundle-for-(B0,+B1,+B2,+B3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/bundle.rs.html#271\">source</a><a href=\"#impl-Bundle-for-(B0,+B1,+B2,+B3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B0, B1, B2, B3&gt; <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(B0, B1, B2, B3)</a><div class=\"where\">where\n    B0: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B1: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B2: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B3: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_component_ids\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/bundle.rs.html#271\">source</a><a href=\"#method.get_component_ids\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.Bundle.html#tymethod.get_component_ids\" class=\"fn\">get_component_ids</a>(\n    components: &amp;<a class=\"struct\" href=\"bevy/ecs/component/struct.Components.html\" title=\"struct bevy::ecs::component::Components\">Components</a>,\n    ids: &amp;mut impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"bevy/ecs/component/struct.ComponentId.html\" title=\"struct bevy::ecs::component::ComponentId\">ComponentId</a>&gt;)\n)</h4></section></summary><div class='docblock'>Gets this <a href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\"><code>Bundle</code></a>’s component ids. This will be <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the component has not been registered.</div></details></div></details>","Bundle","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bundle-for-(B0,+B1,+B2,+B3,+B4)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/bundle.rs.html#271\">source</a><a href=\"#impl-Bundle-for-(B0,+B1,+B2,+B3,+B4)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B0, B1, B2, B3, B4&gt; <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(B0, B1, B2, B3, B4)</a><div class=\"where\">where\n    B0: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B1: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B2: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B3: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B4: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_component_ids\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/bundle.rs.html#271\">source</a><a href=\"#method.get_component_ids\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.Bundle.html#tymethod.get_component_ids\" class=\"fn\">get_component_ids</a>(\n    components: &amp;<a class=\"struct\" href=\"bevy/ecs/component/struct.Components.html\" title=\"struct bevy::ecs::component::Components\">Components</a>,\n    ids: &amp;mut impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"bevy/ecs/component/struct.ComponentId.html\" title=\"struct bevy::ecs::component::ComponentId\">ComponentId</a>&gt;)\n)</h4></section></summary><div class='docblock'>Gets this <a href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\"><code>Bundle</code></a>’s component ids. This will be <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the component has not been registered.</div></details></div></details>","Bundle","bevy::pbr::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bundle-for-(B0,+B1,+B2,+B3,+B4,+B5,+B6)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/bundle.rs.html#271\">source</a><a href=\"#impl-Bundle-for-(B0,+B1,+B2,+B3,+B4,+B5,+B6)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B0, B1, B2, B3, B4, B5, B6&gt; <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(B0, B1, B2, B3, B4, B5, B6)</a><div class=\"where\">where\n    B0: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B1: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B2: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B3: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B4: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B5: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B6: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_component_ids\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/bundle.rs.html#271\">source</a><a href=\"#method.get_component_ids\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.Bundle.html#tymethod.get_component_ids\" class=\"fn\">get_component_ids</a>(\n    components: &amp;<a class=\"struct\" href=\"bevy/ecs/component/struct.Components.html\" title=\"struct bevy::ecs::component::Components\">Components</a>,\n    ids: &amp;mut impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"bevy/ecs/component/struct.ComponentId.html\" title=\"struct bevy::ecs::component::ComponentId\">ComponentId</a>&gt;)\n)</h4></section></summary><div class='docblock'>Gets this <a href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\"><code>Bundle</code></a>’s component ids. This will be <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if the component has not been registered.</div></details></div></details>","Bundle","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-(T0,+T1,+T2,+T3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#1492-1508\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-(T0,+T1,+T2,+T3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T0, T1, T2, T3&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T0, T1, T2, T3)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T1: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T2: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T3: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#1492-1508\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T0, T1, T2, T3)</a>, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-(T0,+T1,+T2,+T3,+T4)\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#1492-1508\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-(T0,+T1,+T2,+T3,+T4)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T0, T1, T2, T3, T4&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T1: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T2: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T3: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T4: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#1492-1508\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4)</a>, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","bevy::pbr::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-(T0,+T1,+T2,+T3,+T4,+T5,+T6)\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#1492-1508\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-(T0,+T1,+T2,+T3,+T4,+T5,+T6)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T0, T1, T2, T3, T4, T5, T6&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T1: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T2: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T3: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T4: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T5: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T6: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#1492-1508\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6)</a>, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ExclusiveSystemParam-for-(P0,+P1,+P2,+P3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/exclusive_system_param.rs.html#116\">source</a><a href=\"#impl-ExclusiveSystemParam-for-(P0,+P1,+P2,+P3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P0, P1, P2, P3&gt; <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3)</a><div class=\"where\">where\n    P0: <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>,\n    P1: <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>,\n    P2: <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>,\n    P3: <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.State\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.State\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" class=\"associatedtype\">State</a> = (&lt;P0 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::ExclusiveSystemParam::State\">State</a>, &lt;P1 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::ExclusiveSystemParam::State\">State</a>, &lt;P2 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::ExclusiveSystemParam::State\">State</a>, &lt;P3 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::ExclusiveSystemParam::State\">State</a>)</h4></section></summary><div class='docblock'>Used to store data which persists across invocations of a system.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.Item\" class=\"associatedtype\">Item</a>&lt;'s&gt; = (&lt;P0 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::ExclusiveSystemParam::Item\">Item</a>&lt;'s&gt;, &lt;P1 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::ExclusiveSystemParam::Item\">Item</a>&lt;'s&gt;, &lt;P2 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::ExclusiveSystemParam::Item\">Item</a>&lt;'s&gt;, &lt;P3 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::ExclusiveSystemParam::Item\">Item</a>&lt;'s&gt;)</h4></section></summary><div class='docblock'>The item type returned when constructing this system param.\nSee <a href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"associated type bevy::ecs::system::SystemParam::Item\"><code>SystemParam::Item</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/exclusive_system_param.rs.html#116\">source</a><a href=\"#method.init\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#tymethod.init\" class=\"fn\">init</a>(\n    _world: &amp;mut <a class=\"struct\" href=\"bevy/ecs/prelude/struct.World.html\" title=\"struct bevy::ecs::prelude::World\">World</a>,\n    _system_meta: &amp;mut <a class=\"struct\" href=\"bevy/ecs/system/struct.SystemMeta.html\" title=\"struct bevy::ecs::system::SystemMeta\">SystemMeta</a>\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::ExclusiveSystemParam::State\">State</a></h4></section></summary><div class='docblock'>Creates a new instance of this param’s <a href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"associated type bevy_ecs::system::exclusive_system_param::ExclusiveSystemParam::State::State\"><code>State</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_param\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/exclusive_system_param.rs.html#116\">source</a><a href=\"#method.get_param\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#tymethod.get_param\" class=\"fn\">get_param</a>&lt;'s&gt;(\n    state: &amp;'s mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::ExclusiveSystemParam::State\">State</a>,\n    system_meta: &amp;<a class=\"struct\" href=\"bevy/ecs/system/struct.SystemMeta.html\" title=\"struct bevy::ecs::system::SystemMeta\">SystemMeta</a>\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::ExclusiveSystemParam::Item\">Item</a>&lt;'s&gt;</h4></section></summary><div class='docblock'>Creates a parameter to be passed into an <a href=\"bevy/ecs/system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParamFunction\"><code>ExclusiveSystemParamFunction</code></a>.</div></details></div></details>","ExclusiveSystemParam","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ExclusiveSystemParam-for-(P0,+P1,+P2,+P3,+P4)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/exclusive_system_param.rs.html#116\">source</a><a href=\"#impl-ExclusiveSystemParam-for-(P0,+P1,+P2,+P3,+P4)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P0, P1, P2, P3, P4&gt; <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4)</a><div class=\"where\">where\n    P0: <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>,\n    P1: <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>,\n    P2: <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>,\n    P3: <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>,\n    P4: <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.State\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.State\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" class=\"associatedtype\">State</a> = (&lt;P0 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::ExclusiveSystemParam::State\">State</a>, &lt;P1 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::ExclusiveSystemParam::State\">State</a>, &lt;P2 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::ExclusiveSystemParam::State\">State</a>, &lt;P3 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::ExclusiveSystemParam::State\">State</a>, &lt;P4 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::ExclusiveSystemParam::State\">State</a>)</h4></section></summary><div class='docblock'>Used to store data which persists across invocations of a system.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.Item\" class=\"associatedtype\">Item</a>&lt;'s&gt; = (&lt;P0 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::ExclusiveSystemParam::Item\">Item</a>&lt;'s&gt;, &lt;P1 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::ExclusiveSystemParam::Item\">Item</a>&lt;'s&gt;, &lt;P2 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::ExclusiveSystemParam::Item\">Item</a>&lt;'s&gt;, &lt;P3 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::ExclusiveSystemParam::Item\">Item</a>&lt;'s&gt;, &lt;P4 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::ExclusiveSystemParam::Item\">Item</a>&lt;'s&gt;)</h4></section></summary><div class='docblock'>The item type returned when constructing this system param.\nSee <a href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"associated type bevy::ecs::system::SystemParam::Item\"><code>SystemParam::Item</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/exclusive_system_param.rs.html#116\">source</a><a href=\"#method.init\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#tymethod.init\" class=\"fn\">init</a>(\n    _world: &amp;mut <a class=\"struct\" href=\"bevy/ecs/prelude/struct.World.html\" title=\"struct bevy::ecs::prelude::World\">World</a>,\n    _system_meta: &amp;mut <a class=\"struct\" href=\"bevy/ecs/system/struct.SystemMeta.html\" title=\"struct bevy::ecs::system::SystemMeta\">SystemMeta</a>\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::ExclusiveSystemParam::State\">State</a></h4></section></summary><div class='docblock'>Creates a new instance of this param’s <a href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"associated type bevy_ecs::system::exclusive_system_param::ExclusiveSystemParam::State::State\"><code>State</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_param\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/exclusive_system_param.rs.html#116\">source</a><a href=\"#method.get_param\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#tymethod.get_param\" class=\"fn\">get_param</a>&lt;'s&gt;(\n    state: &amp;'s mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::ExclusiveSystemParam::State\">State</a>,\n    system_meta: &amp;<a class=\"struct\" href=\"bevy/ecs/system/struct.SystemMeta.html\" title=\"struct bevy::ecs::system::SystemMeta\">SystemMeta</a>\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::ExclusiveSystemParam::Item\">Item</a>&lt;'s&gt;</h4></section></summary><div class='docblock'>Creates a parameter to be passed into an <a href=\"bevy/ecs/system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParamFunction\"><code>ExclusiveSystemParamFunction</code></a>.</div></details></div></details>","ExclusiveSystemParam","bevy::pbr::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ExclusiveSystemParam-for-(P0,+P1,+P2,+P3,+P4,+P5,+P6)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/exclusive_system_param.rs.html#116\">source</a><a href=\"#impl-ExclusiveSystemParam-for-(P0,+P1,+P2,+P3,+P4,+P5,+P6)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P0, P1, P2, P3, P4, P5, P6&gt; <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4, P5, P6)</a><div class=\"where\">where\n    P0: <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>,\n    P1: <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>,\n    P2: <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>,\n    P3: <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>,\n    P4: <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>,\n    P5: <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>,\n    P6: <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.State\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.State\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" class=\"associatedtype\">State</a> = (&lt;P0 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::ExclusiveSystemParam::State\">State</a>, &lt;P1 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::ExclusiveSystemParam::State\">State</a>, &lt;P2 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::ExclusiveSystemParam::State\">State</a>, &lt;P3 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::ExclusiveSystemParam::State\">State</a>, &lt;P4 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::ExclusiveSystemParam::State\">State</a>, &lt;P5 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::ExclusiveSystemParam::State\">State</a>, &lt;P6 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::ExclusiveSystemParam::State\">State</a>)</h4></section></summary><div class='docblock'>Used to store data which persists across invocations of a system.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.Item\" class=\"associatedtype\">Item</a>&lt;'s&gt; = (&lt;P0 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::ExclusiveSystemParam::Item\">Item</a>&lt;'s&gt;, &lt;P1 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::ExclusiveSystemParam::Item\">Item</a>&lt;'s&gt;, &lt;P2 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::ExclusiveSystemParam::Item\">Item</a>&lt;'s&gt;, &lt;P3 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::ExclusiveSystemParam::Item\">Item</a>&lt;'s&gt;, &lt;P4 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::ExclusiveSystemParam::Item\">Item</a>&lt;'s&gt;, &lt;P5 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::ExclusiveSystemParam::Item\">Item</a>&lt;'s&gt;, &lt;P6 as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::ExclusiveSystemParam::Item\">Item</a>&lt;'s&gt;)</h4></section></summary><div class='docblock'>The item type returned when constructing this system param.\nSee <a href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"associated type bevy::ecs::system::SystemParam::Item\"><code>SystemParam::Item</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/exclusive_system_param.rs.html#116\">source</a><a href=\"#method.init\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#tymethod.init\" class=\"fn\">init</a>(\n    _world: &amp;mut <a class=\"struct\" href=\"bevy/ecs/prelude/struct.World.html\" title=\"struct bevy::ecs::prelude::World\">World</a>,\n    _system_meta: &amp;mut <a class=\"struct\" href=\"bevy/ecs/system/struct.SystemMeta.html\" title=\"struct bevy::ecs::system::SystemMeta\">SystemMeta</a>\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4, P5, P6)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::ExclusiveSystemParam::State\">State</a></h4></section></summary><div class='docblock'>Creates a new instance of this param’s <a href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"associated type bevy_ecs::system::exclusive_system_param::ExclusiveSystemParam::State::State\"><code>State</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_param\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/exclusive_system_param.rs.html#116\">source</a><a href=\"#method.get_param\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#tymethod.get_param\" class=\"fn\">get_param</a>&lt;'s&gt;(\n    state: &amp;'s mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4, P5, P6)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::ExclusiveSystemParam::State\">State</a>,\n    system_meta: &amp;<a class=\"struct\" href=\"bevy/ecs/system/struct.SystemMeta.html\" title=\"struct bevy::ecs::system::SystemMeta\">SystemMeta</a>\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4, P5, P6)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParam\">ExclusiveSystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::ExclusiveSystemParam::Item\">Item</a>&lt;'s&gt;</h4></section></summary><div class='docblock'>Creates a parameter to be passed into an <a href=\"bevy/ecs/system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParamFunction\"><code>ExclusiveSystemParamFunction</code></a>.</div></details></div></details>","ExclusiveSystemParam","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+4%5D%3E-for-(T,+T,+T,+T)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/tuple.rs.html#201\">source</a></span><a href=\"#impl-From%3C%5BT;+4%5D%3E-for-(T,+T,+T,+T)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">[T; 4]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T, T, T, T)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/tuple.rs.html#201\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">[T; 4]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T, T, T, T)</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 4]>","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+5%5D%3E-for-(T,+T,+T,+T,+T)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/tuple.rs.html#201\">source</a></span><a href=\"#impl-From%3C%5BT;+5%5D%3E-for-(T,+T,+T,+T,+T)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">[T; 5]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T, T, T, T, T)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/tuple.rs.html#201\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">[T; 5]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T, T, T, T, T)</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 5]>","bevy::pbr::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+7%5D%3E-for-(T,+T,+T,+T,+T,+T,+T)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/tuple.rs.html#201\">source</a></span><a href=\"#impl-From%3C%5BT;+7%5D%3E-for-(T,+T,+T,+T,+T,+T,+T)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">[T; 7]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T, T, T, T, T, T, T)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.79.0/src/core/tuple.rs.html#201\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">[T; 7]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T, T, T, T, T, T, T)</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 7]>","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromReflect-for-(A,+B,+C,+D)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#impl-FromReflect-for-(A,+B,+C,+D)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D&gt; <a class=\"trait\" href=\"bevy/reflect/trait.FromReflect.html\" title=\"trait bevy::reflect::FromReflect\">FromReflect</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"bevy/reflect/trait.FromReflect.html\" title=\"trait bevy::reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    B: <a class=\"trait\" href=\"bevy/reflect/trait.FromReflect.html\" title=\"trait bevy::reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    C: <a class=\"trait\" href=\"bevy/reflect/trait.FromReflect.html\" title=\"trait bevy::reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    D: <a class=\"trait\" href=\"bevy/reflect/trait.FromReflect.html\" title=\"trait bevy::reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.from_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.FromReflect.html#tymethod.from_reflect\" class=\"fn\">from_reflect</a>(reflect: &amp;(dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;</h4></section></summary><div class='docblock'>Constructs a concrete instance of <code>Self</code> from a reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_from_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/from_reflect.rs.html#42\">source</a><a href=\"#method.take_from_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.FromReflect.html#method.take_from_reflect\" class=\"fn\">take_from_reflect</a>(\n    reflect: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to downcast the given value to <code>Self</code> using,\nconstructing the value using <a href=\"bevy/reflect/trait.FromReflect.html#tymethod.from_reflect\" title=\"associated function bevy_reflect::from_reflect::FromReflect::from_reflect::from_reflect\"><code>from_reflect</code></a> if that fails. <a href=\"bevy/reflect/trait.FromReflect.html#method.take_from_reflect\">Read more</a></div></details></div></details>","FromReflect","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromReflect-for-(A,+B,+C,+D,+E)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#impl-FromReflect-for-(A,+B,+C,+D,+E)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E&gt; <a class=\"trait\" href=\"bevy/reflect/trait.FromReflect.html\" title=\"trait bevy::reflect::FromReflect\">FromReflect</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D, E)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"bevy/reflect/trait.FromReflect.html\" title=\"trait bevy::reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    B: <a class=\"trait\" href=\"bevy/reflect/trait.FromReflect.html\" title=\"trait bevy::reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    C: <a class=\"trait\" href=\"bevy/reflect/trait.FromReflect.html\" title=\"trait bevy::reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    D: <a class=\"trait\" href=\"bevy/reflect/trait.FromReflect.html\" title=\"trait bevy::reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    E: <a class=\"trait\" href=\"bevy/reflect/trait.FromReflect.html\" title=\"trait bevy::reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.from_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.FromReflect.html#tymethod.from_reflect\" class=\"fn\">from_reflect</a>(reflect: &amp;(dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;</h4></section></summary><div class='docblock'>Constructs a concrete instance of <code>Self</code> from a reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_from_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/from_reflect.rs.html#42\">source</a><a href=\"#method.take_from_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.FromReflect.html#method.take_from_reflect\" class=\"fn\">take_from_reflect</a>(\n    reflect: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to downcast the given value to <code>Self</code> using,\nconstructing the value using <a href=\"bevy/reflect/trait.FromReflect.html#tymethod.from_reflect\" title=\"associated function bevy_reflect::from_reflect::FromReflect::from_reflect::from_reflect\"><code>from_reflect</code></a> if that fails. <a href=\"bevy/reflect/trait.FromReflect.html#method.take_from_reflect\">Read more</a></div></details></div></details>","FromReflect","bevy::pbr::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromReflect-for-(A,+B,+C,+D,+E,+F,+G)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#impl-FromReflect-for-(A,+B,+C,+D,+E,+F,+G)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, F, G&gt; <a class=\"trait\" href=\"bevy/reflect/trait.FromReflect.html\" title=\"trait bevy::reflect::FromReflect\">FromReflect</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"bevy/reflect/trait.FromReflect.html\" title=\"trait bevy::reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    B: <a class=\"trait\" href=\"bevy/reflect/trait.FromReflect.html\" title=\"trait bevy::reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    C: <a class=\"trait\" href=\"bevy/reflect/trait.FromReflect.html\" title=\"trait bevy::reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    D: <a class=\"trait\" href=\"bevy/reflect/trait.FromReflect.html\" title=\"trait bevy::reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    E: <a class=\"trait\" href=\"bevy/reflect/trait.FromReflect.html\" title=\"trait bevy::reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    F: <a class=\"trait\" href=\"bevy/reflect/trait.FromReflect.html\" title=\"trait bevy::reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    G: <a class=\"trait\" href=\"bevy/reflect/trait.FromReflect.html\" title=\"trait bevy::reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.from_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.FromReflect.html#tymethod.from_reflect\" class=\"fn\">from_reflect</a>(\n    reflect: &amp;(dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;</h4></section></summary><div class='docblock'>Constructs a concrete instance of <code>Self</code> from a reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_from_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/from_reflect.rs.html#42\">source</a><a href=\"#method.take_from_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.FromReflect.html#method.take_from_reflect\" class=\"fn\">take_from_reflect</a>(\n    reflect: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to downcast the given value to <code>Self</code> using,\nconstructing the value using <a href=\"bevy/reflect/trait.FromReflect.html#tymethod.from_reflect\" title=\"associated function bevy_reflect::from_reflect::FromReflect::from_reflect::from_reflect\"><code>from_reflect</code></a> if that fails. <a href=\"bevy/reflect/trait.FromReflect.html#method.take_from_reflect\">Read more</a></div></details></div></details>","FromReflect","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetTypeRegistration-for-(A,+B,+C,+D)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#impl-GetTypeRegistration-for-(A,+B,+C,+D)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D&gt; <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    B: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    C: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    D: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_type_registration\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.get_type_registration\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.GetTypeRegistration.html#tymethod.get_type_registration\" class=\"fn\">get_type_registration</a>() -&gt; <a class=\"struct\" href=\"bevy/reflect/struct.TypeRegistration.html\" title=\"struct bevy::reflect::TypeRegistration\">TypeRegistration</a></h4></section></summary><div class='docblock'>Returns the default <a href=\"bevy/reflect/struct.TypeRegistration.html\" title=\"struct bevy::reflect::TypeRegistration\"><code>TypeRegistration</code></a> for this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_type_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.register_type_dependencies\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.GetTypeRegistration.html#method.register_type_dependencies\" class=\"fn\">register_type_dependencies</a>(_registry: &amp;mut <a class=\"struct\" href=\"bevy/reflect/struct.TypeRegistry.html\" title=\"struct bevy::reflect::TypeRegistry\">TypeRegistry</a>)</h4></section></summary><div class='docblock'>Registers other types needed by this type. <a href=\"bevy/reflect/trait.GetTypeRegistration.html#method.register_type_dependencies\">Read more</a></div></details></div></details>","GetTypeRegistration","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetTypeRegistration-for-(A,+B,+C,+D,+E)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#impl-GetTypeRegistration-for-(A,+B,+C,+D,+E)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E&gt; <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D, E)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    B: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    C: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    D: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    E: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_type_registration\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.get_type_registration\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.GetTypeRegistration.html#tymethod.get_type_registration\" class=\"fn\">get_type_registration</a>() -&gt; <a class=\"struct\" href=\"bevy/reflect/struct.TypeRegistration.html\" title=\"struct bevy::reflect::TypeRegistration\">TypeRegistration</a></h4></section></summary><div class='docblock'>Returns the default <a href=\"bevy/reflect/struct.TypeRegistration.html\" title=\"struct bevy::reflect::TypeRegistration\"><code>TypeRegistration</code></a> for this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_type_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.register_type_dependencies\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.GetTypeRegistration.html#method.register_type_dependencies\" class=\"fn\">register_type_dependencies</a>(_registry: &amp;mut <a class=\"struct\" href=\"bevy/reflect/struct.TypeRegistry.html\" title=\"struct bevy::reflect::TypeRegistry\">TypeRegistry</a>)</h4></section></summary><div class='docblock'>Registers other types needed by this type. <a href=\"bevy/reflect/trait.GetTypeRegistration.html#method.register_type_dependencies\">Read more</a></div></details></div></details>","GetTypeRegistration","bevy::pbr::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetTypeRegistration-for-(A,+B,+C,+D,+E,+F,+G)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#impl-GetTypeRegistration-for-(A,+B,+C,+D,+E,+F,+G)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, F, G&gt; <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    B: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    C: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    D: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    E: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    F: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    G: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_type_registration\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.get_type_registration\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.GetTypeRegistration.html#tymethod.get_type_registration\" class=\"fn\">get_type_registration</a>() -&gt; <a class=\"struct\" href=\"bevy/reflect/struct.TypeRegistration.html\" title=\"struct bevy::reflect::TypeRegistration\">TypeRegistration</a></h4></section></summary><div class='docblock'>Returns the default <a href=\"bevy/reflect/struct.TypeRegistration.html\" title=\"struct bevy::reflect::TypeRegistration\"><code>TypeRegistration</code></a> for this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_type_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.register_type_dependencies\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.GetTypeRegistration.html#method.register_type_dependencies\" class=\"fn\">register_type_dependencies</a>(_registry: &amp;mut <a class=\"struct\" href=\"bevy/reflect/struct.TypeRegistry.html\" title=\"struct bevy::reflect::TypeRegistry\">TypeRegistry</a>)</h4></section></summary><div class='docblock'>Registers other types needed by this type. <a href=\"bevy/reflect/trait.GetTypeRegistration.html#method.register_type_dependencies\">Read more</a></div></details></div></details>","GetTypeRegistration","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoBindGroupLayoutEntryBuilderArray%3C4%3E-for-(T0,+T1,+T2,+T3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_resource/bind_group_layout_entries.rs.html#255\">source</a><a href=\"#impl-IntoBindGroupLayoutEntryBuilderArray%3C4%3E-for-(T0,+T1,+T2,+T3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3&gt; <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBindGroupLayoutEntryBuilderArray.html\" title=\"trait bevy::render::render_resource::IntoBindGroupLayoutEntryBuilderArray\">IntoBindGroupLayoutEntryBuilderArray</a>&lt;4&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T0, T1, T2, T3)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBindGroupLayoutEntryBuilder.html\" title=\"trait bevy::render::render_resource::IntoBindGroupLayoutEntryBuilder\">IntoBindGroupLayoutEntryBuilder</a>,\n    T1: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBindGroupLayoutEntryBuilder.html\" title=\"trait bevy::render::render_resource::IntoBindGroupLayoutEntryBuilder\">IntoBindGroupLayoutEntryBuilder</a>,\n    T2: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBindGroupLayoutEntryBuilder.html\" title=\"trait bevy::render::render_resource::IntoBindGroupLayoutEntryBuilder\">IntoBindGroupLayoutEntryBuilder</a>,\n    T3: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBindGroupLayoutEntryBuilder.html\" title=\"trait bevy::render::render_resource::IntoBindGroupLayoutEntryBuilder\">IntoBindGroupLayoutEntryBuilder</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_array\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_resource/bind_group_layout_entries.rs.html#255\">source</a><a href=\"#method.into_array\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_resource/trait.IntoBindGroupLayoutEntryBuilderArray.html#tymethod.into_array\" class=\"fn\">into_array</a>(self) -&gt; [<a class=\"struct\" href=\"bevy/render/render_resource/struct.BindGroupLayoutEntryBuilder.html\" title=\"struct bevy::render::render_resource::BindGroupLayoutEntryBuilder\">BindGroupLayoutEntryBuilder</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">4</a>]</h4></section></div></details>","IntoBindGroupLayoutEntryBuilderArray<4>","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoBindGroupLayoutEntryBuilderArray%3C5%3E-for-(T0,+T1,+T2,+T3,+T4)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_resource/bind_group_layout_entries.rs.html#255\">source</a><a href=\"#impl-IntoBindGroupLayoutEntryBuilderArray%3C5%3E-for-(T0,+T1,+T2,+T3,+T4)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4&gt; <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBindGroupLayoutEntryBuilderArray.html\" title=\"trait bevy::render::render_resource::IntoBindGroupLayoutEntryBuilderArray\">IntoBindGroupLayoutEntryBuilderArray</a>&lt;5&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBindGroupLayoutEntryBuilder.html\" title=\"trait bevy::render::render_resource::IntoBindGroupLayoutEntryBuilder\">IntoBindGroupLayoutEntryBuilder</a>,\n    T1: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBindGroupLayoutEntryBuilder.html\" title=\"trait bevy::render::render_resource::IntoBindGroupLayoutEntryBuilder\">IntoBindGroupLayoutEntryBuilder</a>,\n    T2: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBindGroupLayoutEntryBuilder.html\" title=\"trait bevy::render::render_resource::IntoBindGroupLayoutEntryBuilder\">IntoBindGroupLayoutEntryBuilder</a>,\n    T3: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBindGroupLayoutEntryBuilder.html\" title=\"trait bevy::render::render_resource::IntoBindGroupLayoutEntryBuilder\">IntoBindGroupLayoutEntryBuilder</a>,\n    T4: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBindGroupLayoutEntryBuilder.html\" title=\"trait bevy::render::render_resource::IntoBindGroupLayoutEntryBuilder\">IntoBindGroupLayoutEntryBuilder</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_array\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_resource/bind_group_layout_entries.rs.html#255\">source</a><a href=\"#method.into_array\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_resource/trait.IntoBindGroupLayoutEntryBuilderArray.html#tymethod.into_array\" class=\"fn\">into_array</a>(self) -&gt; [<a class=\"struct\" href=\"bevy/render/render_resource/struct.BindGroupLayoutEntryBuilder.html\" title=\"struct bevy::render::render_resource::BindGroupLayoutEntryBuilder\">BindGroupLayoutEntryBuilder</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">5</a>]</h4></section></div></details>","IntoBindGroupLayoutEntryBuilderArray<5>","bevy::pbr::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoBindGroupLayoutEntryBuilderArray%3C7%3E-for-(T0,+T1,+T2,+T3,+T4,+T5,+T6)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_resource/bind_group_layout_entries.rs.html#255\">source</a><a href=\"#impl-IntoBindGroupLayoutEntryBuilderArray%3C7%3E-for-(T0,+T1,+T2,+T3,+T4,+T5,+T6)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6&gt; <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBindGroupLayoutEntryBuilderArray.html\" title=\"trait bevy::render::render_resource::IntoBindGroupLayoutEntryBuilderArray\">IntoBindGroupLayoutEntryBuilderArray</a>&lt;7&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBindGroupLayoutEntryBuilder.html\" title=\"trait bevy::render::render_resource::IntoBindGroupLayoutEntryBuilder\">IntoBindGroupLayoutEntryBuilder</a>,\n    T1: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBindGroupLayoutEntryBuilder.html\" title=\"trait bevy::render::render_resource::IntoBindGroupLayoutEntryBuilder\">IntoBindGroupLayoutEntryBuilder</a>,\n    T2: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBindGroupLayoutEntryBuilder.html\" title=\"trait bevy::render::render_resource::IntoBindGroupLayoutEntryBuilder\">IntoBindGroupLayoutEntryBuilder</a>,\n    T3: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBindGroupLayoutEntryBuilder.html\" title=\"trait bevy::render::render_resource::IntoBindGroupLayoutEntryBuilder\">IntoBindGroupLayoutEntryBuilder</a>,\n    T4: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBindGroupLayoutEntryBuilder.html\" title=\"trait bevy::render::render_resource::IntoBindGroupLayoutEntryBuilder\">IntoBindGroupLayoutEntryBuilder</a>,\n    T5: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBindGroupLayoutEntryBuilder.html\" title=\"trait bevy::render::render_resource::IntoBindGroupLayoutEntryBuilder\">IntoBindGroupLayoutEntryBuilder</a>,\n    T6: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBindGroupLayoutEntryBuilder.html\" title=\"trait bevy::render::render_resource::IntoBindGroupLayoutEntryBuilder\">IntoBindGroupLayoutEntryBuilder</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_array\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_resource/bind_group_layout_entries.rs.html#255\">source</a><a href=\"#method.into_array\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_resource/trait.IntoBindGroupLayoutEntryBuilderArray.html#tymethod.into_array\" class=\"fn\">into_array</a>(self) -&gt; [<a class=\"struct\" href=\"bevy/render/render_resource/struct.BindGroupLayoutEntryBuilder.html\" title=\"struct bevy::render::render_resource::BindGroupLayoutEntryBuilder\">BindGroupLayoutEntryBuilder</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">7</a>]</h4></section></div></details>","IntoBindGroupLayoutEntryBuilderArray<7>","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoBindingArray%3C'b,+4%3E-for-(T0,+T1,+T2,+T3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_resource/bind_group_entries.rs.html#195\">source</a><a href=\"#impl-IntoBindingArray%3C'b,+4%3E-for-(T0,+T1,+T2,+T3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T0, T1, T2, T3&gt; <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBindingArray.html\" title=\"trait bevy::render::render_resource::IntoBindingArray\">IntoBindingArray</a>&lt;'b, 4&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T0, T1, T2, T3)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBinding.html\" title=\"trait bevy::render::render_resource::IntoBinding\">IntoBinding</a>&lt;'b&gt;,\n    T1: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBinding.html\" title=\"trait bevy::render::render_resource::IntoBinding\">IntoBinding</a>&lt;'b&gt;,\n    T2: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBinding.html\" title=\"trait bevy::render::render_resource::IntoBinding\">IntoBinding</a>&lt;'b&gt;,\n    T3: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBinding.html\" title=\"trait bevy::render::render_resource::IntoBinding\">IntoBinding</a>&lt;'b&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_array\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_resource/bind_group_entries.rs.html#195\">source</a><a href=\"#method.into_array\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_resource/trait.IntoBindingArray.html#tymethod.into_array\" class=\"fn\">into_array</a>(self) -&gt; [<a class=\"enum\" href=\"bevy/render/render_resource/enum.BindingResource.html\" title=\"enum bevy::render::render_resource::BindingResource\">BindingResource</a>&lt;'b&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">4</a>]</h4></section></div></details>","IntoBindingArray<'b, 4>","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoBindingArray%3C'b,+5%3E-for-(T0,+T1,+T2,+T3,+T4)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_resource/bind_group_entries.rs.html#195\">source</a><a href=\"#impl-IntoBindingArray%3C'b,+5%3E-for-(T0,+T1,+T2,+T3,+T4)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T0, T1, T2, T3, T4&gt; <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBindingArray.html\" title=\"trait bevy::render::render_resource::IntoBindingArray\">IntoBindingArray</a>&lt;'b, 5&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBinding.html\" title=\"trait bevy::render::render_resource::IntoBinding\">IntoBinding</a>&lt;'b&gt;,\n    T1: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBinding.html\" title=\"trait bevy::render::render_resource::IntoBinding\">IntoBinding</a>&lt;'b&gt;,\n    T2: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBinding.html\" title=\"trait bevy::render::render_resource::IntoBinding\">IntoBinding</a>&lt;'b&gt;,\n    T3: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBinding.html\" title=\"trait bevy::render::render_resource::IntoBinding\">IntoBinding</a>&lt;'b&gt;,\n    T4: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBinding.html\" title=\"trait bevy::render::render_resource::IntoBinding\">IntoBinding</a>&lt;'b&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_array\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_resource/bind_group_entries.rs.html#195\">source</a><a href=\"#method.into_array\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_resource/trait.IntoBindingArray.html#tymethod.into_array\" class=\"fn\">into_array</a>(self) -&gt; [<a class=\"enum\" href=\"bevy/render/render_resource/enum.BindingResource.html\" title=\"enum bevy::render::render_resource::BindingResource\">BindingResource</a>&lt;'b&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">5</a>]</h4></section></div></details>","IntoBindingArray<'b, 5>","bevy::pbr::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoBindingArray%3C'b,+7%3E-for-(T0,+T1,+T2,+T3,+T4,+T5,+T6)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_resource/bind_group_entries.rs.html#195\">source</a><a href=\"#impl-IntoBindingArray%3C'b,+7%3E-for-(T0,+T1,+T2,+T3,+T4,+T5,+T6)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T0, T1, T2, T3, T4, T5, T6&gt; <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBindingArray.html\" title=\"trait bevy::render::render_resource::IntoBindingArray\">IntoBindingArray</a>&lt;'b, 7&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBinding.html\" title=\"trait bevy::render::render_resource::IntoBinding\">IntoBinding</a>&lt;'b&gt;,\n    T1: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBinding.html\" title=\"trait bevy::render::render_resource::IntoBinding\">IntoBinding</a>&lt;'b&gt;,\n    T2: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBinding.html\" title=\"trait bevy::render::render_resource::IntoBinding\">IntoBinding</a>&lt;'b&gt;,\n    T3: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBinding.html\" title=\"trait bevy::render::render_resource::IntoBinding\">IntoBinding</a>&lt;'b&gt;,\n    T4: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBinding.html\" title=\"trait bevy::render::render_resource::IntoBinding\">IntoBinding</a>&lt;'b&gt;,\n    T5: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBinding.html\" title=\"trait bevy::render::render_resource::IntoBinding\">IntoBinding</a>&lt;'b&gt;,\n    T6: <a class=\"trait\" href=\"bevy/render/render_resource/trait.IntoBinding.html\" title=\"trait bevy::render::render_resource::IntoBinding\">IntoBinding</a>&lt;'b&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_array\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_resource/bind_group_entries.rs.html#195\">source</a><a href=\"#method.into_array\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_resource/trait.IntoBindingArray.html#tymethod.into_array\" class=\"fn\">into_array</a>(self) -&gt; [<a class=\"enum\" href=\"bevy/render/render_resource/enum.BindingResource.html\" title=\"enum bevy::render::render_resource::BindingResource\">BindingResource</a>&lt;'b&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">7</a>]</h4></section></div></details>","IntoBindingArray<'b, 7>","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoRenderNodeArray%3C4%3E-for-(T0,+T1,+T2,+T3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_graph/node.rs.html#49\">source</a><a href=\"#impl-IntoRenderNodeArray%3C4%3E-for-(T0,+T1,+T2,+T3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3&gt; <a class=\"trait\" href=\"bevy/render/render_graph/trait.IntoRenderNodeArray.html\" title=\"trait bevy::render::render_graph::IntoRenderNodeArray\">IntoRenderNodeArray</a>&lt;4&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T0, T1, T2, T3)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"bevy/render/render_graph/trait.RenderLabel.html\" title=\"trait bevy::render::render_graph::RenderLabel\">RenderLabel</a>,\n    T1: <a class=\"trait\" href=\"bevy/render/render_graph/trait.RenderLabel.html\" title=\"trait bevy::render::render_graph::RenderLabel\">RenderLabel</a>,\n    T2: <a class=\"trait\" href=\"bevy/render/render_graph/trait.RenderLabel.html\" title=\"trait bevy::render::render_graph::RenderLabel\">RenderLabel</a>,\n    T3: <a class=\"trait\" href=\"bevy/render/render_graph/trait.RenderLabel.html\" title=\"trait bevy::render::render_graph::RenderLabel\">RenderLabel</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_array\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_graph/node.rs.html#49\">source</a><a href=\"#method.into_array\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_graph/trait.IntoRenderNodeArray.html#tymethod.into_array\" class=\"fn\">into_array</a>(self) -&gt; [<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/render/render_graph/trait.RenderLabel.html\" title=\"trait bevy::render::render_graph::RenderLabel\">RenderLabel</a>&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">4</a>]</h4></section></div></details>","IntoRenderNodeArray<4>","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoRenderNodeArray%3C5%3E-for-(T0,+T1,+T2,+T3,+T4)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_graph/node.rs.html#49\">source</a><a href=\"#impl-IntoRenderNodeArray%3C5%3E-for-(T0,+T1,+T2,+T3,+T4)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4&gt; <a class=\"trait\" href=\"bevy/render/render_graph/trait.IntoRenderNodeArray.html\" title=\"trait bevy::render::render_graph::IntoRenderNodeArray\">IntoRenderNodeArray</a>&lt;5&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"bevy/render/render_graph/trait.RenderLabel.html\" title=\"trait bevy::render::render_graph::RenderLabel\">RenderLabel</a>,\n    T1: <a class=\"trait\" href=\"bevy/render/render_graph/trait.RenderLabel.html\" title=\"trait bevy::render::render_graph::RenderLabel\">RenderLabel</a>,\n    T2: <a class=\"trait\" href=\"bevy/render/render_graph/trait.RenderLabel.html\" title=\"trait bevy::render::render_graph::RenderLabel\">RenderLabel</a>,\n    T3: <a class=\"trait\" href=\"bevy/render/render_graph/trait.RenderLabel.html\" title=\"trait bevy::render::render_graph::RenderLabel\">RenderLabel</a>,\n    T4: <a class=\"trait\" href=\"bevy/render/render_graph/trait.RenderLabel.html\" title=\"trait bevy::render::render_graph::RenderLabel\">RenderLabel</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_array\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_graph/node.rs.html#49\">source</a><a href=\"#method.into_array\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_graph/trait.IntoRenderNodeArray.html#tymethod.into_array\" class=\"fn\">into_array</a>(self) -&gt; [<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/render/render_graph/trait.RenderLabel.html\" title=\"trait bevy::render::render_graph::RenderLabel\">RenderLabel</a>&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">5</a>]</h4></section></div></details>","IntoRenderNodeArray<5>","bevy::pbr::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoRenderNodeArray%3C7%3E-for-(T0,+T1,+T2,+T3,+T4,+T5,+T6)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_graph/node.rs.html#49\">source</a><a href=\"#impl-IntoRenderNodeArray%3C7%3E-for-(T0,+T1,+T2,+T3,+T4,+T5,+T6)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6&gt; <a class=\"trait\" href=\"bevy/render/render_graph/trait.IntoRenderNodeArray.html\" title=\"trait bevy::render::render_graph::IntoRenderNodeArray\">IntoRenderNodeArray</a>&lt;7&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"bevy/render/render_graph/trait.RenderLabel.html\" title=\"trait bevy::render::render_graph::RenderLabel\">RenderLabel</a>,\n    T1: <a class=\"trait\" href=\"bevy/render/render_graph/trait.RenderLabel.html\" title=\"trait bevy::render::render_graph::RenderLabel\">RenderLabel</a>,\n    T2: <a class=\"trait\" href=\"bevy/render/render_graph/trait.RenderLabel.html\" title=\"trait bevy::render::render_graph::RenderLabel\">RenderLabel</a>,\n    T3: <a class=\"trait\" href=\"bevy/render/render_graph/trait.RenderLabel.html\" title=\"trait bevy::render::render_graph::RenderLabel\">RenderLabel</a>,\n    T4: <a class=\"trait\" href=\"bevy/render/render_graph/trait.RenderLabel.html\" title=\"trait bevy::render::render_graph::RenderLabel\">RenderLabel</a>,\n    T5: <a class=\"trait\" href=\"bevy/render/render_graph/trait.RenderLabel.html\" title=\"trait bevy::render::render_graph::RenderLabel\">RenderLabel</a>,\n    T6: <a class=\"trait\" href=\"bevy/render/render_graph/trait.RenderLabel.html\" title=\"trait bevy::render::render_graph::RenderLabel\">RenderLabel</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_array\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_graph/node.rs.html#49\">source</a><a href=\"#method.into_array\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_graph/trait.IntoRenderNodeArray.html#tymethod.into_array\" class=\"fn\">into_array</a>(self) -&gt; [<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/render/render_graph/trait.RenderLabel.html\" title=\"trait bevy::render::render_graph::RenderLabel\">RenderLabel</a>&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">7</a>]</h4></section></div></details>","IntoRenderNodeArray<7>","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystem%3C%3CF+as+ExclusiveSystemParamFunction%3CMarker%3E%3E::In,+%3CF+as+ExclusiveSystemParamFunction%3CMarker%3E%3E::Out,+(IsExclusiveFunctionSystem,+Marker)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/exclusive_function_system.rs.html#37-40\">source</a><a href=\"#impl-IntoSystem%3C%3CF+as+ExclusiveSystemParamFunction%3CMarker%3E%3E::In,+%3CF+as+ExclusiveSystemParamFunction%3CMarker%3E%3E::Out,+(IsExclusiveFunctionSystem,+Marker)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Marker, F&gt; <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystem.html\" title=\"trait bevy::ecs::prelude::IntoSystem\">IntoSystem</a>&lt;&lt;F as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParamFunction.html#associatedtype.In\" title=\"type bevy::ecs::system::ExclusiveSystemParamFunction::In\">In</a>, &lt;F as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParamFunction.html#associatedtype.Out\" title=\"type bevy::ecs::system::ExclusiveSystemParamFunction::Out\">Out</a>, (IsExclusiveFunctionSystem, Marker)&gt; for F<div class=\"where\">where\n    Marker: 'static,\n    F: <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.System\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.System\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/prelude/trait.IntoSystem.html#associatedtype.System\" class=\"associatedtype\">System</a> = <a class=\"struct\" href=\"bevy/ecs/system/struct.ExclusiveFunctionSystem.html\" title=\"struct bevy::ecs::system::ExclusiveFunctionSystem\">ExclusiveFunctionSystem</a>&lt;Marker, F&gt;</h4></section></summary><div class='docblock'>The type of <a href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\"><code>System</code></a> that this instance converts into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_system\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/exclusive_function_system.rs.html#43\">source</a><a href=\"#method.into_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystem.html#tymethod.into_system\" class=\"fn\">into_system</a>(\n    func: F\n) -&gt; &lt;F as <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystem.html\" title=\"trait bevy::ecs::prelude::IntoSystem\">IntoSystem</a>&lt;&lt;F as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParamFunction.html#associatedtype.In\" title=\"type bevy::ecs::system::ExclusiveSystemParamFunction::In\">In</a>, &lt;F as <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.ExclusiveSystemParamFunction.html#associatedtype.Out\" title=\"type bevy::ecs::system::ExclusiveSystemParamFunction::Out\">Out</a>, (IsExclusiveFunctionSystem, Marker)&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/prelude/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy::ecs::prelude::IntoSystem::System\">System</a></h4></section></summary><div class='docblock'>Turns this value into its corresponding <a href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\"><code>System</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pipe\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#169-171\">source</a><a href=\"#method.pipe\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystem.html#method.pipe\" class=\"fn\">pipe</a>&lt;B, Final, MarkerB&gt;(\n    self,\n    system: B\n) -&gt; <a class=\"struct\" href=\"bevy/ecs/system/struct.CombinatorSystem.html\" title=\"struct bevy::ecs::system::CombinatorSystem\">CombinatorSystem</a>&lt;Pipe, Self::<a class=\"associatedtype\" href=\"bevy/ecs/prelude/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy::ecs::prelude::IntoSystem::System\">System</a>, &lt;B as <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystem.html\" title=\"trait bevy::ecs::prelude::IntoSystem\">IntoSystem</a>&lt;Out, Final, MarkerB&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/prelude/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy::ecs::prelude::IntoSystem::System\">System</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystem.html\" title=\"trait bevy::ecs::prelude::IntoSystem\">IntoSystem</a>&lt;Out, Final, MarkerB&gt;,</div></h4></section></summary><div class='docblock'>Pass the output of this system <code>A</code> into a second system <code>B</code>, creating a new compound system. <a href=\"bevy/ecs/prelude/trait.IntoSystem.html#method.pipe\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#198-200\">source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystem.html#method.map\" class=\"fn\">map</a>&lt;T, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"bevy/ecs/system/struct.AdapterSystem.html\" title=\"struct bevy::ecs::system::AdapterSystem\">AdapterSystem</a>&lt;F, Self::<a class=\"associatedtype\" href=\"bevy/ecs/prelude/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy::ecs::prelude::IntoSystem::System\">System</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Out) -&gt; T,</div></h4></section></summary><div class='docblock'>Pass the output of this system into the passed function <code>f</code>, creating a new system that\noutputs the value returned from the function. <a href=\"bevy/ecs/prelude/trait.IntoSystem.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.system_type_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#209\">source</a><a href=\"#method.system_type_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystem.html#method.system_type_id\" class=\"fn\">system_type_id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a></h4></section></summary><div class='docblock'>Get the <a href=\"https://doc.rust-lang.org/1.79.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\"><code>TypeId</code></a> of the <a href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\"><code>System</code></a> produced after calling <a href=\"bevy/ecs/prelude/trait.IntoSystem.html#tymethod.into_system\" title=\"associated function bevy::ecs::prelude::IntoSystem::into_system\"><code>into_system</code></a>.</div></details></div></details>","IntoSystem<<F as ExclusiveSystemParamFunction<Marker>>::In, <F as ExclusiveSystemParamFunction<Marker>>::Out, (IsExclusiveFunctionSystem, Marker)>","bevy::pbr::DrawPrepass","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystem%3C%3CF+as+SystemParamFunction%3CMarker%3E%3E::In,+%3CF+as+SystemParamFunction%3CMarker%3E%3E::Out,+(IsFunctionSystem,+Marker)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/function_system.rs.html#448-451\">source</a><a href=\"#impl-IntoSystem%3C%3CF+as+SystemParamFunction%3CMarker%3E%3E::In,+%3CF+as+SystemParamFunction%3CMarker%3E%3E::Out,+(IsFunctionSystem,+Marker)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Marker, F&gt; <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystem.html\" title=\"trait bevy::ecs::prelude::IntoSystem\">IntoSystem</a>&lt;&lt;F as <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemParamFunction.html\" title=\"trait bevy::ecs::prelude::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/prelude/trait.SystemParamFunction.html#associatedtype.In\" title=\"type bevy::ecs::prelude::SystemParamFunction::In\">In</a>, &lt;F as <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemParamFunction.html\" title=\"trait bevy::ecs::prelude::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/prelude/trait.SystemParamFunction.html#associatedtype.Out\" title=\"type bevy::ecs::prelude::SystemParamFunction::Out\">Out</a>, (IsFunctionSystem, Marker)&gt; for F<div class=\"where\">where\n    Marker: 'static,\n    F: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemParamFunction.html\" title=\"trait bevy::ecs::prelude::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.System\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.System\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/prelude/trait.IntoSystem.html#associatedtype.System\" class=\"associatedtype\">System</a> = <a class=\"struct\" href=\"bevy/ecs/system/struct.FunctionSystem.html\" title=\"struct bevy::ecs::system::FunctionSystem\">FunctionSystem</a>&lt;Marker, F&gt;</h4></section></summary><div class='docblock'>The type of <a href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\"><code>System</code></a> that this instance converts into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_system\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/function_system.rs.html#454\">source</a><a href=\"#method.into_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystem.html#tymethod.into_system\" class=\"fn\">into_system</a>(\n    func: F\n) -&gt; &lt;F as <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystem.html\" title=\"trait bevy::ecs::prelude::IntoSystem\">IntoSystem</a>&lt;&lt;F as <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemParamFunction.html\" title=\"trait bevy::ecs::prelude::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/prelude/trait.SystemParamFunction.html#associatedtype.In\" title=\"type bevy::ecs::prelude::SystemParamFunction::In\">In</a>, &lt;F as <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemParamFunction.html\" title=\"trait bevy::ecs::prelude::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/prelude/trait.SystemParamFunction.html#associatedtype.Out\" title=\"type bevy::ecs::prelude::SystemParamFunction::Out\">Out</a>, (IsFunctionSystem, Marker)&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/prelude/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy::ecs::prelude::IntoSystem::System\">System</a></h4></section></summary><div class='docblock'>Turns this value into its corresponding <a href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\"><code>System</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pipe\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#169-171\">source</a><a href=\"#method.pipe\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystem.html#method.pipe\" class=\"fn\">pipe</a>&lt;B, Final, MarkerB&gt;(\n    self,\n    system: B\n) -&gt; <a class=\"struct\" href=\"bevy/ecs/system/struct.CombinatorSystem.html\" title=\"struct bevy::ecs::system::CombinatorSystem\">CombinatorSystem</a>&lt;Pipe, Self::<a class=\"associatedtype\" href=\"bevy/ecs/prelude/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy::ecs::prelude::IntoSystem::System\">System</a>, &lt;B as <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystem.html\" title=\"trait bevy::ecs::prelude::IntoSystem\">IntoSystem</a>&lt;Out, Final, MarkerB&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/prelude/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy::ecs::prelude::IntoSystem::System\">System</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystem.html\" title=\"trait bevy::ecs::prelude::IntoSystem\">IntoSystem</a>&lt;Out, Final, MarkerB&gt;,</div></h4></section></summary><div class='docblock'>Pass the output of this system <code>A</code> into a second system <code>B</code>, creating a new compound system. <a href=\"bevy/ecs/prelude/trait.IntoSystem.html#method.pipe\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#198-200\">source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystem.html#method.map\" class=\"fn\">map</a>&lt;T, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"bevy/ecs/system/struct.AdapterSystem.html\" title=\"struct bevy::ecs::system::AdapterSystem\">AdapterSystem</a>&lt;F, Self::<a class=\"associatedtype\" href=\"bevy/ecs/prelude/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy::ecs::prelude::IntoSystem::System\">System</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Out) -&gt; T,</div></h4></section></summary><div class='docblock'>Pass the output of this system into the passed function <code>f</code>, creating a new system that\noutputs the value returned from the function. <a href=\"bevy/ecs/prelude/trait.IntoSystem.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.system_type_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#209\">source</a><a href=\"#method.system_type_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystem.html#method.system_type_id\" class=\"fn\">system_type_id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a></h4></section></summary><div class='docblock'>Get the <a href=\"https://doc.rust-lang.org/1.79.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\"><code>TypeId</code></a> of the <a href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\"><code>System</code></a> produced after calling <a href=\"bevy/ecs/prelude/trait.IntoSystem.html#tymethod.into_system\" title=\"associated function bevy::ecs::prelude::IntoSystem::into_system\"><code>into_system</code></a>.</div></details></div></details>","IntoSystem<<F as SystemParamFunction<Marker>>::In, <F as SystemParamFunction<Marker>>::Out, (IsFunctionSystem, Marker)>","bevy::pbr::DrawPrepass","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystemConfigs%3C(SystemConfigTupleMarker,+P0,+P1,+P2,+P3)%3E-for-(S0,+S1,+S2,+S3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#542\">source</a><a href=\"#impl-IntoSystemConfigs%3C(SystemConfigTupleMarker,+P0,+P1,+P2,+P3)%3E-for-(S0,+S1,+S2,+S3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P0, S0, P1, S1, P2, S2, P3, S3&gt; <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemConfigs\">IntoSystemConfigs</a>&lt;(SystemConfigTupleMarker, P0, P1, P2, P3)&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(S0, S1, S2, S3)</a><div class=\"where\">where\n    S0: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemConfigs\">IntoSystemConfigs</a>&lt;P0&gt;,\n    S1: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemConfigs\">IntoSystemConfigs</a>&lt;P1&gt;,\n    S2: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemConfigs\">IntoSystemConfigs</a>&lt;P2&gt;,\n    S3: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemConfigs\">IntoSystemConfigs</a>&lt;P3&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_configs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#542\">source</a><a href=\"#method.into_configs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#tymethod.into_configs\" class=\"fn\">into_configs</a>(self) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Convert into a <a href=\"bevy/ecs/schedule/type.SystemConfigs.html\" title=\"type bevy::ecs::schedule::SystemConfigs\"><code>SystemConfigs</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#304\">source</a><a href=\"#method.in_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.in_set\" class=\"fn\">in_set</a>(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Add these systems to the provided <code>set</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#316\">source</a><a href=\"#method.before\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.before\" class=\"fn\">before</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Runs before all systems in <code>set</code>. If <code>self</code> has any systems that produce <a href=\"bevy/ecs/prelude/struct.Commands.html\" title=\"struct bevy::ecs::prelude::Commands\"><code>Commands</code></a>\nor other <a href=\"bevy/ecs/prelude/struct.Deferred.html\" title=\"struct bevy::ecs::prelude::Deferred\"><code>Deferred</code></a> operations, all systems in <code>set</code> will see their effect. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.before\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#328\">source</a><a href=\"#method.after\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.after\" class=\"fn\">after</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Run after all systems in <code>set</code>. If <code>set</code> has any systems that produce <a href=\"bevy/ecs/prelude/struct.Commands.html\" title=\"struct bevy::ecs::prelude::Commands\"><code>Commands</code></a>\nor other <a href=\"bevy/ecs/prelude/struct.Deferred.html\" title=\"struct bevy::ecs::prelude::Deferred\"><code>Deferred</code></a> operations, all systems in <code>self</code> will see their effect. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.after\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_ignore_deferred\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#336\">source</a><a href=\"#method.before_ignore_deferred\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.before_ignore_deferred\" class=\"fn\">before_ignore_deferred</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Run before all systems in <code>set</code>. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.before_ignore_deferred\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after_ignore_deferred\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#344\">source</a><a href=\"#method.after_ignore_deferred\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.after_ignore_deferred\" class=\"fn\">after_ignore_deferred</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Run after all systems in <code>set</code>. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.after_ignore_deferred\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.distributive_run_if\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#378\">source</a><a href=\"#method.distributive_run_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.distributive_run_if\" class=\"fn\">distributive_run_if</a>&lt;M&gt;(\n    self,\n    condition: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Condition.html\" title=\"trait bevy::ecs::prelude::Condition\">Condition</a>&lt;M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Add a run condition to each contained system. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.distributive_run_if\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#412\">source</a><a href=\"#method.run_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.run_if\" class=\"fn\">run_if</a>&lt;M&gt;(\n    self,\n    condition: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Condition.html\" title=\"trait bevy::ecs::prelude::Condition\">Condition</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Run the systems only if the <a href=\"bevy/ecs/prelude/trait.Condition.html\" title=\"trait bevy::ecs::prelude::Condition\"><code>Condition</code></a> is <code>true</code>. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.run_if\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ambiguous_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#418\">source</a><a href=\"#method.ambiguous_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.ambiguous_with\" class=\"fn\">ambiguous_with</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Suppress warnings and errors that would result from these systems having ambiguities\n(conflicting access but indeterminate order) with systems in <code>set</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ambiguous_with_all\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#424\">source</a><a href=\"#method.ambiguous_with_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.ambiguous_with_all\" class=\"fn\">ambiguous_with_all</a>(self) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Suppress warnings and errors that would result from these systems having ambiguities\n(conflicting access but indeterminate order) with any other system.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#435\">source</a><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.chain\" class=\"fn\">chain</a>(self) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Treat this collection as a sequence of systems. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain_ignore_deferred\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#444\">source</a><a href=\"#method.chain_ignore_deferred\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.chain_ignore_deferred\" class=\"fn\">chain_ignore_deferred</a>(\n    self\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Treat this collection as a sequence of systems. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.chain_ignore_deferred\">Read more</a></div></details></div></details>","IntoSystemConfigs<(SystemConfigTupleMarker, P0, P1, P2, P3)>","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystemConfigs%3C(SystemConfigTupleMarker,+P0,+P1,+P2,+P3,+P4)%3E-for-(S0,+S1,+S2,+S3,+S4)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#542\">source</a><a href=\"#impl-IntoSystemConfigs%3C(SystemConfigTupleMarker,+P0,+P1,+P2,+P3,+P4)%3E-for-(S0,+S1,+S2,+S3,+S4)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P0, S0, P1, S1, P2, S2, P3, S3, P4, S4&gt; <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemConfigs\">IntoSystemConfigs</a>&lt;(SystemConfigTupleMarker, P0, P1, P2, P3, P4)&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(S0, S1, S2, S3, S4)</a><div class=\"where\">where\n    S0: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemConfigs\">IntoSystemConfigs</a>&lt;P0&gt;,\n    S1: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemConfigs\">IntoSystemConfigs</a>&lt;P1&gt;,\n    S2: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemConfigs\">IntoSystemConfigs</a>&lt;P2&gt;,\n    S3: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemConfigs\">IntoSystemConfigs</a>&lt;P3&gt;,\n    S4: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemConfigs\">IntoSystemConfigs</a>&lt;P4&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_configs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#542\">source</a><a href=\"#method.into_configs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#tymethod.into_configs\" class=\"fn\">into_configs</a>(self) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Convert into a <a href=\"bevy/ecs/schedule/type.SystemConfigs.html\" title=\"type bevy::ecs::schedule::SystemConfigs\"><code>SystemConfigs</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#304\">source</a><a href=\"#method.in_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.in_set\" class=\"fn\">in_set</a>(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Add these systems to the provided <code>set</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#316\">source</a><a href=\"#method.before\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.before\" class=\"fn\">before</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Runs before all systems in <code>set</code>. If <code>self</code> has any systems that produce <a href=\"bevy/ecs/prelude/struct.Commands.html\" title=\"struct bevy::ecs::prelude::Commands\"><code>Commands</code></a>\nor other <a href=\"bevy/ecs/prelude/struct.Deferred.html\" title=\"struct bevy::ecs::prelude::Deferred\"><code>Deferred</code></a> operations, all systems in <code>set</code> will see their effect. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.before\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#328\">source</a><a href=\"#method.after\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.after\" class=\"fn\">after</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Run after all systems in <code>set</code>. If <code>set</code> has any systems that produce <a href=\"bevy/ecs/prelude/struct.Commands.html\" title=\"struct bevy::ecs::prelude::Commands\"><code>Commands</code></a>\nor other <a href=\"bevy/ecs/prelude/struct.Deferred.html\" title=\"struct bevy::ecs::prelude::Deferred\"><code>Deferred</code></a> operations, all systems in <code>self</code> will see their effect. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.after\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_ignore_deferred\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#336\">source</a><a href=\"#method.before_ignore_deferred\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.before_ignore_deferred\" class=\"fn\">before_ignore_deferred</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Run before all systems in <code>set</code>. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.before_ignore_deferred\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after_ignore_deferred\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#344\">source</a><a href=\"#method.after_ignore_deferred\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.after_ignore_deferred\" class=\"fn\">after_ignore_deferred</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Run after all systems in <code>set</code>. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.after_ignore_deferred\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.distributive_run_if\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#378\">source</a><a href=\"#method.distributive_run_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.distributive_run_if\" class=\"fn\">distributive_run_if</a>&lt;M&gt;(\n    self,\n    condition: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Condition.html\" title=\"trait bevy::ecs::prelude::Condition\">Condition</a>&lt;M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Add a run condition to each contained system. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.distributive_run_if\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#412\">source</a><a href=\"#method.run_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.run_if\" class=\"fn\">run_if</a>&lt;M&gt;(\n    self,\n    condition: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Condition.html\" title=\"trait bevy::ecs::prelude::Condition\">Condition</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Run the systems only if the <a href=\"bevy/ecs/prelude/trait.Condition.html\" title=\"trait bevy::ecs::prelude::Condition\"><code>Condition</code></a> is <code>true</code>. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.run_if\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ambiguous_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#418\">source</a><a href=\"#method.ambiguous_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.ambiguous_with\" class=\"fn\">ambiguous_with</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Suppress warnings and errors that would result from these systems having ambiguities\n(conflicting access but indeterminate order) with systems in <code>set</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ambiguous_with_all\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#424\">source</a><a href=\"#method.ambiguous_with_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.ambiguous_with_all\" class=\"fn\">ambiguous_with_all</a>(self) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Suppress warnings and errors that would result from these systems having ambiguities\n(conflicting access but indeterminate order) with any other system.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#435\">source</a><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.chain\" class=\"fn\">chain</a>(self) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Treat this collection as a sequence of systems. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain_ignore_deferred\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#444\">source</a><a href=\"#method.chain_ignore_deferred\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.chain_ignore_deferred\" class=\"fn\">chain_ignore_deferred</a>(\n    self\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Treat this collection as a sequence of systems. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.chain_ignore_deferred\">Read more</a></div></details></div></details>","IntoSystemConfigs<(SystemConfigTupleMarker, P0, P1, P2, P3, P4)>","bevy::pbr::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystemConfigs%3C(SystemConfigTupleMarker,+P0,+P1,+P2,+P3,+P4,+P5,+P6)%3E-for-(S0,+S1,+S2,+S3,+S4,+S5,+S6)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#542\">source</a><a href=\"#impl-IntoSystemConfigs%3C(SystemConfigTupleMarker,+P0,+P1,+P2,+P3,+P4,+P5,+P6)%3E-for-(S0,+S1,+S2,+S3,+S4,+S5,+S6)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P0, S0, P1, S1, P2, S2, P3, S3, P4, S4, P5, S5, P6, S6&gt; <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemConfigs\">IntoSystemConfigs</a>&lt;(SystemConfigTupleMarker, P0, P1, P2, P3, P4, P5, P6)&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(S0, S1, S2, S3, S4, S5, S6)</a><div class=\"where\">where\n    S0: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemConfigs\">IntoSystemConfigs</a>&lt;P0&gt;,\n    S1: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemConfigs\">IntoSystemConfigs</a>&lt;P1&gt;,\n    S2: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemConfigs\">IntoSystemConfigs</a>&lt;P2&gt;,\n    S3: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemConfigs\">IntoSystemConfigs</a>&lt;P3&gt;,\n    S4: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemConfigs\">IntoSystemConfigs</a>&lt;P4&gt;,\n    S5: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemConfigs\">IntoSystemConfigs</a>&lt;P5&gt;,\n    S6: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemConfigs\">IntoSystemConfigs</a>&lt;P6&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_configs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#542\">source</a><a href=\"#method.into_configs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#tymethod.into_configs\" class=\"fn\">into_configs</a>(self) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Convert into a <a href=\"bevy/ecs/schedule/type.SystemConfigs.html\" title=\"type bevy::ecs::schedule::SystemConfigs\"><code>SystemConfigs</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#304\">source</a><a href=\"#method.in_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.in_set\" class=\"fn\">in_set</a>(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Add these systems to the provided <code>set</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#316\">source</a><a href=\"#method.before\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.before\" class=\"fn\">before</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Runs before all systems in <code>set</code>. If <code>self</code> has any systems that produce <a href=\"bevy/ecs/prelude/struct.Commands.html\" title=\"struct bevy::ecs::prelude::Commands\"><code>Commands</code></a>\nor other <a href=\"bevy/ecs/prelude/struct.Deferred.html\" title=\"struct bevy::ecs::prelude::Deferred\"><code>Deferred</code></a> operations, all systems in <code>set</code> will see their effect. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.before\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#328\">source</a><a href=\"#method.after\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.after\" class=\"fn\">after</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Run after all systems in <code>set</code>. If <code>set</code> has any systems that produce <a href=\"bevy/ecs/prelude/struct.Commands.html\" title=\"struct bevy::ecs::prelude::Commands\"><code>Commands</code></a>\nor other <a href=\"bevy/ecs/prelude/struct.Deferred.html\" title=\"struct bevy::ecs::prelude::Deferred\"><code>Deferred</code></a> operations, all systems in <code>self</code> will see their effect. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.after\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_ignore_deferred\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#336\">source</a><a href=\"#method.before_ignore_deferred\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.before_ignore_deferred\" class=\"fn\">before_ignore_deferred</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Run before all systems in <code>set</code>. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.before_ignore_deferred\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after_ignore_deferred\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#344\">source</a><a href=\"#method.after_ignore_deferred\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.after_ignore_deferred\" class=\"fn\">after_ignore_deferred</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Run after all systems in <code>set</code>. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.after_ignore_deferred\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.distributive_run_if\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#378\">source</a><a href=\"#method.distributive_run_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.distributive_run_if\" class=\"fn\">distributive_run_if</a>&lt;M&gt;(\n    self,\n    condition: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Condition.html\" title=\"trait bevy::ecs::prelude::Condition\">Condition</a>&lt;M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Add a run condition to each contained system. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.distributive_run_if\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#412\">source</a><a href=\"#method.run_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.run_if\" class=\"fn\">run_if</a>&lt;M&gt;(\n    self,\n    condition: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Condition.html\" title=\"trait bevy::ecs::prelude::Condition\">Condition</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Run the systems only if the <a href=\"bevy/ecs/prelude/trait.Condition.html\" title=\"trait bevy::ecs::prelude::Condition\"><code>Condition</code></a> is <code>true</code>. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.run_if\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ambiguous_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#418\">source</a><a href=\"#method.ambiguous_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.ambiguous_with\" class=\"fn\">ambiguous_with</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Suppress warnings and errors that would result from these systems having ambiguities\n(conflicting access but indeterminate order) with systems in <code>set</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ambiguous_with_all\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#424\">source</a><a href=\"#method.ambiguous_with_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.ambiguous_with_all\" class=\"fn\">ambiguous_with_all</a>(self) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Suppress warnings and errors that would result from these systems having ambiguities\n(conflicting access but indeterminate order) with any other system.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#435\">source</a><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.chain\" class=\"fn\">chain</a>(self) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Treat this collection as a sequence of systems. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain_ignore_deferred\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#444\">source</a><a href=\"#method.chain_ignore_deferred\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.chain_ignore_deferred\" class=\"fn\">chain_ignore_deferred</a>(\n    self\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Treat this collection as a sequence of systems. <a href=\"bevy/ecs/prelude/trait.IntoSystemConfigs.html#method.chain_ignore_deferred\">Read more</a></div></details></div></details>","IntoSystemConfigs<(SystemConfigTupleMarker, P0, P1, P2, P3, P4, P5, P6)>","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystemSet%3C(IsExclusiveFunctionSystem,+Marker)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/set.rs.html#189-192\">source</a><a href=\"#impl-IntoSystemSet%3C(IsExclusiveFunctionSystem,+Marker)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Marker, F&gt; <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;(IsExclusiveFunctionSystem, Marker)&gt; for F<div class=\"where\">where\n    Marker: 'static,\n    F: <a class=\"trait\" href=\"bevy/ecs/system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy::ecs::system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Set\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Set\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/prelude/trait.IntoSystemSet.html#associatedtype.Set\" class=\"associatedtype\">Set</a> = <a class=\"struct\" href=\"bevy/ecs/schedule/struct.SystemTypeSet.html\" title=\"struct bevy::ecs::schedule::SystemTypeSet\">SystemTypeSet</a>&lt;<a class=\"struct\" href=\"bevy/ecs/system/struct.ExclusiveFunctionSystem.html\" title=\"struct bevy::ecs::system::ExclusiveFunctionSystem\">ExclusiveFunctionSystem</a>&lt;Marker, F&gt;&gt;</h4></section></summary><div class='docblock'>The type of <a href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\"><code>SystemSet</code></a> this instance converts into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_system_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/set.rs.html#197\">source</a><a href=\"#method.into_system_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSet.html#tymethod.into_system_set\" class=\"fn\">into_system_set</a>(\n    self\n) -&gt; &lt;F as <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;(IsExclusiveFunctionSystem, Marker)&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html#associatedtype.Set\" title=\"type bevy::ecs::prelude::IntoSystemSet::Set\">Set</a></h4></section></summary><div class='docblock'>Converts this instance to its associated <a href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\"><code>SystemSet</code></a> type.</div></details></div></details>","IntoSystemSet<(IsExclusiveFunctionSystem, Marker)>","bevy::pbr::DrawPrepass","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystemSet%3C(IsFunctionSystem,+Marker)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/set.rs.html#175-178\">source</a><a href=\"#impl-IntoSystemSet%3C(IsFunctionSystem,+Marker)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Marker, F&gt; <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;(IsFunctionSystem, Marker)&gt; for F<div class=\"where\">where\n    Marker: 'static,\n    F: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemParamFunction.html\" title=\"trait bevy::ecs::prelude::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Set\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Set\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/prelude/trait.IntoSystemSet.html#associatedtype.Set\" class=\"associatedtype\">Set</a> = <a class=\"struct\" href=\"bevy/ecs/schedule/struct.SystemTypeSet.html\" title=\"struct bevy::ecs::schedule::SystemTypeSet\">SystemTypeSet</a>&lt;<a class=\"struct\" href=\"bevy/ecs/system/struct.FunctionSystem.html\" title=\"struct bevy::ecs::system::FunctionSystem\">FunctionSystem</a>&lt;Marker, F&gt;&gt;</h4></section></summary><div class='docblock'>The type of <a href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\"><code>SystemSet</code></a> this instance converts into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_system_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/set.rs.html#183\">source</a><a href=\"#method.into_system_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSet.html#tymethod.into_system_set\" class=\"fn\">into_system_set</a>(\n    self\n) -&gt; &lt;F as <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;(IsFunctionSystem, Marker)&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html#associatedtype.Set\" title=\"type bevy::ecs::prelude::IntoSystemSet::Set\">Set</a></h4></section></summary><div class='docblock'>Converts this instance to its associated <a href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\"><code>SystemSet</code></a> type.</div></details></div></details>","IntoSystemSet<(IsFunctionSystem, Marker)>","bevy::pbr::DrawPrepass","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystemSetConfigs-for-(S0,+S1,+S2,+S3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#755\">source</a><a href=\"#impl-IntoSystemSetConfigs-for-(S0,+S1,+S2,+S3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S0, S1, S2, S3&gt; <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemSetConfigs\">IntoSystemSetConfigs</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(S0, S1, S2, S3)</a><div class=\"where\">where\n    S0: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemSetConfigs\">IntoSystemSetConfigs</a>,\n    S1: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemSetConfigs\">IntoSystemSetConfigs</a>,\n    S2: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemSetConfigs\">IntoSystemSetConfigs</a>,\n    S3: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemSetConfigs\">IntoSystemSetConfigs</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#583\">source</a><a href=\"#method.in_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.in_set\" class=\"fn\">in_set</a>(self, set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Add these system sets to the provided <code>set</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#592\">source</a><a href=\"#method.before\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.before\" class=\"fn\">before</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Runs before all systems in <code>set</code>. If <code>self</code> has any systems that produce <a href=\"bevy/ecs/prelude/struct.Commands.html\" title=\"struct bevy::ecs::prelude::Commands\"><code>Commands</code></a>\nor other <a href=\"bevy/ecs/prelude/struct.Deferred.html\" title=\"struct bevy::ecs::prelude::Deferred\"><code>Deferred</code></a> operations, all systems in <code>set</code> will see their effect. <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.before\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#601\">source</a><a href=\"#method.after\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.after\" class=\"fn\">after</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Runs before all systems in <code>set</code>. If <code>set</code> has any systems that produce <a href=\"bevy/ecs/prelude/struct.Commands.html\" title=\"struct bevy::ecs::prelude::Commands\"><code>Commands</code></a>\nor other <a href=\"bevy/ecs/prelude/struct.Deferred.html\" title=\"struct bevy::ecs::prelude::Deferred\"><code>Deferred</code></a> operations, all systems in <code>self</code> will see their effect. <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.after\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_ignore_deferred\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#609\">source</a><a href=\"#method.before_ignore_deferred\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.before_ignore_deferred\" class=\"fn\">before_ignore_deferred</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Run before all systems in <code>set</code>. <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.before_ignore_deferred\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after_ignore_deferred\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#617\">source</a><a href=\"#method.after_ignore_deferred\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.after_ignore_deferred\" class=\"fn\">after_ignore_deferred</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Run after all systems in <code>set</code>. <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.after_ignore_deferred\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#625\">source</a><a href=\"#method.run_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.run_if\" class=\"fn\">run_if</a>&lt;M&gt;(\n    self,\n    condition: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Condition.html\" title=\"trait bevy::ecs::prelude::Condition\">Condition</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Run the systems in this set(s) only if the <a href=\"bevy/ecs/prelude/trait.Condition.html\" title=\"trait bevy::ecs::prelude::Condition\"><code>Condition</code></a> is <code>true</code>. <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.run_if\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ambiguous_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#631\">source</a><a href=\"#method.ambiguous_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.ambiguous_with\" class=\"fn\">ambiguous_with</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Suppress warnings and errors that would result from systems in these sets having ambiguities\n(conflicting access but indeterminate order) with systems in <code>set</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ambiguous_with_all\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#637\">source</a><a href=\"#method.ambiguous_with_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.ambiguous_with_all\" class=\"fn\">ambiguous_with_all</a>(self) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Suppress warnings and errors that would result from systems in these sets having ambiguities\n(conflicting access but indeterminate order) with any other system.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#644\">source</a><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.chain\" class=\"fn\">chain</a>(self) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Treat this collection as a sequence of system sets. <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain_ignore_deferred\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#653\">source</a><a href=\"#method.chain_ignore_deferred\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.chain_ignore_deferred\" class=\"fn\">chain_ignore_deferred</a>(\n    self\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Treat this collection as a sequence of systems. <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.chain_ignore_deferred\">Read more</a></div></details></div></details>","IntoSystemSetConfigs","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystemSetConfigs-for-(S0,+S1,+S2,+S3,+S4)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#755\">source</a><a href=\"#impl-IntoSystemSetConfigs-for-(S0,+S1,+S2,+S3,+S4)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S0, S1, S2, S3, S4&gt; <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemSetConfigs\">IntoSystemSetConfigs</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(S0, S1, S2, S3, S4)</a><div class=\"where\">where\n    S0: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemSetConfigs\">IntoSystemSetConfigs</a>,\n    S1: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemSetConfigs\">IntoSystemSetConfigs</a>,\n    S2: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemSetConfigs\">IntoSystemSetConfigs</a>,\n    S3: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemSetConfigs\">IntoSystemSetConfigs</a>,\n    S4: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemSetConfigs\">IntoSystemSetConfigs</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#583\">source</a><a href=\"#method.in_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.in_set\" class=\"fn\">in_set</a>(self, set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Add these system sets to the provided <code>set</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#592\">source</a><a href=\"#method.before\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.before\" class=\"fn\">before</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Runs before all systems in <code>set</code>. If <code>self</code> has any systems that produce <a href=\"bevy/ecs/prelude/struct.Commands.html\" title=\"struct bevy::ecs::prelude::Commands\"><code>Commands</code></a>\nor other <a href=\"bevy/ecs/prelude/struct.Deferred.html\" title=\"struct bevy::ecs::prelude::Deferred\"><code>Deferred</code></a> operations, all systems in <code>set</code> will see their effect. <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.before\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#601\">source</a><a href=\"#method.after\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.after\" class=\"fn\">after</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Runs before all systems in <code>set</code>. If <code>set</code> has any systems that produce <a href=\"bevy/ecs/prelude/struct.Commands.html\" title=\"struct bevy::ecs::prelude::Commands\"><code>Commands</code></a>\nor other <a href=\"bevy/ecs/prelude/struct.Deferred.html\" title=\"struct bevy::ecs::prelude::Deferred\"><code>Deferred</code></a> operations, all systems in <code>self</code> will see their effect. <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.after\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_ignore_deferred\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#609\">source</a><a href=\"#method.before_ignore_deferred\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.before_ignore_deferred\" class=\"fn\">before_ignore_deferred</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Run before all systems in <code>set</code>. <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.before_ignore_deferred\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after_ignore_deferred\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#617\">source</a><a href=\"#method.after_ignore_deferred\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.after_ignore_deferred\" class=\"fn\">after_ignore_deferred</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Run after all systems in <code>set</code>. <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.after_ignore_deferred\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#625\">source</a><a href=\"#method.run_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.run_if\" class=\"fn\">run_if</a>&lt;M&gt;(\n    self,\n    condition: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Condition.html\" title=\"trait bevy::ecs::prelude::Condition\">Condition</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Run the systems in this set(s) only if the <a href=\"bevy/ecs/prelude/trait.Condition.html\" title=\"trait bevy::ecs::prelude::Condition\"><code>Condition</code></a> is <code>true</code>. <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.run_if\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ambiguous_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#631\">source</a><a href=\"#method.ambiguous_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.ambiguous_with\" class=\"fn\">ambiguous_with</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Suppress warnings and errors that would result from systems in these sets having ambiguities\n(conflicting access but indeterminate order) with systems in <code>set</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ambiguous_with_all\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#637\">source</a><a href=\"#method.ambiguous_with_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.ambiguous_with_all\" class=\"fn\">ambiguous_with_all</a>(self) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Suppress warnings and errors that would result from systems in these sets having ambiguities\n(conflicting access but indeterminate order) with any other system.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#644\">source</a><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.chain\" class=\"fn\">chain</a>(self) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Treat this collection as a sequence of system sets. <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain_ignore_deferred\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#653\">source</a><a href=\"#method.chain_ignore_deferred\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.chain_ignore_deferred\" class=\"fn\">chain_ignore_deferred</a>(\n    self\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Treat this collection as a sequence of systems. <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.chain_ignore_deferred\">Read more</a></div></details></div></details>","IntoSystemSetConfigs","bevy::pbr::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystemSetConfigs-for-(S0,+S1,+S2,+S3,+S4,+S5,+S6)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#755\">source</a><a href=\"#impl-IntoSystemSetConfigs-for-(S0,+S1,+S2,+S3,+S4,+S5,+S6)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S0, S1, S2, S3, S4, S5, S6&gt; <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemSetConfigs\">IntoSystemSetConfigs</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(S0, S1, S2, S3, S4, S5, S6)</a><div class=\"where\">where\n    S0: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemSetConfigs\">IntoSystemSetConfigs</a>,\n    S1: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemSetConfigs\">IntoSystemSetConfigs</a>,\n    S2: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemSetConfigs\">IntoSystemSetConfigs</a>,\n    S3: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemSetConfigs\">IntoSystemSetConfigs</a>,\n    S4: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemSetConfigs\">IntoSystemSetConfigs</a>,\n    S5: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemSetConfigs\">IntoSystemSetConfigs</a>,\n    S6: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html\" title=\"trait bevy::ecs::prelude::IntoSystemSetConfigs\">IntoSystemSetConfigs</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#583\">source</a><a href=\"#method.in_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.in_set\" class=\"fn\">in_set</a>(self, set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Add these system sets to the provided <code>set</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#592\">source</a><a href=\"#method.before\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.before\" class=\"fn\">before</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Runs before all systems in <code>set</code>. If <code>self</code> has any systems that produce <a href=\"bevy/ecs/prelude/struct.Commands.html\" title=\"struct bevy::ecs::prelude::Commands\"><code>Commands</code></a>\nor other <a href=\"bevy/ecs/prelude/struct.Deferred.html\" title=\"struct bevy::ecs::prelude::Deferred\"><code>Deferred</code></a> operations, all systems in <code>set</code> will see their effect. <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.before\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#601\">source</a><a href=\"#method.after\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.after\" class=\"fn\">after</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Runs before all systems in <code>set</code>. If <code>set</code> has any systems that produce <a href=\"bevy/ecs/prelude/struct.Commands.html\" title=\"struct bevy::ecs::prelude::Commands\"><code>Commands</code></a>\nor other <a href=\"bevy/ecs/prelude/struct.Deferred.html\" title=\"struct bevy::ecs::prelude::Deferred\"><code>Deferred</code></a> operations, all systems in <code>self</code> will see their effect. <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.after\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_ignore_deferred\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#609\">source</a><a href=\"#method.before_ignore_deferred\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.before_ignore_deferred\" class=\"fn\">before_ignore_deferred</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Run before all systems in <code>set</code>. <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.before_ignore_deferred\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after_ignore_deferred\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#617\">source</a><a href=\"#method.after_ignore_deferred\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.after_ignore_deferred\" class=\"fn\">after_ignore_deferred</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Run after all systems in <code>set</code>. <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.after_ignore_deferred\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#625\">source</a><a href=\"#method.run_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.run_if\" class=\"fn\">run_if</a>&lt;M&gt;(\n    self,\n    condition: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Condition.html\" title=\"trait bevy::ecs::prelude::Condition\">Condition</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Run the systems in this set(s) only if the <a href=\"bevy/ecs/prelude/trait.Condition.html\" title=\"trait bevy::ecs::prelude::Condition\"><code>Condition</code></a> is <code>true</code>. <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.run_if\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ambiguous_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#631\">source</a><a href=\"#method.ambiguous_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.ambiguous_with\" class=\"fn\">ambiguous_with</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/ecs/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::ecs::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Suppress warnings and errors that would result from systems in these sets having ambiguities\n(conflicting access but indeterminate order) with systems in <code>set</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ambiguous_with_all\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#637\">source</a><a href=\"#method.ambiguous_with_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.ambiguous_with_all\" class=\"fn\">ambiguous_with_all</a>(self) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Suppress warnings and errors that would result from systems in these sets having ambiguities\n(conflicting access but indeterminate order) with any other system.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#644\">source</a><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.chain\" class=\"fn\">chain</a>(self) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/intern/struct.Interned.html\" title=\"struct bevy::ecs::intern::Interned\">Interned</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.SystemSet.html\" title=\"trait bevy::ecs::prelude::SystemSet\">SystemSet</a>&gt;&gt;</h4></section></summary><div class='docblock'>Treat this collection as a sequence of system sets. <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain_ignore_deferred\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#653\">source</a><a href=\"#method.chain_ignore_deferred\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.chain_ignore_deferred\" class=\"fn\">chain_ignore_deferred</a>(\n    self\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/ecs/prelude/trait.System.html\" title=\"trait bevy::ecs::prelude::System\">System</a>&lt;Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Treat this collection as a sequence of systems. <a href=\"bevy/ecs/prelude/trait.IntoSystemSetConfigs.html#method.chain_ignore_deferred\">Read more</a></div></details></div></details>","IntoSystemSetConfigs","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryData-for-(F0,+F1,+F2,+F3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/fetch.rs.html#1917\">source</a><a href=\"#impl-QueryData-for-(F0,+F1,+F2,+F3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F0, F1, F2, F3&gt; <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3)</a><div class=\"where\">where\n    F0: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>,\n    F1: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>,\n    F2: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>,\n    F3: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ReadOnly\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ReadOnly\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" class=\"associatedtype\">ReadOnly</a> = (&lt;F0 as <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" title=\"type bevy::ecs::query::QueryData::ReadOnly\">ReadOnly</a>, &lt;F1 as <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" title=\"type bevy::ecs::query::QueryData::ReadOnly\">ReadOnly</a>, &lt;F2 as <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" title=\"type bevy::ecs::query::QueryData::ReadOnly\">ReadOnly</a>, &lt;F3 as <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" title=\"type bevy::ecs::query::QueryData::ReadOnly\">ReadOnly</a>)</h4></section></summary><div class='docblock'>The read-only variant of this <a href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\"><code>QueryData</code></a>, which satisfies the <a href=\"bevy/ecs/query/trait.ReadOnlyQueryData.html\" title=\"trait bevy::ecs::query::ReadOnlyQueryData\"><code>ReadOnlyQueryData</code></a> trait.</div></details></div></details>","QueryData","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryData-for-(F0,+F1,+F2,+F3,+F4)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/fetch.rs.html#1917\">source</a><a href=\"#impl-QueryData-for-(F0,+F1,+F2,+F3,+F4)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F0, F1, F2, F3, F4&gt; <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4)</a><div class=\"where\">where\n    F0: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>,\n    F1: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>,\n    F2: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>,\n    F3: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>,\n    F4: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ReadOnly\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ReadOnly\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" class=\"associatedtype\">ReadOnly</a> = (&lt;F0 as <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" title=\"type bevy::ecs::query::QueryData::ReadOnly\">ReadOnly</a>, &lt;F1 as <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" title=\"type bevy::ecs::query::QueryData::ReadOnly\">ReadOnly</a>, &lt;F2 as <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" title=\"type bevy::ecs::query::QueryData::ReadOnly\">ReadOnly</a>, &lt;F3 as <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" title=\"type bevy::ecs::query::QueryData::ReadOnly\">ReadOnly</a>, &lt;F4 as <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" title=\"type bevy::ecs::query::QueryData::ReadOnly\">ReadOnly</a>)</h4></section></summary><div class='docblock'>The read-only variant of this <a href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\"><code>QueryData</code></a>, which satisfies the <a href=\"bevy/ecs/query/trait.ReadOnlyQueryData.html\" title=\"trait bevy::ecs::query::ReadOnlyQueryData\"><code>ReadOnlyQueryData</code></a> trait.</div></details></div></details>","QueryData","bevy::pbr::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryData-for-(F0,+F1,+F2,+F3,+F4,+F5,+F6)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/fetch.rs.html#1917\">source</a><a href=\"#impl-QueryData-for-(F0,+F1,+F2,+F3,+F4,+F5,+F6)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F0, F1, F2, F3, F4, F5, F6&gt; <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4, F5, F6)</a><div class=\"where\">where\n    F0: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>,\n    F1: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>,\n    F2: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>,\n    F3: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>,\n    F4: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>,\n    F5: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>,\n    F6: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ReadOnly\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ReadOnly\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" class=\"associatedtype\">ReadOnly</a> = (&lt;F0 as <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" title=\"type bevy::ecs::query::QueryData::ReadOnly\">ReadOnly</a>, &lt;F1 as <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" title=\"type bevy::ecs::query::QueryData::ReadOnly\">ReadOnly</a>, &lt;F2 as <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" title=\"type bevy::ecs::query::QueryData::ReadOnly\">ReadOnly</a>, &lt;F3 as <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" title=\"type bevy::ecs::query::QueryData::ReadOnly\">ReadOnly</a>, &lt;F4 as <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" title=\"type bevy::ecs::query::QueryData::ReadOnly\">ReadOnly</a>, &lt;F5 as <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" title=\"type bevy::ecs::query::QueryData::ReadOnly\">ReadOnly</a>, &lt;F6 as <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" title=\"type bevy::ecs::query::QueryData::ReadOnly\">ReadOnly</a>)</h4></section></summary><div class='docblock'>The read-only variant of this <a href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\"><code>QueryData</code></a>, which satisfies the <a href=\"bevy/ecs/query/trait.ReadOnlyQueryData.html\" title=\"trait bevy::ecs::query::ReadOnlyQueryData\"><code>ReadOnlyQueryData</code></a> trait.</div></details></div></details>","QueryData","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryFilter-for-(F0,+F1,+F2,+F3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#518\">source</a><a href=\"#impl-QueryFilter-for-(F0,+F1,+F2,+F3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F0, F1, F2, F3&gt; <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryFilter.html\" title=\"trait bevy::ecs::query::QueryFilter\">QueryFilter</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3)</a><div class=\"where\">where\n    F0: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryFilter.html\" title=\"trait bevy::ecs::query::QueryFilter\">QueryFilter</a>,\n    F1: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryFilter.html\" title=\"trait bevy::ecs::query::QueryFilter\">QueryFilter</a>,\n    F2: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryFilter.html\" title=\"trait bevy::ecs::query::QueryFilter\">QueryFilter</a>,\n    F3: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryFilter.html\" title=\"trait bevy::ecs::query::QueryFilter\">QueryFilter</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.IS_ARCHETYPAL\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#518\">source</a><a href=\"#associatedconstant.IS_ARCHETYPAL\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bevy/ecs/query/trait.QueryFilter.html#associatedconstant.IS_ARCHETYPAL\" class=\"constant\">IS_ARCHETYPAL</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a> = _</h4></section></summary><div class='docblock'>Returns true if (and only if) this Filter relies strictly on archetypes to limit which\ncomponents are accessed by the Query. <a href=\"bevy/ecs/query/trait.QueryFilter.html#associatedconstant.IS_ARCHETYPAL\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter_fetch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#518\">source</a><a href=\"#method.filter_fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy/ecs/query/trait.QueryFilter.html#tymethod.filter_fetch\" class=\"fn\">filter_fetch</a>(\n    fetch: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'_&gt;,\n    _entity: <a class=\"struct\" href=\"bevy/ecs/prelude/struct.Entity.html\" title=\"struct bevy::ecs::prelude::Entity\">Entity</a>,\n    _table_row: <a class=\"struct\" href=\"bevy/ecs/storage/struct.TableRow.html\" title=\"struct bevy::ecs::storage::TableRow\">TableRow</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if the provided <a href=\"bevy/ecs/prelude/struct.Entity.html\" title=\"struct bevy::ecs::prelude::Entity\"><code>Entity</code></a> and <a href=\"bevy/ecs/storage/struct.TableRow.html\" title=\"struct bevy::ecs::storage::TableRow\"><code>TableRow</code></a> should be included in the query results.\nIf false, the entity will be skipped. <a href=\"bevy/ecs/query/trait.QueryFilter.html#tymethod.filter_fetch\">Read more</a></div></details></div></details>","QueryFilter","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryFilter-for-(F0,+F1,+F2,+F3,+F4)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#518\">source</a><a href=\"#impl-QueryFilter-for-(F0,+F1,+F2,+F3,+F4)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F0, F1, F2, F3, F4&gt; <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryFilter.html\" title=\"trait bevy::ecs::query::QueryFilter\">QueryFilter</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4)</a><div class=\"where\">where\n    F0: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryFilter.html\" title=\"trait bevy::ecs::query::QueryFilter\">QueryFilter</a>,\n    F1: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryFilter.html\" title=\"trait bevy::ecs::query::QueryFilter\">QueryFilter</a>,\n    F2: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryFilter.html\" title=\"trait bevy::ecs::query::QueryFilter\">QueryFilter</a>,\n    F3: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryFilter.html\" title=\"trait bevy::ecs::query::QueryFilter\">QueryFilter</a>,\n    F4: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryFilter.html\" title=\"trait bevy::ecs::query::QueryFilter\">QueryFilter</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.IS_ARCHETYPAL\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#518\">source</a><a href=\"#associatedconstant.IS_ARCHETYPAL\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bevy/ecs/query/trait.QueryFilter.html#associatedconstant.IS_ARCHETYPAL\" class=\"constant\">IS_ARCHETYPAL</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a> = _</h4></section></summary><div class='docblock'>Returns true if (and only if) this Filter relies strictly on archetypes to limit which\ncomponents are accessed by the Query. <a href=\"bevy/ecs/query/trait.QueryFilter.html#associatedconstant.IS_ARCHETYPAL\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter_fetch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#518\">source</a><a href=\"#method.filter_fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy/ecs/query/trait.QueryFilter.html#tymethod.filter_fetch\" class=\"fn\">filter_fetch</a>(\n    fetch: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'_&gt;,\n    _entity: <a class=\"struct\" href=\"bevy/ecs/prelude/struct.Entity.html\" title=\"struct bevy::ecs::prelude::Entity\">Entity</a>,\n    _table_row: <a class=\"struct\" href=\"bevy/ecs/storage/struct.TableRow.html\" title=\"struct bevy::ecs::storage::TableRow\">TableRow</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if the provided <a href=\"bevy/ecs/prelude/struct.Entity.html\" title=\"struct bevy::ecs::prelude::Entity\"><code>Entity</code></a> and <a href=\"bevy/ecs/storage/struct.TableRow.html\" title=\"struct bevy::ecs::storage::TableRow\"><code>TableRow</code></a> should be included in the query results.\nIf false, the entity will be skipped. <a href=\"bevy/ecs/query/trait.QueryFilter.html#tymethod.filter_fetch\">Read more</a></div></details></div></details>","QueryFilter","bevy::pbr::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryFilter-for-(F0,+F1,+F2,+F3,+F4,+F5,+F6)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#518\">source</a><a href=\"#impl-QueryFilter-for-(F0,+F1,+F2,+F3,+F4,+F5,+F6)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F0, F1, F2, F3, F4, F5, F6&gt; <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryFilter.html\" title=\"trait bevy::ecs::query::QueryFilter\">QueryFilter</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4, F5, F6)</a><div class=\"where\">where\n    F0: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryFilter.html\" title=\"trait bevy::ecs::query::QueryFilter\">QueryFilter</a>,\n    F1: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryFilter.html\" title=\"trait bevy::ecs::query::QueryFilter\">QueryFilter</a>,\n    F2: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryFilter.html\" title=\"trait bevy::ecs::query::QueryFilter\">QueryFilter</a>,\n    F3: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryFilter.html\" title=\"trait bevy::ecs::query::QueryFilter\">QueryFilter</a>,\n    F4: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryFilter.html\" title=\"trait bevy::ecs::query::QueryFilter\">QueryFilter</a>,\n    F5: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryFilter.html\" title=\"trait bevy::ecs::query::QueryFilter\">QueryFilter</a>,\n    F6: <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryFilter.html\" title=\"trait bevy::ecs::query::QueryFilter\">QueryFilter</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.IS_ARCHETYPAL\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#518\">source</a><a href=\"#associatedconstant.IS_ARCHETYPAL\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bevy/ecs/query/trait.QueryFilter.html#associatedconstant.IS_ARCHETYPAL\" class=\"constant\">IS_ARCHETYPAL</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a> = _</h4></section></summary><div class='docblock'>Returns true if (and only if) this Filter relies strictly on archetypes to limit which\ncomponents are accessed by the Query. <a href=\"bevy/ecs/query/trait.QueryFilter.html#associatedconstant.IS_ARCHETYPAL\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter_fetch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#518\">source</a><a href=\"#method.filter_fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy/ecs/query/trait.QueryFilter.html#tymethod.filter_fetch\" class=\"fn\">filter_fetch</a>(\n    fetch: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4, F5, F6)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'_&gt;,\n    _entity: <a class=\"struct\" href=\"bevy/ecs/prelude/struct.Entity.html\" title=\"struct bevy::ecs::prelude::Entity\">Entity</a>,\n    _table_row: <a class=\"struct\" href=\"bevy/ecs/storage/struct.TableRow.html\" title=\"struct bevy::ecs::storage::TableRow\">TableRow</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if the provided <a href=\"bevy/ecs/prelude/struct.Entity.html\" title=\"struct bevy::ecs::prelude::Entity\"><code>Entity</code></a> and <a href=\"bevy/ecs/storage/struct.TableRow.html\" title=\"struct bevy::ecs::storage::TableRow\"><code>TableRow</code></a> should be included in the query results.\nIf false, the entity will be skipped. <a href=\"bevy/ecs/query/trait.QueryFilter.html#tymethod.filter_fetch\">Read more</a></div></details></div></details>","QueryFilter","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reflect-for-(A,+B,+C,+D)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#impl-Reflect-for-(A,+B,+C,+D)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D&gt; <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    B: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    C: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    D: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_represented_type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.get_represented_type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.get_represented_type_info\" class=\"fn\">get_represented_type_info</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"enum\" href=\"bevy/reflect/enum.TypeInfo.html\" title=\"enum bevy::reflect::TypeInfo\">TypeInfo</a>&gt;</h4></section></summary><div class='docblock'>Returns the <a href=\"bevy/reflect/enum.TypeInfo.html\" title=\"enum bevy::reflect::TypeInfo\"><code>TypeInfo</code></a> of the type <em>represented</em> by this value. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.get_represented_type_info\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.into_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.into_any\" class=\"fn\">into_any</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a>&gt;</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>Box&lt;dyn Any&gt;</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.as_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.as_any\" class=\"fn\">as_any</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>&amp;dyn Any</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.as_any_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.as_any_mut\" class=\"fn\">as_any_mut</a>(&amp;mut self) -&gt; &amp;mut (dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>&amp;mut dyn Any</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.into_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.into_reflect\" class=\"fn\">into_reflect</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;</h4></section></summary><div class='docblock'>Casts this type to a boxed reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.as_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.as_reflect\" class=\"fn\">as_reflect</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)</h4></section></summary><div class='docblock'>Casts this type to a reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_reflect_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.as_reflect_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.as_reflect_mut\" class=\"fn\">as_reflect_mut</a>(&amp;mut self) -&gt; &amp;mut (dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)</h4></section></summary><div class='docblock'>Casts this type to a mutable reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.apply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.apply\" class=\"fn\">apply</a>(&amp;mut self, value: &amp;(dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static))</h4></section></summary><div class='docblock'>Applies a reflected value to this value. <a href=\"bevy/reflect/trait.Reflect.html#method.apply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.try_apply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.try_apply\" class=\"fn\">try_apply</a>(\n    &amp;mut self,\n    value: &amp;(dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"bevy/reflect/enum.ApplyError.html\" title=\"enum bevy::reflect::ApplyError\">ApplyError</a>&gt;</h4></section></summary><div class='docblock'>Tries to <a href=\"bevy/reflect/trait.Reflect.html#method.apply\" title=\"method bevy::reflect::Reflect::apply\"><code>apply</code></a> a reflected value to this value. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.try_apply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Performs a type-checked assignment of a reflected value to this value. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.set\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.reflect_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_kind\" class=\"fn\">reflect_kind</a>(&amp;self) -&gt; <a class=\"enum\" href=\"bevy/reflect/enum.ReflectKind.html\" title=\"enum bevy::reflect::ReflectKind\">ReflectKind</a></h4></section></summary><div class='docblock'>Returns a zero-sized enumeration of “kinds” of type. <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_kind\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.reflect_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_ref\" class=\"fn\">reflect_ref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"bevy/reflect/enum.ReflectRef.html\" title=\"enum bevy::reflect::ReflectRef\">ReflectRef</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Returns an immutable enumeration of “kinds” of type. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.reflect_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_mut\" class=\"fn\">reflect_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"bevy/reflect/enum.ReflectMut.html\" title=\"enum bevy::reflect::ReflectMut\">ReflectMut</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Returns a mutable enumeration of “kinds” of type. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.reflect_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_owned\" class=\"fn\">reflect_owned</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;) -&gt; <a class=\"enum\" href=\"bevy/reflect/enum.ReflectOwned.html\" title=\"enum bevy::reflect::ReflectOwned\">ReflectOwned</a></h4></section></summary><div class='docblock'>Returns an owned enumeration of “kinds” of type. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_owned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.clone_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.clone_value\" class=\"fn\">clone_value</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;</h4></section></summary><div class='docblock'>Clones the value as a <code>Reflect</code> trait object. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.clone_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_partial_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.reflect_partial_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_partial_eq\" class=\"fn\">reflect_partial_eq</a>(&amp;self, value: &amp;(dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>&gt;</h4></section></summary><div class='docblock'>Returns a “partial equality” comparison result. <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_partial_eq\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#317\">source</a><a href=\"#method.reflect_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_hash\" class=\"fn\">reflect_hash</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Returns a hash of the value (which includes the type). <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.debug\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#335\">source</a><a href=\"#method.debug\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.debug\" class=\"fn\">debug</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Debug formatter for the value. <a href=\"bevy/reflect/trait.Reflect.html#method.debug\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serializable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#351\">source</a><a href=\"#method.serializable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.serializable\" class=\"fn\">serializable</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"bevy/reflect/serde/enum.Serializable.html\" title=\"enum bevy::reflect::serde::Serializable\">Serializable</a>&lt;'_&gt;&gt;</h4></section></summary><div class='docblock'>Returns a serializable version of the value. <a href=\"bevy/reflect/trait.Reflect.html#method.serializable\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_dynamic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#367\">source</a><a href=\"#method.is_dynamic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.is_dynamic\" class=\"fn\">is_dynamic</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Indicates whether or not this type is a <em>dynamic</em> type. <a href=\"bevy/reflect/trait.Reflect.html#method.is_dynamic\">Read more</a></div></details></div></details>","Reflect","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reflect-for-(A,+B,+C,+D,+E)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#impl-Reflect-for-(A,+B,+C,+D,+E)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E&gt; <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D, E)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    B: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    C: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    D: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    E: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_represented_type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.get_represented_type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.get_represented_type_info\" class=\"fn\">get_represented_type_info</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"enum\" href=\"bevy/reflect/enum.TypeInfo.html\" title=\"enum bevy::reflect::TypeInfo\">TypeInfo</a>&gt;</h4></section></summary><div class='docblock'>Returns the <a href=\"bevy/reflect/enum.TypeInfo.html\" title=\"enum bevy::reflect::TypeInfo\"><code>TypeInfo</code></a> of the type <em>represented</em> by this value. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.get_represented_type_info\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.into_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.into_any\" class=\"fn\">into_any</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a>&gt;</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>Box&lt;dyn Any&gt;</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.as_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.as_any\" class=\"fn\">as_any</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>&amp;dyn Any</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.as_any_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.as_any_mut\" class=\"fn\">as_any_mut</a>(&amp;mut self) -&gt; &amp;mut (dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>&amp;mut dyn Any</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.into_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.into_reflect\" class=\"fn\">into_reflect</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;</h4></section></summary><div class='docblock'>Casts this type to a boxed reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.as_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.as_reflect\" class=\"fn\">as_reflect</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)</h4></section></summary><div class='docblock'>Casts this type to a reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_reflect_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.as_reflect_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.as_reflect_mut\" class=\"fn\">as_reflect_mut</a>(&amp;mut self) -&gt; &amp;mut (dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)</h4></section></summary><div class='docblock'>Casts this type to a mutable reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.apply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.apply\" class=\"fn\">apply</a>(&amp;mut self, value: &amp;(dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static))</h4></section></summary><div class='docblock'>Applies a reflected value to this value. <a href=\"bevy/reflect/trait.Reflect.html#method.apply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.try_apply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.try_apply\" class=\"fn\">try_apply</a>(\n    &amp;mut self,\n    value: &amp;(dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"bevy/reflect/enum.ApplyError.html\" title=\"enum bevy::reflect::ApplyError\">ApplyError</a>&gt;</h4></section></summary><div class='docblock'>Tries to <a href=\"bevy/reflect/trait.Reflect.html#method.apply\" title=\"method bevy::reflect::Reflect::apply\"><code>apply</code></a> a reflected value to this value. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.try_apply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Performs a type-checked assignment of a reflected value to this value. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.set\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.reflect_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_kind\" class=\"fn\">reflect_kind</a>(&amp;self) -&gt; <a class=\"enum\" href=\"bevy/reflect/enum.ReflectKind.html\" title=\"enum bevy::reflect::ReflectKind\">ReflectKind</a></h4></section></summary><div class='docblock'>Returns a zero-sized enumeration of “kinds” of type. <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_kind\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.reflect_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_ref\" class=\"fn\">reflect_ref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"bevy/reflect/enum.ReflectRef.html\" title=\"enum bevy::reflect::ReflectRef\">ReflectRef</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Returns an immutable enumeration of “kinds” of type. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.reflect_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_mut\" class=\"fn\">reflect_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"bevy/reflect/enum.ReflectMut.html\" title=\"enum bevy::reflect::ReflectMut\">ReflectMut</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Returns a mutable enumeration of “kinds” of type. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.reflect_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_owned\" class=\"fn\">reflect_owned</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;) -&gt; <a class=\"enum\" href=\"bevy/reflect/enum.ReflectOwned.html\" title=\"enum bevy::reflect::ReflectOwned\">ReflectOwned</a></h4></section></summary><div class='docblock'>Returns an owned enumeration of “kinds” of type. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_owned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.clone_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.clone_value\" class=\"fn\">clone_value</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;</h4></section></summary><div class='docblock'>Clones the value as a <code>Reflect</code> trait object. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.clone_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_partial_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.reflect_partial_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_partial_eq\" class=\"fn\">reflect_partial_eq</a>(&amp;self, value: &amp;(dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>&gt;</h4></section></summary><div class='docblock'>Returns a “partial equality” comparison result. <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_partial_eq\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#317\">source</a><a href=\"#method.reflect_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_hash\" class=\"fn\">reflect_hash</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Returns a hash of the value (which includes the type). <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.debug\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#335\">source</a><a href=\"#method.debug\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.debug\" class=\"fn\">debug</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Debug formatter for the value. <a href=\"bevy/reflect/trait.Reflect.html#method.debug\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serializable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#351\">source</a><a href=\"#method.serializable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.serializable\" class=\"fn\">serializable</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"bevy/reflect/serde/enum.Serializable.html\" title=\"enum bevy::reflect::serde::Serializable\">Serializable</a>&lt;'_&gt;&gt;</h4></section></summary><div class='docblock'>Returns a serializable version of the value. <a href=\"bevy/reflect/trait.Reflect.html#method.serializable\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_dynamic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#367\">source</a><a href=\"#method.is_dynamic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.is_dynamic\" class=\"fn\">is_dynamic</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Indicates whether or not this type is a <em>dynamic</em> type. <a href=\"bevy/reflect/trait.Reflect.html#method.is_dynamic\">Read more</a></div></details></div></details>","Reflect","bevy::pbr::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reflect-for-(A,+B,+C,+D,+E,+F,+G)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#impl-Reflect-for-(A,+B,+C,+D,+E,+F,+G)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, F, G&gt; <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    B: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    C: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    D: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    E: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    F: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    G: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_represented_type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.get_represented_type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.get_represented_type_info\" class=\"fn\">get_represented_type_info</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"enum\" href=\"bevy/reflect/enum.TypeInfo.html\" title=\"enum bevy::reflect::TypeInfo\">TypeInfo</a>&gt;</h4></section></summary><div class='docblock'>Returns the <a href=\"bevy/reflect/enum.TypeInfo.html\" title=\"enum bevy::reflect::TypeInfo\"><code>TypeInfo</code></a> of the type <em>represented</em> by this value. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.get_represented_type_info\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.into_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.into_any\" class=\"fn\">into_any</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a>&gt;</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>Box&lt;dyn Any&gt;</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.as_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.as_any\" class=\"fn\">as_any</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>&amp;dyn Any</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.as_any_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.as_any_mut\" class=\"fn\">as_any_mut</a>(&amp;mut self) -&gt; &amp;mut (dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>&amp;mut dyn Any</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.into_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.into_reflect\" class=\"fn\">into_reflect</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;</h4></section></summary><div class='docblock'>Casts this type to a boxed reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.as_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.as_reflect\" class=\"fn\">as_reflect</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)</h4></section></summary><div class='docblock'>Casts this type to a reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_reflect_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.as_reflect_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.as_reflect_mut\" class=\"fn\">as_reflect_mut</a>(&amp;mut self) -&gt; &amp;mut (dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)</h4></section></summary><div class='docblock'>Casts this type to a mutable reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.apply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.apply\" class=\"fn\">apply</a>(&amp;mut self, value: &amp;(dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static))</h4></section></summary><div class='docblock'>Applies a reflected value to this value. <a href=\"bevy/reflect/trait.Reflect.html#method.apply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.try_apply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.try_apply\" class=\"fn\">try_apply</a>(\n    &amp;mut self,\n    value: &amp;(dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"bevy/reflect/enum.ApplyError.html\" title=\"enum bevy::reflect::ApplyError\">ApplyError</a>&gt;</h4></section></summary><div class='docblock'>Tries to <a href=\"bevy/reflect/trait.Reflect.html#method.apply\" title=\"method bevy::reflect::Reflect::apply\"><code>apply</code></a> a reflected value to this value. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.try_apply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Performs a type-checked assignment of a reflected value to this value. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.set\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.reflect_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_kind\" class=\"fn\">reflect_kind</a>(&amp;self) -&gt; <a class=\"enum\" href=\"bevy/reflect/enum.ReflectKind.html\" title=\"enum bevy::reflect::ReflectKind\">ReflectKind</a></h4></section></summary><div class='docblock'>Returns a zero-sized enumeration of “kinds” of type. <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_kind\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.reflect_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_ref\" class=\"fn\">reflect_ref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"bevy/reflect/enum.ReflectRef.html\" title=\"enum bevy::reflect::ReflectRef\">ReflectRef</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Returns an immutable enumeration of “kinds” of type. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.reflect_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_mut\" class=\"fn\">reflect_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"bevy/reflect/enum.ReflectMut.html\" title=\"enum bevy::reflect::ReflectMut\">ReflectMut</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Returns a mutable enumeration of “kinds” of type. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.reflect_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_owned\" class=\"fn\">reflect_owned</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;) -&gt; <a class=\"enum\" href=\"bevy/reflect/enum.ReflectOwned.html\" title=\"enum bevy::reflect::ReflectOwned\">ReflectOwned</a></h4></section></summary><div class='docblock'>Returns an owned enumeration of “kinds” of type. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.reflect_owned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.clone_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#tymethod.clone_value\" class=\"fn\">clone_value</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;</h4></section></summary><div class='docblock'>Clones the value as a <code>Reflect</code> trait object. <a href=\"bevy/reflect/trait.Reflect.html#tymethod.clone_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_partial_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.reflect_partial_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_partial_eq\" class=\"fn\">reflect_partial_eq</a>(&amp;self, value: &amp;(dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>&gt;</h4></section></summary><div class='docblock'>Returns a “partial equality” comparison result. <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_partial_eq\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#317\">source</a><a href=\"#method.reflect_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_hash\" class=\"fn\">reflect_hash</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Returns a hash of the value (which includes the type). <a href=\"bevy/reflect/trait.Reflect.html#method.reflect_hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.debug\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#335\">source</a><a href=\"#method.debug\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.debug\" class=\"fn\">debug</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Debug formatter for the value. <a href=\"bevy/reflect/trait.Reflect.html#method.debug\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serializable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#351\">source</a><a href=\"#method.serializable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.serializable\" class=\"fn\">serializable</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"bevy/reflect/serde/enum.Serializable.html\" title=\"enum bevy::reflect::serde::Serializable\">Serializable</a>&lt;'_&gt;&gt;</h4></section></summary><div class='docblock'>Returns a serializable version of the value. <a href=\"bevy/reflect/trait.Reflect.html#method.serializable\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_dynamic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#367\">source</a><a href=\"#method.is_dynamic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Reflect.html#method.is_dynamic\" class=\"fn\">is_dynamic</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Indicates whether or not this type is a <em>dynamic</em> type. <a href=\"bevy/reflect/trait.Reflect.html#method.is_dynamic\">Read more</a></div></details></div></details>","Reflect","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RenderCommand%3CP%3E-for-(C0,+C1,+C2,+C3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_phase/draw.rs.html#251\">source</a><a href=\"#impl-RenderCommand%3CP%3E-for-(C0,+C1,+C2,+C3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, C0, C1, C2, C3&gt; <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(C0, C1, C2, C3)</a><div class=\"where\">where\n    P: <a class=\"trait\" href=\"bevy/render/render_phase/trait.PhaseItem.html\" title=\"trait bevy::render::render_phase::PhaseItem\">PhaseItem</a>,\n    C0: <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;,\n    C1: <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;,\n    C2: <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;,\n    C3: <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Param\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Param\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\" class=\"associatedtype\">Param</a> = (&lt;C0 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\" title=\"type bevy::render::render_phase::RenderCommand::Param\">Param</a>, &lt;C1 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\" title=\"type bevy::render::render_phase::RenderCommand::Param\">Param</a>, &lt;C2 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\" title=\"type bevy::render::render_phase::RenderCommand::Param\">Param</a>, &lt;C3 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\" title=\"type bevy::render::render_phase::RenderCommand::Param\">Param</a>)</h4></section></summary><div class='docblock'>Specifies the general ECS data (e.g. resources) required by <a href=\"bevy/render/render_phase/trait.RenderCommand.html#tymethod.render\" title=\"associated function bevy::render::render_phase::RenderCommand::render\"><code>RenderCommand::render</code></a>. <a href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ViewQuery\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ViewQuery\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\" class=\"associatedtype\">ViewQuery</a> = (&lt;C0 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\" title=\"type bevy::render::render_phase::RenderCommand::ViewQuery\">ViewQuery</a>, &lt;C1 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\" title=\"type bevy::render::render_phase::RenderCommand::ViewQuery\">ViewQuery</a>, &lt;C2 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\" title=\"type bevy::render::render_phase::RenderCommand::ViewQuery\">ViewQuery</a>, &lt;C3 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\" title=\"type bevy::render::render_phase::RenderCommand::ViewQuery\">ViewQuery</a>)</h4></section></summary><div class='docblock'>Specifies the ECS data of the view entity required by <a href=\"bevy/render/render_phase/trait.RenderCommand.html#tymethod.render\" title=\"associated function bevy::render::render_phase::RenderCommand::render\"><code>RenderCommand::render</code></a>. <a href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ItemQuery\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ItemQuery\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\" class=\"associatedtype\">ItemQuery</a> = (&lt;C0 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\" title=\"type bevy::render::render_phase::RenderCommand::ItemQuery\">ItemQuery</a>, &lt;C1 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\" title=\"type bevy::render::render_phase::RenderCommand::ItemQuery\">ItemQuery</a>, &lt;C2 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\" title=\"type bevy::render::render_phase::RenderCommand::ItemQuery\">ItemQuery</a>, &lt;C3 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\" title=\"type bevy::render::render_phase::RenderCommand::ItemQuery\">ItemQuery</a>)</h4></section></summary><div class='docblock'>Specifies the ECS data of the item entity required by <a href=\"bevy/render/render_phase/trait.RenderCommand.html#tymethod.render\" title=\"associated function bevy::render::render_phase::RenderCommand::render\"><code>RenderCommand::render</code></a>. <a href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.render\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_phase/draw.rs.html#251\">source</a><a href=\"#method.render\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_phase/trait.RenderCommand.html#tymethod.render\" class=\"fn\">render</a>&lt;'w&gt;(\n    _item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;P</a>,\n    _: &lt;&lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(C0, C1, C2, C3)</a> as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\" title=\"type bevy::render::render_phase::RenderCommand::ViewQuery\">ViewQuery</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" title=\"type bevy::ecs::query::QueryData::ReadOnly\">ReadOnly</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;,\n    maybe_entities: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(C0, C1, C2, C3)</a> as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\" title=\"type bevy::render::render_phase::RenderCommand::ItemQuery\">ItemQuery</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" title=\"type bevy::ecs::query::QueryData::ReadOnly\">ReadOnly</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;&gt;,\n    _: &lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(C0, C1, C2, C3)</a> as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\" title=\"type bevy::render::render_phase::RenderCommand::Param\">Param</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::SystemParam::Item\">Item</a>&lt;'w, '_&gt;,\n    _pass: &amp;mut <a class=\"struct\" href=\"bevy/render/render_phase/struct.TrackedRenderPass.html\" title=\"struct bevy::render::render_phase::TrackedRenderPass\">TrackedRenderPass</a>&lt;'w&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/render/render_phase/enum.RenderCommandResult.html\" title=\"enum bevy::render::render_phase::RenderCommandResult\">RenderCommandResult</a></h4></section></summary><div class='docblock'>Renders a <a href=\"bevy/render/render_phase/trait.PhaseItem.html\" title=\"trait bevy::render::render_phase::PhaseItem\"><code>PhaseItem</code></a> by recording commands (e.g. setting pipelines, binding bind groups,\nissuing draw calls, etc.) via the <a href=\"bevy/render/render_phase/struct.TrackedRenderPass.html\" title=\"struct bevy::render::render_phase::TrackedRenderPass\"><code>TrackedRenderPass</code></a>.</div></details></div></details>","RenderCommand<P>","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RenderCommand%3CP%3E-for-(C0,+C1,+C2,+C3,+C4)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_phase/draw.rs.html#251\">source</a><a href=\"#impl-RenderCommand%3CP%3E-for-(C0,+C1,+C2,+C3,+C4)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, C0, C1, C2, C3, C4&gt; <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(C0, C1, C2, C3, C4)</a><div class=\"where\">where\n    P: <a class=\"trait\" href=\"bevy/render/render_phase/trait.PhaseItem.html\" title=\"trait bevy::render::render_phase::PhaseItem\">PhaseItem</a>,\n    C0: <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;,\n    C1: <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;,\n    C2: <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;,\n    C3: <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;,\n    C4: <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Param\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Param\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\" class=\"associatedtype\">Param</a> = (&lt;C0 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\" title=\"type bevy::render::render_phase::RenderCommand::Param\">Param</a>, &lt;C1 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\" title=\"type bevy::render::render_phase::RenderCommand::Param\">Param</a>, &lt;C2 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\" title=\"type bevy::render::render_phase::RenderCommand::Param\">Param</a>, &lt;C3 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\" title=\"type bevy::render::render_phase::RenderCommand::Param\">Param</a>, &lt;C4 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\" title=\"type bevy::render::render_phase::RenderCommand::Param\">Param</a>)</h4></section></summary><div class='docblock'>Specifies the general ECS data (e.g. resources) required by <a href=\"bevy/render/render_phase/trait.RenderCommand.html#tymethod.render\" title=\"associated function bevy::render::render_phase::RenderCommand::render\"><code>RenderCommand::render</code></a>. <a href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ViewQuery\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ViewQuery\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\" class=\"associatedtype\">ViewQuery</a> = (&lt;C0 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\" title=\"type bevy::render::render_phase::RenderCommand::ViewQuery\">ViewQuery</a>, &lt;C1 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\" title=\"type bevy::render::render_phase::RenderCommand::ViewQuery\">ViewQuery</a>, &lt;C2 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\" title=\"type bevy::render::render_phase::RenderCommand::ViewQuery\">ViewQuery</a>, &lt;C3 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\" title=\"type bevy::render::render_phase::RenderCommand::ViewQuery\">ViewQuery</a>, &lt;C4 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\" title=\"type bevy::render::render_phase::RenderCommand::ViewQuery\">ViewQuery</a>)</h4></section></summary><div class='docblock'>Specifies the ECS data of the view entity required by <a href=\"bevy/render/render_phase/trait.RenderCommand.html#tymethod.render\" title=\"associated function bevy::render::render_phase::RenderCommand::render\"><code>RenderCommand::render</code></a>. <a href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ItemQuery\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ItemQuery\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\" class=\"associatedtype\">ItemQuery</a> = (&lt;C0 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\" title=\"type bevy::render::render_phase::RenderCommand::ItemQuery\">ItemQuery</a>, &lt;C1 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\" title=\"type bevy::render::render_phase::RenderCommand::ItemQuery\">ItemQuery</a>, &lt;C2 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\" title=\"type bevy::render::render_phase::RenderCommand::ItemQuery\">ItemQuery</a>, &lt;C3 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\" title=\"type bevy::render::render_phase::RenderCommand::ItemQuery\">ItemQuery</a>, &lt;C4 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\" title=\"type bevy::render::render_phase::RenderCommand::ItemQuery\">ItemQuery</a>)</h4></section></summary><div class='docblock'>Specifies the ECS data of the item entity required by <a href=\"bevy/render/render_phase/trait.RenderCommand.html#tymethod.render\" title=\"associated function bevy::render::render_phase::RenderCommand::render\"><code>RenderCommand::render</code></a>. <a href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.render\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_phase/draw.rs.html#251\">source</a><a href=\"#method.render\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_phase/trait.RenderCommand.html#tymethod.render\" class=\"fn\">render</a>&lt;'w&gt;(\n    _item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;P</a>,\n    _: &lt;&lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(C0, C1, C2, C3, C4)</a> as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\" title=\"type bevy::render::render_phase::RenderCommand::ViewQuery\">ViewQuery</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" title=\"type bevy::ecs::query::QueryData::ReadOnly\">ReadOnly</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;,\n    maybe_entities: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(C0, C1, C2, C3, C4)</a> as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\" title=\"type bevy::render::render_phase::RenderCommand::ItemQuery\">ItemQuery</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" title=\"type bevy::ecs::query::QueryData::ReadOnly\">ReadOnly</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;&gt;,\n    _: &lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(C0, C1, C2, C3, C4)</a> as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\" title=\"type bevy::render::render_phase::RenderCommand::Param\">Param</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::SystemParam::Item\">Item</a>&lt;'w, '_&gt;,\n    _pass: &amp;mut <a class=\"struct\" href=\"bevy/render/render_phase/struct.TrackedRenderPass.html\" title=\"struct bevy::render::render_phase::TrackedRenderPass\">TrackedRenderPass</a>&lt;'w&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/render/render_phase/enum.RenderCommandResult.html\" title=\"enum bevy::render::render_phase::RenderCommandResult\">RenderCommandResult</a></h4></section></summary><div class='docblock'>Renders a <a href=\"bevy/render/render_phase/trait.PhaseItem.html\" title=\"trait bevy::render::render_phase::PhaseItem\"><code>PhaseItem</code></a> by recording commands (e.g. setting pipelines, binding bind groups,\nissuing draw calls, etc.) via the <a href=\"bevy/render/render_phase/struct.TrackedRenderPass.html\" title=\"struct bevy::render::render_phase::TrackedRenderPass\"><code>TrackedRenderPass</code></a>.</div></details></div></details>","RenderCommand<P>","bevy::pbr::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RenderCommand%3CP%3E-for-(C0,+C1,+C2,+C3,+C4,+C5,+C6)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_phase/draw.rs.html#251\">source</a><a href=\"#impl-RenderCommand%3CP%3E-for-(C0,+C1,+C2,+C3,+C4,+C5,+C6)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, C0, C1, C2, C3, C4, C5, C6&gt; <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(C0, C1, C2, C3, C4, C5, C6)</a><div class=\"where\">where\n    P: <a class=\"trait\" href=\"bevy/render/render_phase/trait.PhaseItem.html\" title=\"trait bevy::render::render_phase::PhaseItem\">PhaseItem</a>,\n    C0: <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;,\n    C1: <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;,\n    C2: <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;,\n    C3: <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;,\n    C4: <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;,\n    C5: <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;,\n    C6: <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Param\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Param\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\" class=\"associatedtype\">Param</a> = (&lt;C0 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\" title=\"type bevy::render::render_phase::RenderCommand::Param\">Param</a>, &lt;C1 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\" title=\"type bevy::render::render_phase::RenderCommand::Param\">Param</a>, &lt;C2 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\" title=\"type bevy::render::render_phase::RenderCommand::Param\">Param</a>, &lt;C3 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\" title=\"type bevy::render::render_phase::RenderCommand::Param\">Param</a>, &lt;C4 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\" title=\"type bevy::render::render_phase::RenderCommand::Param\">Param</a>, &lt;C5 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\" title=\"type bevy::render::render_phase::RenderCommand::Param\">Param</a>, &lt;C6 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\" title=\"type bevy::render::render_phase::RenderCommand::Param\">Param</a>)</h4></section></summary><div class='docblock'>Specifies the general ECS data (e.g. resources) required by <a href=\"bevy/render/render_phase/trait.RenderCommand.html#tymethod.render\" title=\"associated function bevy::render::render_phase::RenderCommand::render\"><code>RenderCommand::render</code></a>. <a href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ViewQuery\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ViewQuery\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\" class=\"associatedtype\">ViewQuery</a> = (&lt;C0 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\" title=\"type bevy::render::render_phase::RenderCommand::ViewQuery\">ViewQuery</a>, &lt;C1 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\" title=\"type bevy::render::render_phase::RenderCommand::ViewQuery\">ViewQuery</a>, &lt;C2 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\" title=\"type bevy::render::render_phase::RenderCommand::ViewQuery\">ViewQuery</a>, &lt;C3 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\" title=\"type bevy::render::render_phase::RenderCommand::ViewQuery\">ViewQuery</a>, &lt;C4 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\" title=\"type bevy::render::render_phase::RenderCommand::ViewQuery\">ViewQuery</a>, &lt;C5 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\" title=\"type bevy::render::render_phase::RenderCommand::ViewQuery\">ViewQuery</a>, &lt;C6 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\" title=\"type bevy::render::render_phase::RenderCommand::ViewQuery\">ViewQuery</a>)</h4></section></summary><div class='docblock'>Specifies the ECS data of the view entity required by <a href=\"bevy/render/render_phase/trait.RenderCommand.html#tymethod.render\" title=\"associated function bevy::render::render_phase::RenderCommand::render\"><code>RenderCommand::render</code></a>. <a href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ItemQuery\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ItemQuery\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\" class=\"associatedtype\">ItemQuery</a> = (&lt;C0 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\" title=\"type bevy::render::render_phase::RenderCommand::ItemQuery\">ItemQuery</a>, &lt;C1 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\" title=\"type bevy::render::render_phase::RenderCommand::ItemQuery\">ItemQuery</a>, &lt;C2 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\" title=\"type bevy::render::render_phase::RenderCommand::ItemQuery\">ItemQuery</a>, &lt;C3 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\" title=\"type bevy::render::render_phase::RenderCommand::ItemQuery\">ItemQuery</a>, &lt;C4 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\" title=\"type bevy::render::render_phase::RenderCommand::ItemQuery\">ItemQuery</a>, &lt;C5 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\" title=\"type bevy::render::render_phase::RenderCommand::ItemQuery\">ItemQuery</a>, &lt;C6 as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\" title=\"type bevy::render::render_phase::RenderCommand::ItemQuery\">ItemQuery</a>)</h4></section></summary><div class='docblock'>Specifies the ECS data of the item entity required by <a href=\"bevy/render/render_phase/trait.RenderCommand.html#tymethod.render\" title=\"associated function bevy::render::render_phase::RenderCommand::render\"><code>RenderCommand::render</code></a>. <a href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.render\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_render/render_phase/draw.rs.html#251\">source</a><a href=\"#method.render\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_phase/trait.RenderCommand.html#tymethod.render\" class=\"fn\">render</a>&lt;'w&gt;(\n    _item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;P</a>,\n    _: &lt;&lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(C0, C1, C2, C3, C4, C5, C6)</a> as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ViewQuery\" title=\"type bevy::render::render_phase::RenderCommand::ViewQuery\">ViewQuery</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" title=\"type bevy::ecs::query::QueryData::ReadOnly\">ReadOnly</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;,\n    maybe_entities: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(C0, C1, C2, C3, C4, C5, C6)</a> as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.ItemQuery\" title=\"type bevy::render::render_phase::RenderCommand::ItemQuery\">ItemQuery</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.QueryData.html\" title=\"trait bevy::ecs::query::QueryData\">QueryData</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.QueryData.html#associatedtype.ReadOnly\" title=\"type bevy::ecs::query::QueryData::ReadOnly\">ReadOnly</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;&gt;,\n    _: &lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(C0, C1, C2, C3, C4, C5, C6)</a> as <a class=\"trait\" href=\"bevy/render/render_phase/trait.RenderCommand.html\" title=\"trait bevy::render::render_phase::RenderCommand\">RenderCommand</a>&lt;P&gt;&gt;::<a class=\"associatedtype\" href=\"bevy/render/render_phase/trait.RenderCommand.html#associatedtype.Param\" title=\"type bevy::render::render_phase::RenderCommand::Param\">Param</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::SystemParam::Item\">Item</a>&lt;'w, '_&gt;,\n    _pass: &amp;mut <a class=\"struct\" href=\"bevy/render/render_phase/struct.TrackedRenderPass.html\" title=\"struct bevy::render::render_phase::TrackedRenderPass\">TrackedRenderPass</a>&lt;'w&gt;\n) -&gt; <a class=\"enum\" href=\"bevy/render/render_phase/enum.RenderCommandResult.html\" title=\"enum bevy::render::render_phase::RenderCommandResult\">RenderCommandResult</a></h4></section></summary><div class='docblock'>Renders a <a href=\"bevy/render/render_phase/trait.PhaseItem.html\" title=\"trait bevy::render::render_phase::PhaseItem\"><code>PhaseItem</code></a> by recording commands (e.g. setting pipelines, binding bind groups,\nissuing draw calls, etc.) via the <a href=\"bevy/render/render_phase/struct.TrackedRenderPass.html\" title=\"struct bevy::render::render_phase::TrackedRenderPass\"><code>TrackedRenderPass</code></a>.</div></details></div></details>","RenderCommand<P>","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-(T0,+T1,+T2,+T3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#428-444\">source</a><a href=\"#impl-Serialize-for-(T0,+T1,+T2,+T3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T0, T1, T2, T3)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T1: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T2: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T3: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#428-444\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-(T0,+T1,+T2,+T3,+T4)\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#428-444\">source</a><a href=\"#impl-Serialize-for-(T0,+T1,+T2,+T3,+T4)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T1: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T2: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T3: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T4: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#428-444\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","bevy::pbr::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-(T0,+T1,+T2,+T3,+T4,+T5,+T6)\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#428-444\">source</a><a href=\"#impl-Serialize-for-(T0,+T1,+T2,+T3,+T4,+T5,+T6)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T1: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T2: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T3: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T4: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T5: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T6: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#428-444\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StateSet-for-(S0,+S1,+S2,+S3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_state/state/state_set.rs.html#341\">source</a><a href=\"#impl-StateSet-for-(S0,+S1,+S2,+S3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S0, S1, S2, S3&gt; <a class=\"trait\" href=\"bevy/state/prelude/trait.StateSet.html\" title=\"trait bevy::state::prelude::StateSet\">StateSet</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(S0, S1, S2, S3)</a><div class=\"where\">where\n    S0: InnerStateSet,\n    S1: InnerStateSet,\n    S2: InnerStateSet,\n    S3: InnerStateSet,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.SET_DEPENDENCY_DEPTH\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bevy_state/state/state_set.rs.html#341\">source</a><a href=\"#associatedconstant.SET_DEPENDENCY_DEPTH\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bevy/state/prelude/trait.StateSet.html#associatedconstant.SET_DEPENDENCY_DEPTH\" class=\"constant\">SET_DEPENDENCY_DEPTH</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a> = _</h4></section></summary><div class='docblock'>The total <a href=\"bevy/state/prelude/trait.States.html#associatedconstant.DEPENDENCY_DEPTH\" title=\"associated constant bevy::state::prelude::States::DEPENDENCY_DEPTH\"><code>DEPENDENCY_DEPTH</code></a> of all\nthe states that are part of this <a href=\"bevy/state/prelude/trait.StateSet.html\" title=\"trait bevy::state::prelude::StateSet\"><code>StateSet</code></a>, added together. <a href=\"bevy/state/prelude/trait.StateSet.html#associatedconstant.SET_DEPENDENCY_DEPTH\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_computed_state_systems_in_schedule\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_state/state/state_set.rs.html#341\">source</a><a href=\"#method.register_computed_state_systems_in_schedule\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/state/prelude/trait.StateSet.html#tymethod.register_computed_state_systems_in_schedule\" class=\"fn\">register_computed_state_systems_in_schedule</a>&lt;T&gt;(schedule: &amp;mut <a class=\"struct\" href=\"bevy/ecs/prelude/struct.Schedule.html\" title=\"struct bevy::ecs::prelude::Schedule\">Schedule</a>)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy/state/prelude/trait.ComputedStates.html\" title=\"trait bevy::state::prelude::ComputedStates\">ComputedStates</a>&lt;SourceStates = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(S0, S1, S2, S3)</a>&gt;,</div></h4></section></summary><div class='docblock'>Sets up the systems needed to compute <code>T</code> whenever any <code>State</code> in this\n<code>StateSet</code> is changed.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_sub_state_systems_in_schedule\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_state/state/state_set.rs.html#341\">source</a><a href=\"#method.register_sub_state_systems_in_schedule\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/state/prelude/trait.StateSet.html#tymethod.register_sub_state_systems_in_schedule\" class=\"fn\">register_sub_state_systems_in_schedule</a>&lt;T&gt;(schedule: &amp;mut <a class=\"struct\" href=\"bevy/ecs/prelude/struct.Schedule.html\" title=\"struct bevy::ecs::prelude::Schedule\">Schedule</a>)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy/state/prelude/trait.SubStates.html\" title=\"trait bevy::state::prelude::SubStates\">SubStates</a>&lt;SourceStates = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(S0, S1, S2, S3)</a>&gt;,</div></h4></section></summary><div class='docblock'>Sets up the systems needed to compute whether <code>T</code> exists whenever any <code>State</code> in this\n<code>StateSet</code> is changed.</div></details></div></details>","StateSet","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StateSet-for-(S0,+S1,+S2,+S3,+S4)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_state/state/state_set.rs.html#341\">source</a><a href=\"#impl-StateSet-for-(S0,+S1,+S2,+S3,+S4)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S0, S1, S2, S3, S4&gt; <a class=\"trait\" href=\"bevy/state/prelude/trait.StateSet.html\" title=\"trait bevy::state::prelude::StateSet\">StateSet</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(S0, S1, S2, S3, S4)</a><div class=\"where\">where\n    S0: InnerStateSet,\n    S1: InnerStateSet,\n    S2: InnerStateSet,\n    S3: InnerStateSet,\n    S4: InnerStateSet,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.SET_DEPENDENCY_DEPTH\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bevy_state/state/state_set.rs.html#341\">source</a><a href=\"#associatedconstant.SET_DEPENDENCY_DEPTH\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bevy/state/prelude/trait.StateSet.html#associatedconstant.SET_DEPENDENCY_DEPTH\" class=\"constant\">SET_DEPENDENCY_DEPTH</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a> = _</h4></section></summary><div class='docblock'>The total <a href=\"bevy/state/prelude/trait.States.html#associatedconstant.DEPENDENCY_DEPTH\" title=\"associated constant bevy::state::prelude::States::DEPENDENCY_DEPTH\"><code>DEPENDENCY_DEPTH</code></a> of all\nthe states that are part of this <a href=\"bevy/state/prelude/trait.StateSet.html\" title=\"trait bevy::state::prelude::StateSet\"><code>StateSet</code></a>, added together. <a href=\"bevy/state/prelude/trait.StateSet.html#associatedconstant.SET_DEPENDENCY_DEPTH\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_computed_state_systems_in_schedule\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_state/state/state_set.rs.html#341\">source</a><a href=\"#method.register_computed_state_systems_in_schedule\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/state/prelude/trait.StateSet.html#tymethod.register_computed_state_systems_in_schedule\" class=\"fn\">register_computed_state_systems_in_schedule</a>&lt;T&gt;(schedule: &amp;mut <a class=\"struct\" href=\"bevy/ecs/prelude/struct.Schedule.html\" title=\"struct bevy::ecs::prelude::Schedule\">Schedule</a>)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy/state/prelude/trait.ComputedStates.html\" title=\"trait bevy::state::prelude::ComputedStates\">ComputedStates</a>&lt;SourceStates = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(S0, S1, S2, S3, S4)</a>&gt;,</div></h4></section></summary><div class='docblock'>Sets up the systems needed to compute <code>T</code> whenever any <code>State</code> in this\n<code>StateSet</code> is changed.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_sub_state_systems_in_schedule\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_state/state/state_set.rs.html#341\">source</a><a href=\"#method.register_sub_state_systems_in_schedule\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/state/prelude/trait.StateSet.html#tymethod.register_sub_state_systems_in_schedule\" class=\"fn\">register_sub_state_systems_in_schedule</a>&lt;T&gt;(schedule: &amp;mut <a class=\"struct\" href=\"bevy/ecs/prelude/struct.Schedule.html\" title=\"struct bevy::ecs::prelude::Schedule\">Schedule</a>)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy/state/prelude/trait.SubStates.html\" title=\"trait bevy::state::prelude::SubStates\">SubStates</a>&lt;SourceStates = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(S0, S1, S2, S3, S4)</a>&gt;,</div></h4></section></summary><div class='docblock'>Sets up the systems needed to compute whether <code>T</code> exists whenever any <code>State</code> in this\n<code>StateSet</code> is changed.</div></details></div></details>","StateSet","bevy::pbr::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StateSet-for-(S0,+S1,+S2,+S3,+S4,+S5,+S6)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_state/state/state_set.rs.html#341\">source</a><a href=\"#impl-StateSet-for-(S0,+S1,+S2,+S3,+S4,+S5,+S6)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S0, S1, S2, S3, S4, S5, S6&gt; <a class=\"trait\" href=\"bevy/state/prelude/trait.StateSet.html\" title=\"trait bevy::state::prelude::StateSet\">StateSet</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(S0, S1, S2, S3, S4, S5, S6)</a><div class=\"where\">where\n    S0: InnerStateSet,\n    S1: InnerStateSet,\n    S2: InnerStateSet,\n    S3: InnerStateSet,\n    S4: InnerStateSet,\n    S5: InnerStateSet,\n    S6: InnerStateSet,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.SET_DEPENDENCY_DEPTH\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bevy_state/state/state_set.rs.html#341\">source</a><a href=\"#associatedconstant.SET_DEPENDENCY_DEPTH\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bevy/state/prelude/trait.StateSet.html#associatedconstant.SET_DEPENDENCY_DEPTH\" class=\"constant\">SET_DEPENDENCY_DEPTH</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a> = _</h4></section></summary><div class='docblock'>The total <a href=\"bevy/state/prelude/trait.States.html#associatedconstant.DEPENDENCY_DEPTH\" title=\"associated constant bevy::state::prelude::States::DEPENDENCY_DEPTH\"><code>DEPENDENCY_DEPTH</code></a> of all\nthe states that are part of this <a href=\"bevy/state/prelude/trait.StateSet.html\" title=\"trait bevy::state::prelude::StateSet\"><code>StateSet</code></a>, added together. <a href=\"bevy/state/prelude/trait.StateSet.html#associatedconstant.SET_DEPENDENCY_DEPTH\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_computed_state_systems_in_schedule\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_state/state/state_set.rs.html#341\">source</a><a href=\"#method.register_computed_state_systems_in_schedule\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/state/prelude/trait.StateSet.html#tymethod.register_computed_state_systems_in_schedule\" class=\"fn\">register_computed_state_systems_in_schedule</a>&lt;T&gt;(schedule: &amp;mut <a class=\"struct\" href=\"bevy/ecs/prelude/struct.Schedule.html\" title=\"struct bevy::ecs::prelude::Schedule\">Schedule</a>)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy/state/prelude/trait.ComputedStates.html\" title=\"trait bevy::state::prelude::ComputedStates\">ComputedStates</a>&lt;SourceStates = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(S0, S1, S2, S3, S4, S5, S6)</a>&gt;,</div></h4></section></summary><div class='docblock'>Sets up the systems needed to compute <code>T</code> whenever any <code>State</code> in this\n<code>StateSet</code> is changed.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_sub_state_systems_in_schedule\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_state/state/state_set.rs.html#341\">source</a><a href=\"#method.register_sub_state_systems_in_schedule\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/state/prelude/trait.StateSet.html#tymethod.register_sub_state_systems_in_schedule\" class=\"fn\">register_sub_state_systems_in_schedule</a>&lt;T&gt;(schedule: &amp;mut <a class=\"struct\" href=\"bevy/ecs/prelude/struct.Schedule.html\" title=\"struct bevy::ecs::prelude::Schedule\">Schedule</a>)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy/state/prelude/trait.SubStates.html\" title=\"trait bevy::state::prelude::SubStates\">SubStates</a>&lt;SourceStates = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(S0, S1, S2, S3, S4, S5, S6)</a>&gt;,</div></h4></section></summary><div class='docblock'>Sets up the systems needed to compute whether <code>T</code> exists whenever any <code>State</code> in this\n<code>StateSet</code> is changed.</div></details></div></details>","StateSet","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SystemParam-for-(P0,+P1,+P2,+P3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#1480\">source</a><a href=\"#impl-SystemParam-for-(P0,+P1,+P2,+P3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P0, P1, P2, P3&gt; <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3)</a><div class=\"where\">where\n    P0: <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>,\n    P1: <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>,\n    P2: <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>,\n    P3: <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.State\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.State\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" class=\"associatedtype\">State</a> = (&lt;P0 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>, &lt;P1 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>, &lt;P2 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>, &lt;P3 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>)</h4></section></summary><div class='docblock'>Used to store data which persists across invocations of a system.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" class=\"associatedtype\">Item</a>&lt;'w, 's&gt; = (&lt;P0 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::SystemParam::Item\">Item</a>&lt;'w, 's&gt;, &lt;P1 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::SystemParam::Item\">Item</a>&lt;'w, 's&gt;, &lt;P2 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::SystemParam::Item\">Item</a>&lt;'w, 's&gt;, &lt;P3 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::SystemParam::Item\">Item</a>&lt;'w, 's&gt;)</h4></section></summary><div class='docblock'>The item type returned when constructing this system param.\nThe value of this associated type should be <code>Self</code>, instantiated with new lifetimes. <a href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#1480\">source</a><a href=\"#method.init_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/system/trait.SystemParam.html#tymethod.init_state\" class=\"fn\">init_state</a>(\n    _world: &amp;mut <a class=\"struct\" href=\"bevy/ecs/prelude/struct.World.html\" title=\"struct bevy::ecs::prelude::World\">World</a>,\n    _system_meta: &amp;mut <a class=\"struct\" href=\"bevy/ecs/system/struct.SystemMeta.html\" title=\"struct bevy::ecs::system::SystemMeta\">SystemMeta</a>\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a></h4></section></summary><div class='docblock'>Registers any <a href=\"bevy/ecs/prelude/struct.World.html\" title=\"struct bevy::ecs::prelude::World\"><code>World</code></a> access used by this <a href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\"><code>SystemParam</code></a>\nand creates a new instance of this param’s <a href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"associated type bevy_ecs::system::system_param::SystemParam::State::State\"><code>State</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_archetype\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#1480\">source</a><a href=\"#method.new_archetype\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy/ecs/system/trait.SystemParam.html#method.new_archetype\" class=\"fn\">new_archetype</a>(\n    _: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>,\n    _archetype: &amp;<a class=\"struct\" href=\"bevy/ecs/archetype/struct.Archetype.html\" title=\"struct bevy::ecs::archetype::Archetype\">Archetype</a>,\n    _system_meta: &amp;mut <a class=\"struct\" href=\"bevy/ecs/system/struct.SystemMeta.html\" title=\"struct bevy::ecs::system::SystemMeta\">SystemMeta</a>\n)</h4></section></summary><div class='docblock'>For the specified <a href=\"bevy/ecs/archetype/struct.Archetype.html\" title=\"struct bevy::ecs::archetype::Archetype\"><code>Archetype</code></a>, registers the components accessed by this <a href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\"><code>SystemParam</code></a> (if applicable).a <a href=\"bevy/ecs/system/trait.SystemParam.html#method.new_archetype\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#1480\">source</a><a href=\"#method.apply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/system/trait.SystemParam.html#method.apply\" class=\"fn\">apply</a>(\n    _: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>,\n    _system_meta: &amp;<a class=\"struct\" href=\"bevy/ecs/system/struct.SystemMeta.html\" title=\"struct bevy::ecs::system::SystemMeta\">SystemMeta</a>,\n    _world: &amp;mut <a class=\"struct\" href=\"bevy/ecs/prelude/struct.World.html\" title=\"struct bevy::ecs::prelude::World\">World</a>\n)</h4></section></summary><div class='docblock'>Applies any deferred mutations stored in this <a href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\"><code>SystemParam</code></a>’s state.\nThis is used to apply <a href=\"bevy/ecs/prelude/struct.Commands.html\" title=\"struct bevy::ecs::prelude::Commands\"><code>Commands</code></a> during <a href=\"bevy/ecs/prelude/fn.apply_deferred.html\" title=\"fn bevy::ecs::prelude::apply_deferred\"><code>apply_deferred</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.queue\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#1480\">source</a><a href=\"#method.queue\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/system/trait.SystemParam.html#method.queue\" class=\"fn\">queue</a>(\n    _: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>,\n    _system_meta: &amp;<a class=\"struct\" href=\"bevy/ecs/system/struct.SystemMeta.html\" title=\"struct bevy::ecs::system::SystemMeta\">SystemMeta</a>,\n    _world: <a class=\"struct\" href=\"bevy/ecs/world/struct.DeferredWorld.html\" title=\"struct bevy::ecs::world::DeferredWorld\">DeferredWorld</a>&lt;'_&gt;\n)</h4></section></summary><div class='docblock'>Queues any deferred mutations to be applied at the next <a href=\"bevy/ecs/prelude/fn.apply_deferred.html\" title=\"fn bevy::ecs::prelude::apply_deferred\"><code>apply_deferred</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_param\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#1480\">source</a><a href=\"#method.get_param\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy/ecs/system/trait.SystemParam.html#tymethod.get_param\" class=\"fn\">get_param</a>&lt;'w, 's&gt;(\n    state: &amp;'s mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>,\n    _system_meta: &amp;<a class=\"struct\" href=\"bevy/ecs/system/struct.SystemMeta.html\" title=\"struct bevy::ecs::system::SystemMeta\">SystemMeta</a>,\n    _world: <a class=\"struct\" href=\"bevy/ecs/world/unsafe_world_cell/struct.UnsafeWorldCell.html\" title=\"struct bevy::ecs::world::unsafe_world_cell::UnsafeWorldCell\">UnsafeWorldCell</a>&lt;'w&gt;,\n    _change_tick: <a class=\"struct\" href=\"bevy/ecs/component/struct.Tick.html\" title=\"struct bevy::ecs::component::Tick\">Tick</a>\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::SystemParam::Item\">Item</a>&lt;'w, 's&gt;</h4></section></summary><div class='docblock'>Creates a parameter to be passed into a <a href=\"bevy/ecs/prelude/trait.SystemParamFunction.html\" title=\"trait bevy::ecs::prelude::SystemParamFunction\"><code>SystemParamFunction</code></a>. <a href=\"bevy/ecs/system/trait.SystemParam.html#tymethod.get_param\">Read more</a></div></details></div></details>","SystemParam","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SystemParam-for-(P0,+P1,+P2,+P3,+P4)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#1480\">source</a><a href=\"#impl-SystemParam-for-(P0,+P1,+P2,+P3,+P4)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P0, P1, P2, P3, P4&gt; <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4)</a><div class=\"where\">where\n    P0: <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>,\n    P1: <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>,\n    P2: <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>,\n    P3: <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>,\n    P4: <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.State\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.State\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" class=\"associatedtype\">State</a> = (&lt;P0 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>, &lt;P1 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>, &lt;P2 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>, &lt;P3 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>, &lt;P4 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>)</h4></section></summary><div class='docblock'>Used to store data which persists across invocations of a system.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" class=\"associatedtype\">Item</a>&lt;'w, 's&gt; = (&lt;P0 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::SystemParam::Item\">Item</a>&lt;'w, 's&gt;, &lt;P1 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::SystemParam::Item\">Item</a>&lt;'w, 's&gt;, &lt;P2 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::SystemParam::Item\">Item</a>&lt;'w, 's&gt;, &lt;P3 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::SystemParam::Item\">Item</a>&lt;'w, 's&gt;, &lt;P4 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::SystemParam::Item\">Item</a>&lt;'w, 's&gt;)</h4></section></summary><div class='docblock'>The item type returned when constructing this system param.\nThe value of this associated type should be <code>Self</code>, instantiated with new lifetimes. <a href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#1480\">source</a><a href=\"#method.init_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/system/trait.SystemParam.html#tymethod.init_state\" class=\"fn\">init_state</a>(\n    _world: &amp;mut <a class=\"struct\" href=\"bevy/ecs/prelude/struct.World.html\" title=\"struct bevy::ecs::prelude::World\">World</a>,\n    _system_meta: &amp;mut <a class=\"struct\" href=\"bevy/ecs/system/struct.SystemMeta.html\" title=\"struct bevy::ecs::system::SystemMeta\">SystemMeta</a>\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a></h4></section></summary><div class='docblock'>Registers any <a href=\"bevy/ecs/prelude/struct.World.html\" title=\"struct bevy::ecs::prelude::World\"><code>World</code></a> access used by this <a href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\"><code>SystemParam</code></a>\nand creates a new instance of this param’s <a href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"associated type bevy_ecs::system::system_param::SystemParam::State::State\"><code>State</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_archetype\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#1480\">source</a><a href=\"#method.new_archetype\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy/ecs/system/trait.SystemParam.html#method.new_archetype\" class=\"fn\">new_archetype</a>(\n    _: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>,\n    _archetype: &amp;<a class=\"struct\" href=\"bevy/ecs/archetype/struct.Archetype.html\" title=\"struct bevy::ecs::archetype::Archetype\">Archetype</a>,\n    _system_meta: &amp;mut <a class=\"struct\" href=\"bevy/ecs/system/struct.SystemMeta.html\" title=\"struct bevy::ecs::system::SystemMeta\">SystemMeta</a>\n)</h4></section></summary><div class='docblock'>For the specified <a href=\"bevy/ecs/archetype/struct.Archetype.html\" title=\"struct bevy::ecs::archetype::Archetype\"><code>Archetype</code></a>, registers the components accessed by this <a href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\"><code>SystemParam</code></a> (if applicable).a <a href=\"bevy/ecs/system/trait.SystemParam.html#method.new_archetype\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#1480\">source</a><a href=\"#method.apply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/system/trait.SystemParam.html#method.apply\" class=\"fn\">apply</a>(\n    _: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>,\n    _system_meta: &amp;<a class=\"struct\" href=\"bevy/ecs/system/struct.SystemMeta.html\" title=\"struct bevy::ecs::system::SystemMeta\">SystemMeta</a>,\n    _world: &amp;mut <a class=\"struct\" href=\"bevy/ecs/prelude/struct.World.html\" title=\"struct bevy::ecs::prelude::World\">World</a>\n)</h4></section></summary><div class='docblock'>Applies any deferred mutations stored in this <a href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\"><code>SystemParam</code></a>’s state.\nThis is used to apply <a href=\"bevy/ecs/prelude/struct.Commands.html\" title=\"struct bevy::ecs::prelude::Commands\"><code>Commands</code></a> during <a href=\"bevy/ecs/prelude/fn.apply_deferred.html\" title=\"fn bevy::ecs::prelude::apply_deferred\"><code>apply_deferred</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.queue\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#1480\">source</a><a href=\"#method.queue\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/system/trait.SystemParam.html#method.queue\" class=\"fn\">queue</a>(\n    _: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>,\n    _system_meta: &amp;<a class=\"struct\" href=\"bevy/ecs/system/struct.SystemMeta.html\" title=\"struct bevy::ecs::system::SystemMeta\">SystemMeta</a>,\n    _world: <a class=\"struct\" href=\"bevy/ecs/world/struct.DeferredWorld.html\" title=\"struct bevy::ecs::world::DeferredWorld\">DeferredWorld</a>&lt;'_&gt;\n)</h4></section></summary><div class='docblock'>Queues any deferred mutations to be applied at the next <a href=\"bevy/ecs/prelude/fn.apply_deferred.html\" title=\"fn bevy::ecs::prelude::apply_deferred\"><code>apply_deferred</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_param\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#1480\">source</a><a href=\"#method.get_param\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy/ecs/system/trait.SystemParam.html#tymethod.get_param\" class=\"fn\">get_param</a>&lt;'w, 's&gt;(\n    state: &amp;'s mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>,\n    _system_meta: &amp;<a class=\"struct\" href=\"bevy/ecs/system/struct.SystemMeta.html\" title=\"struct bevy::ecs::system::SystemMeta\">SystemMeta</a>,\n    _world: <a class=\"struct\" href=\"bevy/ecs/world/unsafe_world_cell/struct.UnsafeWorldCell.html\" title=\"struct bevy::ecs::world::unsafe_world_cell::UnsafeWorldCell\">UnsafeWorldCell</a>&lt;'w&gt;,\n    _change_tick: <a class=\"struct\" href=\"bevy/ecs/component/struct.Tick.html\" title=\"struct bevy::ecs::component::Tick\">Tick</a>\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::SystemParam::Item\">Item</a>&lt;'w, 's&gt;</h4></section></summary><div class='docblock'>Creates a parameter to be passed into a <a href=\"bevy/ecs/prelude/trait.SystemParamFunction.html\" title=\"trait bevy::ecs::prelude::SystemParamFunction\"><code>SystemParamFunction</code></a>. <a href=\"bevy/ecs/system/trait.SystemParam.html#tymethod.get_param\">Read more</a></div></details></div></details>","SystemParam","bevy::pbr::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SystemParam-for-(P0,+P1,+P2,+P3,+P4,+P5,+P6)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#1480\">source</a><a href=\"#impl-SystemParam-for-(P0,+P1,+P2,+P3,+P4,+P5,+P6)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P0, P1, P2, P3, P4, P5, P6&gt; <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4, P5, P6)</a><div class=\"where\">where\n    P0: <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>,\n    P1: <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>,\n    P2: <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>,\n    P3: <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>,\n    P4: <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>,\n    P5: <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>,\n    P6: <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.State\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.State\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" class=\"associatedtype\">State</a> = (&lt;P0 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>, &lt;P1 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>, &lt;P2 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>, &lt;P3 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>, &lt;P4 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>, &lt;P5 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>, &lt;P6 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>)</h4></section></summary><div class='docblock'>Used to store data which persists across invocations of a system.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" class=\"associatedtype\">Item</a>&lt;'w, 's&gt; = (&lt;P0 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::SystemParam::Item\">Item</a>&lt;'w, 's&gt;, &lt;P1 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::SystemParam::Item\">Item</a>&lt;'w, 's&gt;, &lt;P2 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::SystemParam::Item\">Item</a>&lt;'w, 's&gt;, &lt;P3 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::SystemParam::Item\">Item</a>&lt;'w, 's&gt;, &lt;P4 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::SystemParam::Item\">Item</a>&lt;'w, 's&gt;, &lt;P5 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::SystemParam::Item\">Item</a>&lt;'w, 's&gt;, &lt;P6 as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::SystemParam::Item\">Item</a>&lt;'w, 's&gt;)</h4></section></summary><div class='docblock'>The item type returned when constructing this system param.\nThe value of this associated type should be <code>Self</code>, instantiated with new lifetimes. <a href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#1480\">source</a><a href=\"#method.init_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/system/trait.SystemParam.html#tymethod.init_state\" class=\"fn\">init_state</a>(\n    _world: &amp;mut <a class=\"struct\" href=\"bevy/ecs/prelude/struct.World.html\" title=\"struct bevy::ecs::prelude::World\">World</a>,\n    _system_meta: &amp;mut <a class=\"struct\" href=\"bevy/ecs/system/struct.SystemMeta.html\" title=\"struct bevy::ecs::system::SystemMeta\">SystemMeta</a>\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4, P5, P6)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a></h4></section></summary><div class='docblock'>Registers any <a href=\"bevy/ecs/prelude/struct.World.html\" title=\"struct bevy::ecs::prelude::World\"><code>World</code></a> access used by this <a href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\"><code>SystemParam</code></a>\nand creates a new instance of this param’s <a href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"associated type bevy_ecs::system::system_param::SystemParam::State::State\"><code>State</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_archetype\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#1480\">source</a><a href=\"#method.new_archetype\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy/ecs/system/trait.SystemParam.html#method.new_archetype\" class=\"fn\">new_archetype</a>(\n    _: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4, P5, P6)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>,\n    _archetype: &amp;<a class=\"struct\" href=\"bevy/ecs/archetype/struct.Archetype.html\" title=\"struct bevy::ecs::archetype::Archetype\">Archetype</a>,\n    _system_meta: &amp;mut <a class=\"struct\" href=\"bevy/ecs/system/struct.SystemMeta.html\" title=\"struct bevy::ecs::system::SystemMeta\">SystemMeta</a>\n)</h4></section></summary><div class='docblock'>For the specified <a href=\"bevy/ecs/archetype/struct.Archetype.html\" title=\"struct bevy::ecs::archetype::Archetype\"><code>Archetype</code></a>, registers the components accessed by this <a href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\"><code>SystemParam</code></a> (if applicable).a <a href=\"bevy/ecs/system/trait.SystemParam.html#method.new_archetype\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#1480\">source</a><a href=\"#method.apply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/system/trait.SystemParam.html#method.apply\" class=\"fn\">apply</a>(\n    _: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4, P5, P6)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>,\n    _system_meta: &amp;<a class=\"struct\" href=\"bevy/ecs/system/struct.SystemMeta.html\" title=\"struct bevy::ecs::system::SystemMeta\">SystemMeta</a>,\n    _world: &amp;mut <a class=\"struct\" href=\"bevy/ecs/prelude/struct.World.html\" title=\"struct bevy::ecs::prelude::World\">World</a>\n)</h4></section></summary><div class='docblock'>Applies any deferred mutations stored in this <a href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\"><code>SystemParam</code></a>’s state.\nThis is used to apply <a href=\"bevy/ecs/prelude/struct.Commands.html\" title=\"struct bevy::ecs::prelude::Commands\"><code>Commands</code></a> during <a href=\"bevy/ecs/prelude/fn.apply_deferred.html\" title=\"fn bevy::ecs::prelude::apply_deferred\"><code>apply_deferred</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.queue\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#1480\">source</a><a href=\"#method.queue\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/system/trait.SystemParam.html#method.queue\" class=\"fn\">queue</a>(\n    _: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4, P5, P6)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>,\n    _system_meta: &amp;<a class=\"struct\" href=\"bevy/ecs/system/struct.SystemMeta.html\" title=\"struct bevy::ecs::system::SystemMeta\">SystemMeta</a>,\n    _world: <a class=\"struct\" href=\"bevy/ecs/world/struct.DeferredWorld.html\" title=\"struct bevy::ecs::world::DeferredWorld\">DeferredWorld</a>&lt;'_&gt;\n)</h4></section></summary><div class='docblock'>Queues any deferred mutations to be applied at the next <a href=\"bevy/ecs/prelude/fn.apply_deferred.html\" title=\"fn bevy::ecs::prelude::apply_deferred\"><code>apply_deferred</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_param\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#1480\">source</a><a href=\"#method.get_param\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy/ecs/system/trait.SystemParam.html#tymethod.get_param\" class=\"fn\">get_param</a>&lt;'w, 's&gt;(\n    state: &amp;'s mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4, P5, P6)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.State\" title=\"type bevy::ecs::system::SystemParam::State\">State</a>,\n    _system_meta: &amp;<a class=\"struct\" href=\"bevy/ecs/system/struct.SystemMeta.html\" title=\"struct bevy::ecs::system::SystemMeta\">SystemMeta</a>,\n    _world: <a class=\"struct\" href=\"bevy/ecs/world/unsafe_world_cell/struct.UnsafeWorldCell.html\" title=\"struct bevy::ecs::world::unsafe_world_cell::UnsafeWorldCell\">UnsafeWorldCell</a>&lt;'w&gt;,\n    _change_tick: <a class=\"struct\" href=\"bevy/ecs/component/struct.Tick.html\" title=\"struct bevy::ecs::component::Tick\">Tick</a>\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4, P5, P6)</a> as <a class=\"trait\" href=\"bevy/ecs/system/trait.SystemParam.html\" title=\"trait bevy::ecs::system::SystemParam\">SystemParam</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/system/trait.SystemParam.html#associatedtype.Item\" title=\"type bevy::ecs::system::SystemParam::Item\">Item</a>&lt;'w, 's&gt;</h4></section></summary><div class='docblock'>Creates a parameter to be passed into a <a href=\"bevy/ecs/prelude/trait.SystemParamFunction.html\" title=\"trait bevy::ecs::prelude::SystemParamFunction\"><code>SystemParamFunction</code></a>. <a href=\"bevy/ecs/system/trait.SystemParam.html#tymethod.get_param\">Read more</a></div></details></div></details>","SystemParam","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tuple-for-(A,+B,+C,+D)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#impl-Tuple-for-(A,+B,+C,+D)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D&gt; <a class=\"trait\" href=\"bevy/reflect/trait.Tuple.html\" title=\"trait bevy::reflect::Tuple\">Tuple</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    B: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    C: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    D: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.field\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.field\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Tuple.html#tymethod.field\" class=\"fn\">field</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;(dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns a reference to the value of the field with index <code>index</code> as a\n<code>&amp;dyn Reflect</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.field_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.field_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Tuple.html#tymethod.field_mut\" class=\"fn\">field_mut</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut (dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns a mutable reference to the value of the field with index <code>index</code>\nas a <code>&amp;mut dyn Reflect</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.field_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.field_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Tuple.html#tymethod.field_len\" class=\"fn\">field_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the number of fields in the tuple.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_fields\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.iter_fields\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Tuple.html#tymethod.iter_fields\" class=\"fn\">iter_fields</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bevy/reflect/struct.TupleFieldIter.html\" title=\"struct bevy::reflect::TupleFieldIter\">TupleFieldIter</a>&lt;'_&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"TupleFieldIter&lt;&#39;_&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Returns an iterator over the values of the tuple’s fields.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.drain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Tuple.html#tymethod.drain\" class=\"fn\">drain</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Drain the fields of this tuple to get a vector of owned values.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_dynamic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.clone_dynamic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Tuple.html#tymethod.clone_dynamic\" class=\"fn\">clone_dynamic</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bevy/reflect/struct.DynamicTuple.html\" title=\"struct bevy::reflect::DynamicTuple\">DynamicTuple</a></h4></section></summary><div class='docblock'>Clones the struct into a <a href=\"bevy/reflect/struct.DynamicTuple.html\" title=\"struct bevy::reflect::DynamicTuple\"><code>DynamicTuple</code></a>.</div></details></div></details>","Tuple","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tuple-for-(A,+B,+C,+D,+E)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#impl-Tuple-for-(A,+B,+C,+D,+E)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E&gt; <a class=\"trait\" href=\"bevy/reflect/trait.Tuple.html\" title=\"trait bevy::reflect::Tuple\">Tuple</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D, E)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    B: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    C: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    D: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    E: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.field\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.field\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Tuple.html#tymethod.field\" class=\"fn\">field</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;(dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns a reference to the value of the field with index <code>index</code> as a\n<code>&amp;dyn Reflect</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.field_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.field_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Tuple.html#tymethod.field_mut\" class=\"fn\">field_mut</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut (dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns a mutable reference to the value of the field with index <code>index</code>\nas a <code>&amp;mut dyn Reflect</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.field_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.field_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Tuple.html#tymethod.field_len\" class=\"fn\">field_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the number of fields in the tuple.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_fields\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.iter_fields\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Tuple.html#tymethod.iter_fields\" class=\"fn\">iter_fields</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bevy/reflect/struct.TupleFieldIter.html\" title=\"struct bevy::reflect::TupleFieldIter\">TupleFieldIter</a>&lt;'_&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"TupleFieldIter&lt;&#39;_&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Returns an iterator over the values of the tuple’s fields.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.drain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Tuple.html#tymethod.drain\" class=\"fn\">drain</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Drain the fields of this tuple to get a vector of owned values.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_dynamic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.clone_dynamic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Tuple.html#tymethod.clone_dynamic\" class=\"fn\">clone_dynamic</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bevy/reflect/struct.DynamicTuple.html\" title=\"struct bevy::reflect::DynamicTuple\">DynamicTuple</a></h4></section></summary><div class='docblock'>Clones the struct into a <a href=\"bevy/reflect/struct.DynamicTuple.html\" title=\"struct bevy::reflect::DynamicTuple\"><code>DynamicTuple</code></a>.</div></details></div></details>","Tuple","bevy::pbr::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tuple-for-(A,+B,+C,+D,+E,+F,+G)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#impl-Tuple-for-(A,+B,+C,+D,+E,+F,+G)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, F, G&gt; <a class=\"trait\" href=\"bevy/reflect/trait.Tuple.html\" title=\"trait bevy::reflect::Tuple\">Tuple</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    B: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    C: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    D: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    E: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    F: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    G: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.field\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.field\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Tuple.html#tymethod.field\" class=\"fn\">field</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;(dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns a reference to the value of the field with index <code>index</code> as a\n<code>&amp;dyn Reflect</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.field_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.field_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Tuple.html#tymethod.field_mut\" class=\"fn\">field_mut</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut (dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns a mutable reference to the value of the field with index <code>index</code>\nas a <code>&amp;mut dyn Reflect</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.field_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.field_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Tuple.html#tymethod.field_len\" class=\"fn\">field_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the number of fields in the tuple.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_fields\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.iter_fields\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Tuple.html#tymethod.iter_fields\" class=\"fn\">iter_fields</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bevy/reflect/struct.TupleFieldIter.html\" title=\"struct bevy::reflect::TupleFieldIter\">TupleFieldIter</a>&lt;'_&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"TupleFieldIter&lt;&#39;_&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Returns an iterator over the values of the tuple’s fields.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.drain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Tuple.html#tymethod.drain\" class=\"fn\">drain</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Drain the fields of this tuple to get a vector of owned values.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_dynamic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.clone_dynamic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Tuple.html#tymethod.clone_dynamic\" class=\"fn\">clone_dynamic</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bevy/reflect/struct.DynamicTuple.html\" title=\"struct bevy::reflect::DynamicTuple\">DynamicTuple</a></h4></section></summary><div class='docblock'>Clones the struct into a <a href=\"bevy/reflect/struct.DynamicTuple.html\" title=\"struct bevy::reflect::DynamicTuple\"><code>DynamicTuple</code></a>.</div></details></div></details>","Tuple","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypePath-for-(P1,+P2,+P3,+P0)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#711\">source</a><a href=\"#impl-TypePath-for-(P1,+P2,+P3,+P0)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P1, P2, P3, P0&gt; <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P1, P2, P3, P0)</a><div class=\"where\">where\n    P1: <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a>,\n    P2: <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a>,\n    P3: <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a>,\n    P0: <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#711\">source</a><a href=\"#method.type_path\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.TypePath.html#tymethod.type_path\" class=\"fn\">type_path</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Returns the fully qualified path of the underlying type. <a href=\"bevy/reflect/trait.TypePath.html#tymethod.type_path\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.short_type_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#711\">source</a><a href=\"#method.short_type_path\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.TypePath.html#tymethod.short_type_path\" class=\"fn\">short_type_path</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Returns a short, pretty-print enabled path to the type. <a href=\"bevy/reflect/trait.TypePath.html#tymethod.short_type_path\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_ident\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/type_path.rs.html#108\">source</a><a href=\"#method.type_ident\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.TypePath.html#method.type_ident\" class=\"fn\">type_ident</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the name of the type, or <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy/reflect/trait.TypePath.html#anonymity\" title=\"trait bevy::reflect::TypePath\">anonymous</a>. <a href=\"bevy/reflect/trait.TypePath.html#method.type_ident\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/type_path.rs.html#117\">source</a><a href=\"#method.crate_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.TypePath.html#method.crate_name\" class=\"fn\">crate_name</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the name of the crate the type is in, or <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy/reflect/trait.TypePath.html#anonymity\" title=\"trait bevy::reflect::TypePath\">anonymous</a>. <a href=\"bevy/reflect/trait.TypePath.html#method.crate_name\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/type_path.rs.html#126\">source</a><a href=\"#method.module_path\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.TypePath.html#method.module_path\" class=\"fn\">module_path</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the path to the module the type is in, or <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy/reflect/trait.TypePath.html#anonymity\" title=\"trait bevy::reflect::TypePath\">anonymous</a>. <a href=\"bevy/reflect/trait.TypePath.html#method.module_path\">Read more</a></div></details></div></details>","TypePath","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypePath-for-(P1,+P2,+P3,+P4,+P0)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#711\">source</a><a href=\"#impl-TypePath-for-(P1,+P2,+P3,+P4,+P0)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P1, P2, P3, P4, P0&gt; <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P1, P2, P3, P4, P0)</a><div class=\"where\">where\n    P1: <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a>,\n    P2: <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a>,\n    P3: <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a>,\n    P4: <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a>,\n    P0: <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#711\">source</a><a href=\"#method.type_path\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.TypePath.html#tymethod.type_path\" class=\"fn\">type_path</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Returns the fully qualified path of the underlying type. <a href=\"bevy/reflect/trait.TypePath.html#tymethod.type_path\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.short_type_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#711\">source</a><a href=\"#method.short_type_path\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.TypePath.html#tymethod.short_type_path\" class=\"fn\">short_type_path</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Returns a short, pretty-print enabled path to the type. <a href=\"bevy/reflect/trait.TypePath.html#tymethod.short_type_path\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_ident\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/type_path.rs.html#108\">source</a><a href=\"#method.type_ident\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.TypePath.html#method.type_ident\" class=\"fn\">type_ident</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the name of the type, or <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy/reflect/trait.TypePath.html#anonymity\" title=\"trait bevy::reflect::TypePath\">anonymous</a>. <a href=\"bevy/reflect/trait.TypePath.html#method.type_ident\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/type_path.rs.html#117\">source</a><a href=\"#method.crate_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.TypePath.html#method.crate_name\" class=\"fn\">crate_name</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the name of the crate the type is in, or <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy/reflect/trait.TypePath.html#anonymity\" title=\"trait bevy::reflect::TypePath\">anonymous</a>. <a href=\"bevy/reflect/trait.TypePath.html#method.crate_name\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/type_path.rs.html#126\">source</a><a href=\"#method.module_path\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.TypePath.html#method.module_path\" class=\"fn\">module_path</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the path to the module the type is in, or <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy/reflect/trait.TypePath.html#anonymity\" title=\"trait bevy::reflect::TypePath\">anonymous</a>. <a href=\"bevy/reflect/trait.TypePath.html#method.module_path\">Read more</a></div></details></div></details>","TypePath","bevy::pbr::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypePath-for-(P1,+P2,+P3,+P4,+P5,+P6,+P0)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#711\">source</a><a href=\"#impl-TypePath-for-(P1,+P2,+P3,+P4,+P5,+P6,+P0)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P1, P2, P3, P4, P5, P6, P0&gt; <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P1, P2, P3, P4, P5, P6, P0)</a><div class=\"where\">where\n    P1: <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a>,\n    P2: <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a>,\n    P3: <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a>,\n    P4: <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a>,\n    P5: <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a>,\n    P6: <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a>,\n    P0: <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#711\">source</a><a href=\"#method.type_path\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.TypePath.html#tymethod.type_path\" class=\"fn\">type_path</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Returns the fully qualified path of the underlying type. <a href=\"bevy/reflect/trait.TypePath.html#tymethod.type_path\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.short_type_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#711\">source</a><a href=\"#method.short_type_path\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.TypePath.html#tymethod.short_type_path\" class=\"fn\">short_type_path</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Returns a short, pretty-print enabled path to the type. <a href=\"bevy/reflect/trait.TypePath.html#tymethod.short_type_path\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_ident\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/type_path.rs.html#108\">source</a><a href=\"#method.type_ident\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.TypePath.html#method.type_ident\" class=\"fn\">type_ident</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the name of the type, or <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy/reflect/trait.TypePath.html#anonymity\" title=\"trait bevy::reflect::TypePath\">anonymous</a>. <a href=\"bevy/reflect/trait.TypePath.html#method.type_ident\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/type_path.rs.html#117\">source</a><a href=\"#method.crate_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.TypePath.html#method.crate_name\" class=\"fn\">crate_name</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the name of the crate the type is in, or <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy/reflect/trait.TypePath.html#anonymity\" title=\"trait bevy::reflect::TypePath\">anonymous</a>. <a href=\"bevy/reflect/trait.TypePath.html#method.crate_name\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/type_path.rs.html#126\">source</a><a href=\"#method.module_path\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.TypePath.html#method.module_path\" class=\"fn\">module_path</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the path to the module the type is in, or <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy/reflect/trait.TypePath.html#anonymity\" title=\"trait bevy::reflect::TypePath\">anonymous</a>. <a href=\"bevy/reflect/trait.TypePath.html#method.module_path\">Read more</a></div></details></div></details>","TypePath","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Typed-for-(A,+B,+C,+D)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#impl-Typed-for-(A,+B,+C,+D)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D&gt; <a class=\"trait\" href=\"bevy/reflect/trait.Typed.html\" title=\"trait bevy::reflect::Typed\">Typed</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    B: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    C: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    D: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#650\">source</a><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Typed.html#tymethod.type_info\" class=\"fn\">type_info</a>() -&gt; &amp;'static <a class=\"enum\" href=\"bevy/reflect/enum.TypeInfo.html\" title=\"enum bevy::reflect::TypeInfo\">TypeInfo</a></h4></section></summary><div class='docblock'>Returns the compile-time <a href=\"bevy/reflect/enum.TypeInfo.html\" title=\"enum bevy::reflect::TypeInfo\">info</a> for the underlying type.</div></details></div></details>","Typed","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Typed-for-(A,+B,+C,+D,+E)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#impl-Typed-for-(A,+B,+C,+D,+E)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E&gt; <a class=\"trait\" href=\"bevy/reflect/trait.Typed.html\" title=\"trait bevy::reflect::Typed\">Typed</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D, E)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    B: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    C: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    D: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    E: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#651\">source</a><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Typed.html#tymethod.type_info\" class=\"fn\">type_info</a>() -&gt; &amp;'static <a class=\"enum\" href=\"bevy/reflect/enum.TypeInfo.html\" title=\"enum bevy::reflect::TypeInfo\">TypeInfo</a></h4></section></summary><div class='docblock'>Returns the compile-time <a href=\"bevy/reflect/enum.TypeInfo.html\" title=\"enum bevy::reflect::TypeInfo\">info</a> for the underlying type.</div></details></div></details>","Typed","bevy::pbr::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Typed-for-(A,+B,+C,+D,+E,+F,+G)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#impl-Typed-for-(A,+B,+C,+D,+E,+F,+G)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, F, G&gt; <a class=\"trait\" href=\"bevy/reflect/trait.Typed.html\" title=\"trait bevy::reflect::Typed\">Typed</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    B: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    C: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    D: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    E: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    F: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,\n    G: <a class=\"trait\" href=\"bevy/reflect/trait.Reflect.html\" title=\"trait bevy::reflect::Reflect\">Reflect</a> + <a class=\"trait\" href=\"bevy/reflect/trait.TypePath.html\" title=\"trait bevy::reflect::TypePath\">TypePath</a> + <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/tuple.rs.html#653\">source</a><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Typed.html#tymethod.type_info\" class=\"fn\">type_info</a>() -&gt; &amp;'static <a class=\"enum\" href=\"bevy/reflect/enum.TypeInfo.html\" title=\"enum bevy::reflect::TypeInfo\">TypeInfo</a></h4></section></summary><div class='docblock'>Returns the compile-time <a href=\"bevy/reflect/enum.TypeInfo.html\" title=\"enum bevy::reflect::TypeInfo\">info</a> for the underlying type.</div></details></div></details>","Typed","bevy::winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WorldQuery-for-(F0,+F1,+F2,+F3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#impl-WorldQuery-for-(F0,+F1,+F2,+F3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F0, F1, F2, F3&gt; <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3)</a><div class=\"where\">where\n    F0: <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>,\n    F1: <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>,\n    F2: <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>,\n    F3: <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>,</div></h3></section></summary><div class=\"docblock\"><p>SAFETY:\n<code>fetch</code> accesses are the conjunction of the subqueries’ accesses\nThis is sound because <code>update_component_access</code> adds accesses according to the implementations of all the subqueries.\n<code>update_component_access</code> adds all <code>With</code> and <code>Without</code> filters from the subqueries.\nThis is sound because <code>matches_component_set</code> always returns <code>false</code> if any the subqueries’ implementations return <code>false</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Fetch\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" class=\"associatedtype\">Fetch</a>&lt;'w&gt; = (&lt;F0 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;, &lt;F1 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;, &lt;F2 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;, &lt;F3 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;)</h4></section></summary><div class='docblock'>Per archetype/table state used by this <a href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\"><code>WorldQuery</code></a> to fetch <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"associated type bevy::ecs::query::WorldQuery::Item\"><code>Self::Item</code></a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" class=\"associatedtype\">Item</a>&lt;'w&gt; = (&lt;F0 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;, &lt;F1 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;, &lt;F2 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;, &lt;F3 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;)</h4></section></summary><div class='docblock'>The item returned by this <a href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\"><code>WorldQuery</code></a>\nFor <code>QueryData</code> this will be the item returned by the query.\nFor <code>QueryFilter</code> this will be either <code>()</code>, or a <code>bool</code> indicating whether the entity should be included\nor a tuple of such things.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.State\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.State\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" class=\"associatedtype\">State</a> = (&lt;F0 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>, &lt;F1 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>, &lt;F2 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>, &lt;F3 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>)</h4></section></summary><div class='docblock'>State used to construct a <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"associated type bevy::ecs::query::WorldQuery::Fetch\"><code>Self::Fetch</code></a>. This will be cached inside <a href=\"bevy/ecs/prelude/struct.QueryState.html\" title=\"struct bevy::ecs::prelude::QueryState\"><code>QueryState</code></a>,\nso it is best to move as much data / computation here as possible to reduce the cost of\nconstructing <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"associated type bevy::ecs::query::WorldQuery::Fetch\"><code>Self::Fetch</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.shrink\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.shrink\" class=\"fn\">shrink</a>&lt;'wlong, 'wshort&gt;(\n    item: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'wlong&gt;\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'wshort&gt;<div class=\"where\">where\n    'wlong: 'wshort,</div></h4></section></summary><div class='docblock'>This function manually implements subtyping for the query items.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init_fetch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.init_fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.init_fetch\" class=\"fn\">init_fetch</a>&lt;'w&gt;(\n    _world: <a class=\"struct\" href=\"bevy/ecs/world/unsafe_world_cell/struct.UnsafeWorldCell.html\" title=\"struct bevy::ecs::world::unsafe_world_cell::UnsafeWorldCell\">UnsafeWorldCell</a>&lt;'w&gt;,\n    state: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>,\n    _last_run: <a class=\"struct\" href=\"bevy/ecs/component/struct.Tick.html\" title=\"struct bevy::ecs::component::Tick\">Tick</a>,\n    _this_run: <a class=\"struct\" href=\"bevy/ecs/component/struct.Tick.html\" title=\"struct bevy::ecs::component::Tick\">Tick</a>\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;</h4></section></summary><div class='docblock'>Creates a new instance of this fetch. <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.init_fetch\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.IS_DENSE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#associatedconstant.IS_DENSE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedconstant.IS_DENSE\" class=\"constant\">IS_DENSE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a> = _</h4></section></summary><div class='docblock'>Returns true if (and only if) every table of every archetype matched by this fetch contains\nall of the matched components. This is used to select a more efficient “table iterator”\nfor “dense” queries. If this returns true, <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_table\" title=\"associated function bevy::ecs::query::WorldQuery::set_table\"><code>WorldQuery::set_table</code></a> must be used before\n<a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.fetch\" title=\"associated function bevy::ecs::query::WorldQuery::fetch\"><code>WorldQuery::fetch</code></a> can be called for iterators. If this returns false,\n<a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_archetype\" title=\"associated function bevy::ecs::query::WorldQuery::set_archetype\"><code>WorldQuery::set_archetype</code></a> must be used before <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.fetch\" title=\"associated function bevy::ecs::query::WorldQuery::fetch\"><code>WorldQuery::fetch</code></a> can be called for\niterators.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_archetype\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.set_archetype\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_archetype\" class=\"fn\">set_archetype</a>&lt;'w&gt;(\n    _fetch: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;,\n    _state: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>,\n    _archetype: &amp;'w <a class=\"struct\" href=\"bevy/ecs/archetype/struct.Archetype.html\" title=\"struct bevy::ecs::archetype::Archetype\">Archetype</a>,\n    _table: &amp;'w <a class=\"struct\" href=\"bevy/ecs/storage/struct.Table.html\" title=\"struct bevy::ecs::storage::Table\">Table</a>\n)</h4></section></summary><div class='docblock'>Adjusts internal state to account for the next <a href=\"bevy/ecs/archetype/struct.Archetype.html\" title=\"struct bevy::ecs::archetype::Archetype\"><code>Archetype</code></a>. This will always be called on\narchetypes that match this <a href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\"><code>WorldQuery</code></a>. <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_archetype\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_table\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.set_table\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_table\" class=\"fn\">set_table</a>&lt;'w&gt;(\n    _fetch: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;,\n    _state: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>,\n    _table: &amp;'w <a class=\"struct\" href=\"bevy/ecs/storage/struct.Table.html\" title=\"struct bevy::ecs::storage::Table\">Table</a>\n)</h4></section></summary><div class='docblock'>Adjusts internal state to account for the next <a href=\"bevy/ecs/storage/struct.Table.html\" title=\"struct bevy::ecs::storage::Table\"><code>Table</code></a>. This will always be called on tables\nthat match this <a href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\"><code>WorldQuery</code></a>. <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_table\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fetch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.fetch\" class=\"fn\">fetch</a>&lt;'w&gt;(\n    _fetch: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;,\n    _entity: <a class=\"struct\" href=\"bevy/ecs/prelude/struct.Entity.html\" title=\"struct bevy::ecs::prelude::Entity\">Entity</a>,\n    _table_row: <a class=\"struct\" href=\"bevy/ecs/storage/struct.TableRow.html\" title=\"struct bevy::ecs::storage::TableRow\">TableRow</a>\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;</h4></section></summary><div class='docblock'>Fetch <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"associated type bevy::ecs::query::WorldQuery::Item\"><code>Self::Item</code></a> for either the given <code>entity</code> in the current <a href=\"bevy/ecs/storage/struct.Table.html\" title=\"struct bevy::ecs::storage::Table\"><code>Table</code></a>,\nor for the given <code>entity</code> in the current <a href=\"bevy/ecs/archetype/struct.Archetype.html\" title=\"struct bevy::ecs::archetype::Archetype\"><code>Archetype</code></a>. This must always be called after\n<a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_table\" title=\"associated function bevy::ecs::query::WorldQuery::set_table\"><code>WorldQuery::set_table</code></a> with a <code>table_row</code> in the range of the current <a href=\"bevy/ecs/storage/struct.Table.html\" title=\"struct bevy::ecs::storage::Table\"><code>Table</code></a> or after\n<a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_archetype\" title=\"associated function bevy::ecs::query::WorldQuery::set_archetype\"><code>WorldQuery::set_archetype</code></a>  with a <code>entity</code> in the current archetype. <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.fetch\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_component_access\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.update_component_access\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.update_component_access\" class=\"fn\">update_component_access</a>(\n    state: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>,\n    _access: &amp;mut <a class=\"struct\" href=\"bevy/ecs/query/struct.FilteredAccess.html\" title=\"struct bevy::ecs::query::FilteredAccess\">FilteredAccess</a>&lt;<a class=\"struct\" href=\"bevy/ecs/component/struct.ComponentId.html\" title=\"struct bevy::ecs::component::ComponentId\">ComponentId</a>&gt;\n)</h4></section></summary><div class='docblock'>Adds any component accesses used by this <a href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\"><code>WorldQuery</code></a> to <code>access</code>. <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.update_component_access\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.init_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.init_state\" class=\"fn\">init_state</a>(world: &amp;mut <a class=\"struct\" href=\"bevy/ecs/prelude/struct.World.html\" title=\"struct bevy::ecs::prelude::World\">World</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a></h4></section></summary><div class='docblock'>Creates and initializes a <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"associated type bevy::ecs::query::WorldQuery::State\"><code>State</code></a> for this <a href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\"><code>WorldQuery</code></a> type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.get_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.get_state\" class=\"fn\">get_state</a>(\n    components: &amp;<a class=\"struct\" href=\"bevy/ecs/component/struct.Components.html\" title=\"struct bevy::ecs::component::Components\">Components</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>&gt;</h4></section></summary><div class='docblock'>Attempts to initialize a <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"associated type bevy::ecs::query::WorldQuery::State\"><code>State</code></a> for this <a href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\"><code>WorldQuery</code></a> type using read-only\naccess to <a href=\"bevy/ecs/component/struct.Components.html\" title=\"struct bevy::ecs::component::Components\"><code>Components</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.matches_component_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.matches_component_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.matches_component_set\" class=\"fn\">matches_component_set</a>(\n    state: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>,\n    _set_contains_id: &amp;impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"bevy/ecs/component/struct.ComponentId.html\" title=\"struct bevy::ecs::component::ComponentId\">ComponentId</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if this query matches a set of components. Otherwise, returns <code>false</code>. <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.matches_component_set\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_access\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#105\">source</a><a href=\"#method.set_access\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#method.set_access\" class=\"fn\">set_access</a>(_state: &amp;mut Self::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>, _access: &amp;<a class=\"struct\" href=\"bevy/ecs/query/struct.FilteredAccess.html\" title=\"struct bevy::ecs::query::FilteredAccess\">FilteredAccess</a>&lt;<a class=\"struct\" href=\"bevy/ecs/component/struct.ComponentId.html\" title=\"struct bevy::ecs::component::ComponentId\">ComponentId</a>&gt;)</h4></section></summary><div class='docblock'>Sets available accesses for implementors with dynamic access such as <a href=\"bevy/ecs/world/struct.FilteredEntityRef.html\" title=\"struct bevy::ecs::world::FilteredEntityRef\"><code>FilteredEntityRef</code></a>\nor <a href=\"bevy/ecs/world/struct.FilteredEntityMut.html\" title=\"struct bevy::ecs::world::FilteredEntityMut\"><code>FilteredEntityMut</code></a>. <a href=\"bevy/ecs/query/trait.WorldQuery.html#method.set_access\">Read more</a></div></details></div></details>","WorldQuery","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WorldQuery-for-(F0,+F1,+F2,+F3,+F4)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#impl-WorldQuery-for-(F0,+F1,+F2,+F3,+F4)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F0, F1, F2, F3, F4&gt; <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4)</a><div class=\"where\">where\n    F0: <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>,\n    F1: <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>,\n    F2: <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>,\n    F3: <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>,\n    F4: <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>,</div></h3></section></summary><div class=\"docblock\"><p>SAFETY:\n<code>fetch</code> accesses are the conjunction of the subqueries’ accesses\nThis is sound because <code>update_component_access</code> adds accesses according to the implementations of all the subqueries.\n<code>update_component_access</code> adds all <code>With</code> and <code>Without</code> filters from the subqueries.\nThis is sound because <code>matches_component_set</code> always returns <code>false</code> if any the subqueries’ implementations return <code>false</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Fetch\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" class=\"associatedtype\">Fetch</a>&lt;'w&gt; = (&lt;F0 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;, &lt;F1 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;, &lt;F2 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;, &lt;F3 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;, &lt;F4 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;)</h4></section></summary><div class='docblock'>Per archetype/table state used by this <a href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\"><code>WorldQuery</code></a> to fetch <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"associated type bevy::ecs::query::WorldQuery::Item\"><code>Self::Item</code></a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" class=\"associatedtype\">Item</a>&lt;'w&gt; = (&lt;F0 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;, &lt;F1 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;, &lt;F2 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;, &lt;F3 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;, &lt;F4 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;)</h4></section></summary><div class='docblock'>The item returned by this <a href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\"><code>WorldQuery</code></a>\nFor <code>QueryData</code> this will be the item returned by the query.\nFor <code>QueryFilter</code> this will be either <code>()</code>, or a <code>bool</code> indicating whether the entity should be included\nor a tuple of such things.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.State\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.State\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" class=\"associatedtype\">State</a> = (&lt;F0 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>, &lt;F1 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>, &lt;F2 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>, &lt;F3 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>, &lt;F4 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>)</h4></section></summary><div class='docblock'>State used to construct a <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"associated type bevy::ecs::query::WorldQuery::Fetch\"><code>Self::Fetch</code></a>. This will be cached inside <a href=\"bevy/ecs/prelude/struct.QueryState.html\" title=\"struct bevy::ecs::prelude::QueryState\"><code>QueryState</code></a>,\nso it is best to move as much data / computation here as possible to reduce the cost of\nconstructing <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"associated type bevy::ecs::query::WorldQuery::Fetch\"><code>Self::Fetch</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.shrink\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.shrink\" class=\"fn\">shrink</a>&lt;'wlong, 'wshort&gt;(\n    item: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'wlong&gt;\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'wshort&gt;<div class=\"where\">where\n    'wlong: 'wshort,</div></h4></section></summary><div class='docblock'>This function manually implements subtyping for the query items.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init_fetch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.init_fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.init_fetch\" class=\"fn\">init_fetch</a>&lt;'w&gt;(\n    _world: <a class=\"struct\" href=\"bevy/ecs/world/unsafe_world_cell/struct.UnsafeWorldCell.html\" title=\"struct bevy::ecs::world::unsafe_world_cell::UnsafeWorldCell\">UnsafeWorldCell</a>&lt;'w&gt;,\n    state: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>,\n    _last_run: <a class=\"struct\" href=\"bevy/ecs/component/struct.Tick.html\" title=\"struct bevy::ecs::component::Tick\">Tick</a>,\n    _this_run: <a class=\"struct\" href=\"bevy/ecs/component/struct.Tick.html\" title=\"struct bevy::ecs::component::Tick\">Tick</a>\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;</h4></section></summary><div class='docblock'>Creates a new instance of this fetch. <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.init_fetch\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.IS_DENSE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#associatedconstant.IS_DENSE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedconstant.IS_DENSE\" class=\"constant\">IS_DENSE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a> = _</h4></section></summary><div class='docblock'>Returns true if (and only if) every table of every archetype matched by this fetch contains\nall of the matched components. This is used to select a more efficient “table iterator”\nfor “dense” queries. If this returns true, <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_table\" title=\"associated function bevy::ecs::query::WorldQuery::set_table\"><code>WorldQuery::set_table</code></a> must be used before\n<a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.fetch\" title=\"associated function bevy::ecs::query::WorldQuery::fetch\"><code>WorldQuery::fetch</code></a> can be called for iterators. If this returns false,\n<a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_archetype\" title=\"associated function bevy::ecs::query::WorldQuery::set_archetype\"><code>WorldQuery::set_archetype</code></a> must be used before <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.fetch\" title=\"associated function bevy::ecs::query::WorldQuery::fetch\"><code>WorldQuery::fetch</code></a> can be called for\niterators.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_archetype\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.set_archetype\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_archetype\" class=\"fn\">set_archetype</a>&lt;'w&gt;(\n    _fetch: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;,\n    _state: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>,\n    _archetype: &amp;'w <a class=\"struct\" href=\"bevy/ecs/archetype/struct.Archetype.html\" title=\"struct bevy::ecs::archetype::Archetype\">Archetype</a>,\n    _table: &amp;'w <a class=\"struct\" href=\"bevy/ecs/storage/struct.Table.html\" title=\"struct bevy::ecs::storage::Table\">Table</a>\n)</h4></section></summary><div class='docblock'>Adjusts internal state to account for the next <a href=\"bevy/ecs/archetype/struct.Archetype.html\" title=\"struct bevy::ecs::archetype::Archetype\"><code>Archetype</code></a>. This will always be called on\narchetypes that match this <a href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\"><code>WorldQuery</code></a>. <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_archetype\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_table\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.set_table\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_table\" class=\"fn\">set_table</a>&lt;'w&gt;(\n    _fetch: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;,\n    _state: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>,\n    _table: &amp;'w <a class=\"struct\" href=\"bevy/ecs/storage/struct.Table.html\" title=\"struct bevy::ecs::storage::Table\">Table</a>\n)</h4></section></summary><div class='docblock'>Adjusts internal state to account for the next <a href=\"bevy/ecs/storage/struct.Table.html\" title=\"struct bevy::ecs::storage::Table\"><code>Table</code></a>. This will always be called on tables\nthat match this <a href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\"><code>WorldQuery</code></a>. <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_table\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fetch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.fetch\" class=\"fn\">fetch</a>&lt;'w&gt;(\n    _fetch: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;,\n    _entity: <a class=\"struct\" href=\"bevy/ecs/prelude/struct.Entity.html\" title=\"struct bevy::ecs::prelude::Entity\">Entity</a>,\n    _table_row: <a class=\"struct\" href=\"bevy/ecs/storage/struct.TableRow.html\" title=\"struct bevy::ecs::storage::TableRow\">TableRow</a>\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;</h4></section></summary><div class='docblock'>Fetch <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"associated type bevy::ecs::query::WorldQuery::Item\"><code>Self::Item</code></a> for either the given <code>entity</code> in the current <a href=\"bevy/ecs/storage/struct.Table.html\" title=\"struct bevy::ecs::storage::Table\"><code>Table</code></a>,\nor for the given <code>entity</code> in the current <a href=\"bevy/ecs/archetype/struct.Archetype.html\" title=\"struct bevy::ecs::archetype::Archetype\"><code>Archetype</code></a>. This must always be called after\n<a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_table\" title=\"associated function bevy::ecs::query::WorldQuery::set_table\"><code>WorldQuery::set_table</code></a> with a <code>table_row</code> in the range of the current <a href=\"bevy/ecs/storage/struct.Table.html\" title=\"struct bevy::ecs::storage::Table\"><code>Table</code></a> or after\n<a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_archetype\" title=\"associated function bevy::ecs::query::WorldQuery::set_archetype\"><code>WorldQuery::set_archetype</code></a>  with a <code>entity</code> in the current archetype. <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.fetch\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_component_access\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.update_component_access\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.update_component_access\" class=\"fn\">update_component_access</a>(\n    state: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>,\n    _access: &amp;mut <a class=\"struct\" href=\"bevy/ecs/query/struct.FilteredAccess.html\" title=\"struct bevy::ecs::query::FilteredAccess\">FilteredAccess</a>&lt;<a class=\"struct\" href=\"bevy/ecs/component/struct.ComponentId.html\" title=\"struct bevy::ecs::component::ComponentId\">ComponentId</a>&gt;\n)</h4></section></summary><div class='docblock'>Adds any component accesses used by this <a href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\"><code>WorldQuery</code></a> to <code>access</code>. <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.update_component_access\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.init_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.init_state\" class=\"fn\">init_state</a>(world: &amp;mut <a class=\"struct\" href=\"bevy/ecs/prelude/struct.World.html\" title=\"struct bevy::ecs::prelude::World\">World</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a></h4></section></summary><div class='docblock'>Creates and initializes a <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"associated type bevy::ecs::query::WorldQuery::State\"><code>State</code></a> for this <a href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\"><code>WorldQuery</code></a> type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.get_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.get_state\" class=\"fn\">get_state</a>(\n    components: &amp;<a class=\"struct\" href=\"bevy/ecs/component/struct.Components.html\" title=\"struct bevy::ecs::component::Components\">Components</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>&gt;</h4></section></summary><div class='docblock'>Attempts to initialize a <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"associated type bevy::ecs::query::WorldQuery::State\"><code>State</code></a> for this <a href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\"><code>WorldQuery</code></a> type using read-only\naccess to <a href=\"bevy/ecs/component/struct.Components.html\" title=\"struct bevy::ecs::component::Components\"><code>Components</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.matches_component_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.matches_component_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.matches_component_set\" class=\"fn\">matches_component_set</a>(\n    state: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>,\n    _set_contains_id: &amp;impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"bevy/ecs/component/struct.ComponentId.html\" title=\"struct bevy::ecs::component::ComponentId\">ComponentId</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if this query matches a set of components. Otherwise, returns <code>false</code>. <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.matches_component_set\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_access\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#105\">source</a><a href=\"#method.set_access\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#method.set_access\" class=\"fn\">set_access</a>(_state: &amp;mut Self::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>, _access: &amp;<a class=\"struct\" href=\"bevy/ecs/query/struct.FilteredAccess.html\" title=\"struct bevy::ecs::query::FilteredAccess\">FilteredAccess</a>&lt;<a class=\"struct\" href=\"bevy/ecs/component/struct.ComponentId.html\" title=\"struct bevy::ecs::component::ComponentId\">ComponentId</a>&gt;)</h4></section></summary><div class='docblock'>Sets available accesses for implementors with dynamic access such as <a href=\"bevy/ecs/world/struct.FilteredEntityRef.html\" title=\"struct bevy::ecs::world::FilteredEntityRef\"><code>FilteredEntityRef</code></a>\nor <a href=\"bevy/ecs/world/struct.FilteredEntityMut.html\" title=\"struct bevy::ecs::world::FilteredEntityMut\"><code>FilteredEntityMut</code></a>. <a href=\"bevy/ecs/query/trait.WorldQuery.html#method.set_access\">Read more</a></div></details></div></details>","WorldQuery","bevy::pbr::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WorldQuery-for-(F0,+F1,+F2,+F3,+F4,+F5,+F6)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#impl-WorldQuery-for-(F0,+F1,+F2,+F3,+F4,+F5,+F6)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F0, F1, F2, F3, F4, F5, F6&gt; <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4, F5, F6)</a><div class=\"where\">where\n    F0: <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>,\n    F1: <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>,\n    F2: <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>,\n    F3: <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>,\n    F4: <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>,\n    F5: <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>,\n    F6: <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>,</div></h3></section></summary><div class=\"docblock\"><p>SAFETY:\n<code>fetch</code> accesses are the conjunction of the subqueries’ accesses\nThis is sound because <code>update_component_access</code> adds accesses according to the implementations of all the subqueries.\n<code>update_component_access</code> adds all <code>With</code> and <code>Without</code> filters from the subqueries.\nThis is sound because <code>matches_component_set</code> always returns <code>false</code> if any the subqueries’ implementations return <code>false</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Fetch\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" class=\"associatedtype\">Fetch</a>&lt;'w&gt; = (&lt;F0 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;, &lt;F1 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;, &lt;F2 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;, &lt;F3 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;, &lt;F4 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;, &lt;F5 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;, &lt;F6 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;)</h4></section></summary><div class='docblock'>Per archetype/table state used by this <a href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\"><code>WorldQuery</code></a> to fetch <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"associated type bevy::ecs::query::WorldQuery::Item\"><code>Self::Item</code></a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" class=\"associatedtype\">Item</a>&lt;'w&gt; = (&lt;F0 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;, &lt;F1 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;, &lt;F2 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;, &lt;F3 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;, &lt;F4 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;, &lt;F5 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;, &lt;F6 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;)</h4></section></summary><div class='docblock'>The item returned by this <a href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\"><code>WorldQuery</code></a>\nFor <code>QueryData</code> this will be the item returned by the query.\nFor <code>QueryFilter</code> this will be either <code>()</code>, or a <code>bool</code> indicating whether the entity should be included\nor a tuple of such things.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.State\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.State\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" class=\"associatedtype\">State</a> = (&lt;F0 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>, &lt;F1 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>, &lt;F2 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>, &lt;F3 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>, &lt;F4 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>, &lt;F5 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>, &lt;F6 as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>)</h4></section></summary><div class='docblock'>State used to construct a <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"associated type bevy::ecs::query::WorldQuery::Fetch\"><code>Self::Fetch</code></a>. This will be cached inside <a href=\"bevy/ecs/prelude/struct.QueryState.html\" title=\"struct bevy::ecs::prelude::QueryState\"><code>QueryState</code></a>,\nso it is best to move as much data / computation here as possible to reduce the cost of\nconstructing <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"associated type bevy::ecs::query::WorldQuery::Fetch\"><code>Self::Fetch</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.shrink\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.shrink\" class=\"fn\">shrink</a>&lt;'wlong, 'wshort&gt;(\n    item: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4, F5, F6)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'wlong&gt;\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4, F5, F6)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'wshort&gt;<div class=\"where\">where\n    'wlong: 'wshort,</div></h4></section></summary><div class='docblock'>This function manually implements subtyping for the query items.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init_fetch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.init_fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.init_fetch\" class=\"fn\">init_fetch</a>&lt;'w&gt;(\n    _world: <a class=\"struct\" href=\"bevy/ecs/world/unsafe_world_cell/struct.UnsafeWorldCell.html\" title=\"struct bevy::ecs::world::unsafe_world_cell::UnsafeWorldCell\">UnsafeWorldCell</a>&lt;'w&gt;,\n    state: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4, F5, F6)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>,\n    _last_run: <a class=\"struct\" href=\"bevy/ecs/component/struct.Tick.html\" title=\"struct bevy::ecs::component::Tick\">Tick</a>,\n    _this_run: <a class=\"struct\" href=\"bevy/ecs/component/struct.Tick.html\" title=\"struct bevy::ecs::component::Tick\">Tick</a>\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4, F5, F6)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;</h4></section></summary><div class='docblock'>Creates a new instance of this fetch. <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.init_fetch\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.IS_DENSE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#associatedconstant.IS_DENSE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedconstant.IS_DENSE\" class=\"constant\">IS_DENSE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a> = _</h4></section></summary><div class='docblock'>Returns true if (and only if) every table of every archetype matched by this fetch contains\nall of the matched components. This is used to select a more efficient “table iterator”\nfor “dense” queries. If this returns true, <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_table\" title=\"associated function bevy::ecs::query::WorldQuery::set_table\"><code>WorldQuery::set_table</code></a> must be used before\n<a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.fetch\" title=\"associated function bevy::ecs::query::WorldQuery::fetch\"><code>WorldQuery::fetch</code></a> can be called for iterators. If this returns false,\n<a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_archetype\" title=\"associated function bevy::ecs::query::WorldQuery::set_archetype\"><code>WorldQuery::set_archetype</code></a> must be used before <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.fetch\" title=\"associated function bevy::ecs::query::WorldQuery::fetch\"><code>WorldQuery::fetch</code></a> can be called for\niterators.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_archetype\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.set_archetype\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_archetype\" class=\"fn\">set_archetype</a>&lt;'w&gt;(\n    _fetch: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4, F5, F6)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;,\n    _state: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4, F5, F6)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>,\n    _archetype: &amp;'w <a class=\"struct\" href=\"bevy/ecs/archetype/struct.Archetype.html\" title=\"struct bevy::ecs::archetype::Archetype\">Archetype</a>,\n    _table: &amp;'w <a class=\"struct\" href=\"bevy/ecs/storage/struct.Table.html\" title=\"struct bevy::ecs::storage::Table\">Table</a>\n)</h4></section></summary><div class='docblock'>Adjusts internal state to account for the next <a href=\"bevy/ecs/archetype/struct.Archetype.html\" title=\"struct bevy::ecs::archetype::Archetype\"><code>Archetype</code></a>. This will always be called on\narchetypes that match this <a href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\"><code>WorldQuery</code></a>. <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_archetype\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_table\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.set_table\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_table\" class=\"fn\">set_table</a>&lt;'w&gt;(\n    _fetch: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4, F5, F6)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;,\n    _state: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4, F5, F6)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>,\n    _table: &amp;'w <a class=\"struct\" href=\"bevy/ecs/storage/struct.Table.html\" title=\"struct bevy::ecs::storage::Table\">Table</a>\n)</h4></section></summary><div class='docblock'>Adjusts internal state to account for the next <a href=\"bevy/ecs/storage/struct.Table.html\" title=\"struct bevy::ecs::storage::Table\"><code>Table</code></a>. This will always be called on tables\nthat match this <a href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\"><code>WorldQuery</code></a>. <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_table\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fetch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.fetch\" class=\"fn\">fetch</a>&lt;'w&gt;(\n    _fetch: &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4, F5, F6)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy::ecs::query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;,\n    _entity: <a class=\"struct\" href=\"bevy/ecs/prelude/struct.Entity.html\" title=\"struct bevy::ecs::prelude::Entity\">Entity</a>,\n    _table_row: <a class=\"struct\" href=\"bevy/ecs/storage/struct.TableRow.html\" title=\"struct bevy::ecs::storage::TableRow\">TableRow</a>\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4, F5, F6)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy::ecs::query::WorldQuery::Item\">Item</a>&lt;'w&gt;</h4></section></summary><div class='docblock'>Fetch <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.Item\" title=\"associated type bevy::ecs::query::WorldQuery::Item\"><code>Self::Item</code></a> for either the given <code>entity</code> in the current <a href=\"bevy/ecs/storage/struct.Table.html\" title=\"struct bevy::ecs::storage::Table\"><code>Table</code></a>,\nor for the given <code>entity</code> in the current <a href=\"bevy/ecs/archetype/struct.Archetype.html\" title=\"struct bevy::ecs::archetype::Archetype\"><code>Archetype</code></a>. This must always be called after\n<a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_table\" title=\"associated function bevy::ecs::query::WorldQuery::set_table\"><code>WorldQuery::set_table</code></a> with a <code>table_row</code> in the range of the current <a href=\"bevy/ecs/storage/struct.Table.html\" title=\"struct bevy::ecs::storage::Table\"><code>Table</code></a> or after\n<a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.set_archetype\" title=\"associated function bevy::ecs::query::WorldQuery::set_archetype\"><code>WorldQuery::set_archetype</code></a>  with a <code>entity</code> in the current archetype. <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.fetch\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_component_access\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.update_component_access\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.update_component_access\" class=\"fn\">update_component_access</a>(\n    state: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4, F5, F6)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>,\n    _access: &amp;mut <a class=\"struct\" href=\"bevy/ecs/query/struct.FilteredAccess.html\" title=\"struct bevy::ecs::query::FilteredAccess\">FilteredAccess</a>&lt;<a class=\"struct\" href=\"bevy/ecs/component/struct.ComponentId.html\" title=\"struct bevy::ecs::component::ComponentId\">ComponentId</a>&gt;\n)</h4></section></summary><div class='docblock'>Adds any component accesses used by this <a href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\"><code>WorldQuery</code></a> to <code>access</code>. <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.update_component_access\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.init_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.init_state\" class=\"fn\">init_state</a>(\n    world: &amp;mut <a class=\"struct\" href=\"bevy/ecs/prelude/struct.World.html\" title=\"struct bevy::ecs::prelude::World\">World</a>\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4, F5, F6)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a></h4></section></summary><div class='docblock'>Creates and initializes a <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"associated type bevy::ecs::query::WorldQuery::State\"><code>State</code></a> for this <a href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\"><code>WorldQuery</code></a> type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.get_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.get_state\" class=\"fn\">get_state</a>(\n    components: &amp;<a class=\"struct\" href=\"bevy/ecs/component/struct.Components.html\" title=\"struct bevy::ecs::component::Components\">Components</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4, F5, F6)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>&gt;</h4></section></summary><div class='docblock'>Attempts to initialize a <a href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"associated type bevy::ecs::query::WorldQuery::State\"><code>State</code></a> for this <a href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\"><code>WorldQuery</code></a> type using read-only\naccess to <a href=\"bevy/ecs/component/struct.Components.html\" title=\"struct bevy::ecs::component::Components\"><code>Components</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.matches_component_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#232\">source</a><a href=\"#method.matches_component_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.matches_component_set\" class=\"fn\">matches_component_set</a>(\n    state: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4, F5, F6)</a> as <a class=\"trait\" href=\"bevy/ecs/query/trait.WorldQuery.html\" title=\"trait bevy::ecs::query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>,\n    _set_contains_id: &amp;impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"bevy/ecs/component/struct.ComponentId.html\" title=\"struct bevy::ecs::component::ComponentId\">ComponentId</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if this query matches a set of components. Otherwise, returns <code>false</code>. <a href=\"bevy/ecs/query/trait.WorldQuery.html#tymethod.matches_component_set\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_access\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#105\">source</a><a href=\"#method.set_access\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/ecs/query/trait.WorldQuery.html#method.set_access\" class=\"fn\">set_access</a>(_state: &amp;mut Self::<a class=\"associatedtype\" href=\"bevy/ecs/query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy::ecs::query::WorldQuery::State\">State</a>, _access: &amp;<a class=\"struct\" href=\"bevy/ecs/query/struct.FilteredAccess.html\" title=\"struct bevy::ecs::query::FilteredAccess\">FilteredAccess</a>&lt;<a class=\"struct\" href=\"bevy/ecs/component/struct.ComponentId.html\" title=\"struct bevy::ecs::component::ComponentId\">ComponentId</a>&gt;)</h4></section></summary><div class='docblock'>Sets available accesses for implementors with dynamic access such as <a href=\"bevy/ecs/world/struct.FilteredEntityRef.html\" title=\"struct bevy::ecs::world::FilteredEntityRef\"><code>FilteredEntityRef</code></a>\nor <a href=\"bevy/ecs/world/struct.FilteredEntityMut.html\" title=\"struct bevy::ecs::world::FilteredEntityMut\"><code>FilteredEntityMut</code></a>. <a href=\"bevy/ecs/query/trait.WorldQuery.html#method.set_access\">Read more</a></div></details></div></details>","WorldQuery","bevy::winit::CreateWindowParams"],["<section id=\"impl-ArchetypeFilter-for-(F0,+F1,+F2,+F3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#967\">source</a><a href=\"#impl-ArchetypeFilter-for-(F0,+F1,+F2,+F3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F0, F1, F2, F3&gt; <a class=\"trait\" href=\"bevy/ecs/query/trait.ArchetypeFilter.html\" title=\"trait bevy::ecs::query::ArchetypeFilter\">ArchetypeFilter</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3)</a><div class=\"where\">where\n    F0: <a class=\"trait\" href=\"bevy/ecs/query/trait.ArchetypeFilter.html\" title=\"trait bevy::ecs::query::ArchetypeFilter\">ArchetypeFilter</a>,\n    F1: <a class=\"trait\" href=\"bevy/ecs/query/trait.ArchetypeFilter.html\" title=\"trait bevy::ecs::query::ArchetypeFilter\">ArchetypeFilter</a>,\n    F2: <a class=\"trait\" href=\"bevy/ecs/query/trait.ArchetypeFilter.html\" title=\"trait bevy::ecs::query::ArchetypeFilter\">ArchetypeFilter</a>,\n    F3: <a class=\"trait\" href=\"bevy/ecs/query/trait.ArchetypeFilter.html\" title=\"trait bevy::ecs::query::ArchetypeFilter\">ArchetypeFilter</a>,</div></h3></section>","ArchetypeFilter","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<section id=\"impl-ArchetypeFilter-for-(F0,+F1,+F2,+F3,+F4)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#967\">source</a><a href=\"#impl-ArchetypeFilter-for-(F0,+F1,+F2,+F3,+F4)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F0, F1, F2, F3, F4&gt; <a class=\"trait\" href=\"bevy/ecs/query/trait.ArchetypeFilter.html\" title=\"trait bevy::ecs::query::ArchetypeFilter\">ArchetypeFilter</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4)</a><div class=\"where\">where\n    F0: <a class=\"trait\" href=\"bevy/ecs/query/trait.ArchetypeFilter.html\" title=\"trait bevy::ecs::query::ArchetypeFilter\">ArchetypeFilter</a>,\n    F1: <a class=\"trait\" href=\"bevy/ecs/query/trait.ArchetypeFilter.html\" title=\"trait bevy::ecs::query::ArchetypeFilter\">ArchetypeFilter</a>,\n    F2: <a class=\"trait\" href=\"bevy/ecs/query/trait.ArchetypeFilter.html\" title=\"trait bevy::ecs::query::ArchetypeFilter\">ArchetypeFilter</a>,\n    F3: <a class=\"trait\" href=\"bevy/ecs/query/trait.ArchetypeFilter.html\" title=\"trait bevy::ecs::query::ArchetypeFilter\">ArchetypeFilter</a>,\n    F4: <a class=\"trait\" href=\"bevy/ecs/query/trait.ArchetypeFilter.html\" title=\"trait bevy::ecs::query::ArchetypeFilter\">ArchetypeFilter</a>,</div></h3></section>","ArchetypeFilter","bevy::pbr::DrawPrepass"],["<section id=\"impl-ArchetypeFilter-for-(F0,+F1,+F2,+F3,+F4,+F5,+F6)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#967\">source</a><a href=\"#impl-ArchetypeFilter-for-(F0,+F1,+F2,+F3,+F4,+F5,+F6)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F0, F1, F2, F3, F4, F5, F6&gt; <a class=\"trait\" href=\"bevy/ecs/query/trait.ArchetypeFilter.html\" title=\"trait bevy::ecs::query::ArchetypeFilter\">ArchetypeFilter</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4, F5, F6)</a><div class=\"where\">where\n    F0: <a class=\"trait\" href=\"bevy/ecs/query/trait.ArchetypeFilter.html\" title=\"trait bevy::ecs::query::ArchetypeFilter\">ArchetypeFilter</a>,\n    F1: <a class=\"trait\" href=\"bevy/ecs/query/trait.ArchetypeFilter.html\" title=\"trait bevy::ecs::query::ArchetypeFilter\">ArchetypeFilter</a>,\n    F2: <a class=\"trait\" href=\"bevy/ecs/query/trait.ArchetypeFilter.html\" title=\"trait bevy::ecs::query::ArchetypeFilter\">ArchetypeFilter</a>,\n    F3: <a class=\"trait\" href=\"bevy/ecs/query/trait.ArchetypeFilter.html\" title=\"trait bevy::ecs::query::ArchetypeFilter\">ArchetypeFilter</a>,\n    F4: <a class=\"trait\" href=\"bevy/ecs/query/trait.ArchetypeFilter.html\" title=\"trait bevy::ecs::query::ArchetypeFilter\">ArchetypeFilter</a>,\n    F5: <a class=\"trait\" href=\"bevy/ecs/query/trait.ArchetypeFilter.html\" title=\"trait bevy::ecs::query::ArchetypeFilter\">ArchetypeFilter</a>,\n    F6: <a class=\"trait\" href=\"bevy/ecs/query/trait.ArchetypeFilter.html\" title=\"trait bevy::ecs::query::ArchetypeFilter\">ArchetypeFilter</a>,</div></h3></section>","ArchetypeFilter","bevy::winit::CreateWindowParams"],["<section id=\"impl-DynamicBundle-for-(B0,+B1,+B2,+B3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/bundle.rs.html#271\">source</a><a href=\"#impl-DynamicBundle-for-(B0,+B1,+B2,+B3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B0, B1, B2, B3&gt; <a class=\"trait\" href=\"bevy/ecs/bundle/trait.DynamicBundle.html\" title=\"trait bevy::ecs::bundle::DynamicBundle\">DynamicBundle</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(B0, B1, B2, B3)</a><div class=\"where\">where\n    B0: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B1: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B2: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B3: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,</div></h3></section>","DynamicBundle","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<section id=\"impl-DynamicBundle-for-(B0,+B1,+B2,+B3,+B4)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/bundle.rs.html#271\">source</a><a href=\"#impl-DynamicBundle-for-(B0,+B1,+B2,+B3,+B4)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B0, B1, B2, B3, B4&gt; <a class=\"trait\" href=\"bevy/ecs/bundle/trait.DynamicBundle.html\" title=\"trait bevy::ecs::bundle::DynamicBundle\">DynamicBundle</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(B0, B1, B2, B3, B4)</a><div class=\"where\">where\n    B0: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B1: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B2: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B3: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B4: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,</div></h3></section>","DynamicBundle","bevy::pbr::DrawPrepass"],["<section id=\"impl-DynamicBundle-for-(B0,+B1,+B2,+B3,+B4,+B5,+B6)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/bundle.rs.html#271\">source</a><a href=\"#impl-DynamicBundle-for-(B0,+B1,+B2,+B3,+B4,+B5,+B6)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B0, B1, B2, B3, B4, B5, B6&gt; <a class=\"trait\" href=\"bevy/ecs/bundle/trait.DynamicBundle.html\" title=\"trait bevy::ecs::bundle::DynamicBundle\">DynamicBundle</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(B0, B1, B2, B3, B4, B5, B6)</a><div class=\"where\">where\n    B0: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B1: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B2: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B3: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B4: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B5: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,\n    B6: <a class=\"trait\" href=\"bevy/ecs/prelude/trait.Bundle.html\" title=\"trait bevy::ecs::prelude::Bundle\">Bundle</a>,</div></h3></section>","DynamicBundle","bevy::winit::CreateWindowParams"],["<section id=\"impl-ReadOnlyQueryData-for-(F0,+F1,+F2,+F3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/fetch.rs.html#1917\">source</a><a href=\"#impl-ReadOnlyQueryData-for-(F0,+F1,+F2,+F3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F0, F1, F2, F3&gt; <a class=\"trait\" href=\"bevy/ecs/query/trait.ReadOnlyQueryData.html\" title=\"trait bevy::ecs::query::ReadOnlyQueryData\">ReadOnlyQueryData</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3)</a><div class=\"where\">where\n    F0: <a class=\"trait\" href=\"bevy/ecs/query/trait.ReadOnlyQueryData.html\" title=\"trait bevy::ecs::query::ReadOnlyQueryData\">ReadOnlyQueryData</a>,\n    F1: <a class=\"trait\" href=\"bevy/ecs/query/trait.ReadOnlyQueryData.html\" title=\"trait bevy::ecs::query::ReadOnlyQueryData\">ReadOnlyQueryData</a>,\n    F2: <a class=\"trait\" href=\"bevy/ecs/query/trait.ReadOnlyQueryData.html\" title=\"trait bevy::ecs::query::ReadOnlyQueryData\">ReadOnlyQueryData</a>,\n    F3: <a class=\"trait\" href=\"bevy/ecs/query/trait.ReadOnlyQueryData.html\" title=\"trait bevy::ecs::query::ReadOnlyQueryData\">ReadOnlyQueryData</a>,</div></h3></section><div class=\"docblock\"><p>SAFETY: each item in the tuple is read only</p>\n</div>","ReadOnlyQueryData","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<section id=\"impl-ReadOnlyQueryData-for-(F0,+F1,+F2,+F3,+F4)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/fetch.rs.html#1917\">source</a><a href=\"#impl-ReadOnlyQueryData-for-(F0,+F1,+F2,+F3,+F4)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F0, F1, F2, F3, F4&gt; <a class=\"trait\" href=\"bevy/ecs/query/trait.ReadOnlyQueryData.html\" title=\"trait bevy::ecs::query::ReadOnlyQueryData\">ReadOnlyQueryData</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4)</a><div class=\"where\">where\n    F0: <a class=\"trait\" href=\"bevy/ecs/query/trait.ReadOnlyQueryData.html\" title=\"trait bevy::ecs::query::ReadOnlyQueryData\">ReadOnlyQueryData</a>,\n    F1: <a class=\"trait\" href=\"bevy/ecs/query/trait.ReadOnlyQueryData.html\" title=\"trait bevy::ecs::query::ReadOnlyQueryData\">ReadOnlyQueryData</a>,\n    F2: <a class=\"trait\" href=\"bevy/ecs/query/trait.ReadOnlyQueryData.html\" title=\"trait bevy::ecs::query::ReadOnlyQueryData\">ReadOnlyQueryData</a>,\n    F3: <a class=\"trait\" href=\"bevy/ecs/query/trait.ReadOnlyQueryData.html\" title=\"trait bevy::ecs::query::ReadOnlyQueryData\">ReadOnlyQueryData</a>,\n    F4: <a class=\"trait\" href=\"bevy/ecs/query/trait.ReadOnlyQueryData.html\" title=\"trait bevy::ecs::query::ReadOnlyQueryData\">ReadOnlyQueryData</a>,</div></h3></section><div class=\"docblock\"><p>SAFETY: each item in the tuple is read only</p>\n</div>","ReadOnlyQueryData","bevy::pbr::DrawPrepass"],["<section id=\"impl-ReadOnlyQueryData-for-(F0,+F1,+F2,+F3,+F4,+F5,+F6)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/fetch.rs.html#1917\">source</a><a href=\"#impl-ReadOnlyQueryData-for-(F0,+F1,+F2,+F3,+F4,+F5,+F6)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F0, F1, F2, F3, F4, F5, F6&gt; <a class=\"trait\" href=\"bevy/ecs/query/trait.ReadOnlyQueryData.html\" title=\"trait bevy::ecs::query::ReadOnlyQueryData\">ReadOnlyQueryData</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(F0, F1, F2, F3, F4, F5, F6)</a><div class=\"where\">where\n    F0: <a class=\"trait\" href=\"bevy/ecs/query/trait.ReadOnlyQueryData.html\" title=\"trait bevy::ecs::query::ReadOnlyQueryData\">ReadOnlyQueryData</a>,\n    F1: <a class=\"trait\" href=\"bevy/ecs/query/trait.ReadOnlyQueryData.html\" title=\"trait bevy::ecs::query::ReadOnlyQueryData\">ReadOnlyQueryData</a>,\n    F2: <a class=\"trait\" href=\"bevy/ecs/query/trait.ReadOnlyQueryData.html\" title=\"trait bevy::ecs::query::ReadOnlyQueryData\">ReadOnlyQueryData</a>,\n    F3: <a class=\"trait\" href=\"bevy/ecs/query/trait.ReadOnlyQueryData.html\" title=\"trait bevy::ecs::query::ReadOnlyQueryData\">ReadOnlyQueryData</a>,\n    F4: <a class=\"trait\" href=\"bevy/ecs/query/trait.ReadOnlyQueryData.html\" title=\"trait bevy::ecs::query::ReadOnlyQueryData\">ReadOnlyQueryData</a>,\n    F5: <a class=\"trait\" href=\"bevy/ecs/query/trait.ReadOnlyQueryData.html\" title=\"trait bevy::ecs::query::ReadOnlyQueryData\">ReadOnlyQueryData</a>,\n    F6: <a class=\"trait\" href=\"bevy/ecs/query/trait.ReadOnlyQueryData.html\" title=\"trait bevy::ecs::query::ReadOnlyQueryData\">ReadOnlyQueryData</a>,</div></h3></section><div class=\"docblock\"><p>SAFETY: each item in the tuple is read only</p>\n</div>","ReadOnlyQueryData","bevy::winit::CreateWindowParams"],["<section id=\"impl-ReadOnlySystemParam-for-(P0,+P1,+P2,+P3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#1480\">source</a><a href=\"#impl-ReadOnlySystemParam-for-(P0,+P1,+P2,+P3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P0, P1, P2, P3&gt; <a class=\"trait\" href=\"bevy/ecs/system/trait.ReadOnlySystemParam.html\" title=\"trait bevy::ecs::system::ReadOnlySystemParam\">ReadOnlySystemParam</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3)</a><div class=\"where\">where\n    P0: <a class=\"trait\" href=\"bevy/ecs/system/trait.ReadOnlySystemParam.html\" title=\"trait bevy::ecs::system::ReadOnlySystemParam\">ReadOnlySystemParam</a>,\n    P1: <a class=\"trait\" href=\"bevy/ecs/system/trait.ReadOnlySystemParam.html\" title=\"trait bevy::ecs::system::ReadOnlySystemParam\">ReadOnlySystemParam</a>,\n    P2: <a class=\"trait\" href=\"bevy/ecs/system/trait.ReadOnlySystemParam.html\" title=\"trait bevy::ecs::system::ReadOnlySystemParam\">ReadOnlySystemParam</a>,\n    P3: <a class=\"trait\" href=\"bevy/ecs/system/trait.ReadOnlySystemParam.html\" title=\"trait bevy::ecs::system::ReadOnlySystemParam\">ReadOnlySystemParam</a>,</div></h3></section>","ReadOnlySystemParam","bevy::sprite::DrawSprite","bevy::ui::DrawUi","bevy::ui::DrawUiMaterial"],["<section id=\"impl-ReadOnlySystemParam-for-(P0,+P1,+P2,+P3,+P4)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#1480\">source</a><a href=\"#impl-ReadOnlySystemParam-for-(P0,+P1,+P2,+P3,+P4)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P0, P1, P2, P3, P4&gt; <a class=\"trait\" href=\"bevy/ecs/system/trait.ReadOnlySystemParam.html\" title=\"trait bevy::ecs::system::ReadOnlySystemParam\">ReadOnlySystemParam</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4)</a><div class=\"where\">where\n    P0: <a class=\"trait\" href=\"bevy/ecs/system/trait.ReadOnlySystemParam.html\" title=\"trait bevy::ecs::system::ReadOnlySystemParam\">ReadOnlySystemParam</a>,\n    P1: <a class=\"trait\" href=\"bevy/ecs/system/trait.ReadOnlySystemParam.html\" title=\"trait bevy::ecs::system::ReadOnlySystemParam\">ReadOnlySystemParam</a>,\n    P2: <a class=\"trait\" href=\"bevy/ecs/system/trait.ReadOnlySystemParam.html\" title=\"trait bevy::ecs::system::ReadOnlySystemParam\">ReadOnlySystemParam</a>,\n    P3: <a class=\"trait\" href=\"bevy/ecs/system/trait.ReadOnlySystemParam.html\" title=\"trait bevy::ecs::system::ReadOnlySystemParam\">ReadOnlySystemParam</a>,\n    P4: <a class=\"trait\" href=\"bevy/ecs/system/trait.ReadOnlySystemParam.html\" title=\"trait bevy::ecs::system::ReadOnlySystemParam\">ReadOnlySystemParam</a>,</div></h3></section>","ReadOnlySystemParam","bevy::pbr::DrawPrepass"],["<section id=\"impl-ReadOnlySystemParam-for-(P0,+P1,+P2,+P3,+P4,+P5,+P6)\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/system_param.rs.html#1480\">source</a><a href=\"#impl-ReadOnlySystemParam-for-(P0,+P1,+P2,+P3,+P4,+P5,+P6)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P0, P1, P2, P3, P4, P5, P6&gt; <a class=\"trait\" href=\"bevy/ecs/system/trait.ReadOnlySystemParam.html\" title=\"trait bevy::ecs::system::ReadOnlySystemParam\">ReadOnlySystemParam</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(P0, P1, P2, P3, P4, P5, P6)</a><div class=\"where\">where\n    P0: <a class=\"trait\" href=\"bevy/ecs/system/trait.ReadOnlySystemParam.html\" title=\"trait bevy::ecs::system::ReadOnlySystemParam\">ReadOnlySystemParam</a>,\n    P1: <a class=\"trait\" href=\"bevy/ecs/system/trait.ReadOnlySystemParam.html\" title=\"trait bevy::ecs::system::ReadOnlySystemParam\">ReadOnlySystemParam</a>,\n    P2: <a class=\"trait\" href=\"bevy/ecs/system/trait.ReadOnlySystemParam.html\" title=\"trait bevy::ecs::system::ReadOnlySystemParam\">ReadOnlySystemParam</a>,\n    P3: <a class=\"trait\" href=\"bevy/ecs/system/trait.ReadOnlySystemParam.html\" title=\"trait bevy::ecs::system::ReadOnlySystemParam\">ReadOnlySystemParam</a>,\n    P4: <a class=\"trait\" href=\"bevy/ecs/system/trait.ReadOnlySystemParam.html\" title=\"trait bevy::ecs::system::ReadOnlySystemParam\">ReadOnlySystemParam</a>,\n    P5: <a class=\"trait\" href=\"bevy/ecs/system/trait.ReadOnlySystemParam.html\" title=\"trait bevy::ecs::system::ReadOnlySystemParam\">ReadOnlySystemParam</a>,\n    P6: <a class=\"trait\" href=\"bevy/ecs/system/trait.ReadOnlySystemParam.html\" title=\"trait bevy::ecs::system::ReadOnlySystemParam\">ReadOnlySystemParam</a>,</div></h3></section>","ReadOnlySystemParam","bevy::winit::CreateWindowParams"]],
"bevy_pbr":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystem%3C%3CF+as+ExclusiveSystemParamFunction%3CMarker%3E%3E::In,+%3CF+as+ExclusiveSystemParamFunction%3CMarker%3E%3E::Out,+(IsExclusiveFunctionSystem,+Marker)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/exclusive_function_system.rs.html#37-40\">source</a><a href=\"#impl-IntoSystem%3C%3CF+as+ExclusiveSystemParamFunction%3CMarker%3E%3E::In,+%3CF+as+ExclusiveSystemParamFunction%3CMarker%3E%3E::Out,+(IsExclusiveFunctionSystem,+Marker)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Marker, F&gt; <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;&lt;F as <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html#associatedtype.In\" title=\"type bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction::In\">In</a>, &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html#associatedtype.Out\" title=\"type bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction::Out\">Out</a>, (IsExclusiveFunctionSystem, Marker)&gt; for F<div class=\"where\">where\n    Marker: 'static,\n    F: <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.System\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.System\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" class=\"associatedtype\">System</a> = <a class=\"struct\" href=\"bevy_ecs/system/exclusive_function_system/struct.ExclusiveFunctionSystem.html\" title=\"struct bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem\">ExclusiveFunctionSystem</a>&lt;Marker, F&gt;</h4></section></summary><div class='docblock'>The type of <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a> that this instance converts into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_system\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/exclusive_function_system.rs.html#43\">source</a><a href=\"#method.into_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#tymethod.into_system\" class=\"fn\">into_system</a>(\n    func: F\n) -&gt; &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;&lt;F as <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html#associatedtype.In\" title=\"type bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction::In\">In</a>, &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html#associatedtype.Out\" title=\"type bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction::Out\">Out</a>, (IsExclusiveFunctionSystem, Marker)&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a></h4></section></summary><div class='docblock'>Turns this value into its corresponding <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pipe\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#169-171\">source</a><a href=\"#method.pipe\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.pipe\" class=\"fn\">pipe</a>&lt;B, Final, MarkerB&gt;(\n    self,\n    system: B\n) -&gt; <a class=\"struct\" href=\"bevy_ecs/system/combinator/struct.CombinatorSystem.html\" title=\"struct bevy_ecs::system::combinator::CombinatorSystem\">CombinatorSystem</a>&lt;Pipe, Self::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>, &lt;B as <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;Out, Final, MarkerB&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;Out, Final, MarkerB&gt;,</div></h4></section></summary><div class='docblock'>Pass the output of this system <code>A</code> into a second system <code>B</code>, creating a new compound system. <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.pipe\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#198-200\">source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.map\" class=\"fn\">map</a>&lt;T, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"bevy_ecs/system/adapter_system/struct.AdapterSystem.html\" title=\"struct bevy_ecs::system::adapter_system::AdapterSystem\">AdapterSystem</a>&lt;F, Self::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Out) -&gt; T,</div></h4></section></summary><div class='docblock'>Pass the output of this system into the passed function <code>f</code>, creating a new system that\noutputs the value returned from the function. <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.system_type_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#209\">source</a><a href=\"#method.system_type_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.system_type_id\" class=\"fn\">system_type_id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a></h4></section></summary><div class='docblock'>Get the <a href=\"https://doc.rust-lang.org/1.79.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\"><code>TypeId</code></a> of the <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a> produced after calling <a href=\"bevy_ecs/system/trait.IntoSystem.html#tymethod.into_system\" title=\"associated function bevy_ecs::system::IntoSystem::into_system\"><code>into_system</code></a>.</div></details></div></details>","IntoSystem<<F as ExclusiveSystemParamFunction<Marker>>::In, <F as ExclusiveSystemParamFunction<Marker>>::Out, (IsExclusiveFunctionSystem, Marker)>","bevy_pbr::prepass::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystem%3C%3CF+as+SystemParamFunction%3CMarker%3E%3E::In,+%3CF+as+SystemParamFunction%3CMarker%3E%3E::Out,+(IsFunctionSystem,+Marker)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/function_system.rs.html#448-451\">source</a><a href=\"#impl-IntoSystem%3C%3CF+as+SystemParamFunction%3CMarker%3E%3E::In,+%3CF+as+SystemParamFunction%3CMarker%3E%3E::Out,+(IsFunctionSystem,+Marker)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Marker, F&gt; <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;&lt;F as <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html#associatedtype.In\" title=\"type bevy_ecs::system::function_system::SystemParamFunction::In\">In</a>, &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html#associatedtype.Out\" title=\"type bevy_ecs::system::function_system::SystemParamFunction::Out\">Out</a>, (IsFunctionSystem, Marker)&gt; for F<div class=\"where\">where\n    Marker: 'static,\n    F: <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.System\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.System\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" class=\"associatedtype\">System</a> = <a class=\"struct\" href=\"bevy_ecs/system/function_system/struct.FunctionSystem.html\" title=\"struct bevy_ecs::system::function_system::FunctionSystem\">FunctionSystem</a>&lt;Marker, F&gt;</h4></section></summary><div class='docblock'>The type of <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a> that this instance converts into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_system\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/function_system.rs.html#454\">source</a><a href=\"#method.into_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#tymethod.into_system\" class=\"fn\">into_system</a>(\n    func: F\n) -&gt; &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;&lt;F as <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html#associatedtype.In\" title=\"type bevy_ecs::system::function_system::SystemParamFunction::In\">In</a>, &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html#associatedtype.Out\" title=\"type bevy_ecs::system::function_system::SystemParamFunction::Out\">Out</a>, (IsFunctionSystem, Marker)&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a></h4></section></summary><div class='docblock'>Turns this value into its corresponding <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pipe\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#169-171\">source</a><a href=\"#method.pipe\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.pipe\" class=\"fn\">pipe</a>&lt;B, Final, MarkerB&gt;(\n    self,\n    system: B\n) -&gt; <a class=\"struct\" href=\"bevy_ecs/system/combinator/struct.CombinatorSystem.html\" title=\"struct bevy_ecs::system::combinator::CombinatorSystem\">CombinatorSystem</a>&lt;Pipe, Self::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>, &lt;B as <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;Out, Final, MarkerB&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;Out, Final, MarkerB&gt;,</div></h4></section></summary><div class='docblock'>Pass the output of this system <code>A</code> into a second system <code>B</code>, creating a new compound system. <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.pipe\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#198-200\">source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.map\" class=\"fn\">map</a>&lt;T, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"bevy_ecs/system/adapter_system/struct.AdapterSystem.html\" title=\"struct bevy_ecs::system::adapter_system::AdapterSystem\">AdapterSystem</a>&lt;F, Self::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Out) -&gt; T,</div></h4></section></summary><div class='docblock'>Pass the output of this system into the passed function <code>f</code>, creating a new system that\noutputs the value returned from the function. <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.system_type_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#209\">source</a><a href=\"#method.system_type_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.system_type_id\" class=\"fn\">system_type_id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a></h4></section></summary><div class='docblock'>Get the <a href=\"https://doc.rust-lang.org/1.79.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\"><code>TypeId</code></a> of the <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a> produced after calling <a href=\"bevy_ecs/system/trait.IntoSystem.html#tymethod.into_system\" title=\"associated function bevy_ecs::system::IntoSystem::into_system\"><code>into_system</code></a>.</div></details></div></details>","IntoSystem<<F as SystemParamFunction<Marker>>::In, <F as SystemParamFunction<Marker>>::Out, (IsFunctionSystem, Marker)>","bevy_pbr::prepass::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystemSet%3C(IsExclusiveFunctionSystem,+Marker)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/set.rs.html#189-192\">source</a><a href=\"#impl-IntoSystemSet%3C(IsExclusiveFunctionSystem,+Marker)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Marker, F&gt; <a class=\"trait\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html\" title=\"trait bevy_ecs::schedule::set::IntoSystemSet\">IntoSystemSet</a>&lt;(IsExclusiveFunctionSystem, Marker)&gt; for F<div class=\"where\">where\n    Marker: 'static,\n    F: <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Set\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Set\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#associatedtype.Set\" class=\"associatedtype\">Set</a> = <a class=\"struct\" href=\"bevy_ecs/schedule/set/struct.SystemTypeSet.html\" title=\"struct bevy_ecs::schedule::set::SystemTypeSet\">SystemTypeSet</a>&lt;<a class=\"struct\" href=\"bevy_ecs/system/exclusive_function_system/struct.ExclusiveFunctionSystem.html\" title=\"struct bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem\">ExclusiveFunctionSystem</a>&lt;Marker, F&gt;&gt;</h4></section></summary><div class='docblock'>The type of <a href=\"bevy_ecs/schedule/set/trait.SystemSet.html\" title=\"trait bevy_ecs::schedule::set::SystemSet\"><code>SystemSet</code></a> this instance converts into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_system_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/set.rs.html#197\">source</a><a href=\"#method.into_system_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#tymethod.into_system_set\" class=\"fn\">into_system_set</a>(\n    self\n) -&gt; &lt;F as <a class=\"trait\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html\" title=\"trait bevy_ecs::schedule::set::IntoSystemSet\">IntoSystemSet</a>&lt;(IsExclusiveFunctionSystem, Marker)&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#associatedtype.Set\" title=\"type bevy_ecs::schedule::set::IntoSystemSet::Set\">Set</a></h4></section></summary><div class='docblock'>Converts this instance to its associated <a href=\"bevy_ecs/schedule/set/trait.SystemSet.html\" title=\"trait bevy_ecs::schedule::set::SystemSet\"><code>SystemSet</code></a> type.</div></details></div></details>","IntoSystemSet<(IsExclusiveFunctionSystem, Marker)>","bevy_pbr::prepass::DrawPrepass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystemSet%3C(IsFunctionSystem,+Marker)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/set.rs.html#175-178\">source</a><a href=\"#impl-IntoSystemSet%3C(IsFunctionSystem,+Marker)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Marker, F&gt; <a class=\"trait\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html\" title=\"trait bevy_ecs::schedule::set::IntoSystemSet\">IntoSystemSet</a>&lt;(IsFunctionSystem, Marker)&gt; for F<div class=\"where\">where\n    Marker: 'static,\n    F: <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Set\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Set\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#associatedtype.Set\" class=\"associatedtype\">Set</a> = <a class=\"struct\" href=\"bevy_ecs/schedule/set/struct.SystemTypeSet.html\" title=\"struct bevy_ecs::schedule::set::SystemTypeSet\">SystemTypeSet</a>&lt;<a class=\"struct\" href=\"bevy_ecs/system/function_system/struct.FunctionSystem.html\" title=\"struct bevy_ecs::system::function_system::FunctionSystem\">FunctionSystem</a>&lt;Marker, F&gt;&gt;</h4></section></summary><div class='docblock'>The type of <a href=\"bevy_ecs/schedule/set/trait.SystemSet.html\" title=\"trait bevy_ecs::schedule::set::SystemSet\"><code>SystemSet</code></a> this instance converts into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_system_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/set.rs.html#183\">source</a><a href=\"#method.into_system_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#tymethod.into_system_set\" class=\"fn\">into_system_set</a>(\n    self\n) -&gt; &lt;F as <a class=\"trait\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html\" title=\"trait bevy_ecs::schedule::set::IntoSystemSet\">IntoSystemSet</a>&lt;(IsFunctionSystem, Marker)&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#associatedtype.Set\" title=\"type bevy_ecs::schedule::set::IntoSystemSet::Set\">Set</a></h4></section></summary><div class='docblock'>Converts this instance to its associated <a href=\"bevy_ecs/schedule/set/trait.SystemSet.html\" title=\"trait bevy_ecs::schedule::set::SystemSet\"><code>SystemSet</code></a> type.</div></details></div></details>","IntoSystemSet<(IsFunctionSystem, Marker)>","bevy_pbr::prepass::DrawPrepass"]],
"bevy_sprite":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystem%3C%3CF+as+ExclusiveSystemParamFunction%3CMarker%3E%3E::In,+%3CF+as+ExclusiveSystemParamFunction%3CMarker%3E%3E::Out,+(IsExclusiveFunctionSystem,+Marker)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/exclusive_function_system.rs.html#37-40\">source</a><a href=\"#impl-IntoSystem%3C%3CF+as+ExclusiveSystemParamFunction%3CMarker%3E%3E::In,+%3CF+as+ExclusiveSystemParamFunction%3CMarker%3E%3E::Out,+(IsExclusiveFunctionSystem,+Marker)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Marker, F&gt; <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;&lt;F as <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html#associatedtype.In\" title=\"type bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction::In\">In</a>, &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html#associatedtype.Out\" title=\"type bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction::Out\">Out</a>, (IsExclusiveFunctionSystem, Marker)&gt; for F<div class=\"where\">where\n    Marker: 'static,\n    F: <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.System\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.System\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" class=\"associatedtype\">System</a> = <a class=\"struct\" href=\"bevy_ecs/system/exclusive_function_system/struct.ExclusiveFunctionSystem.html\" title=\"struct bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem\">ExclusiveFunctionSystem</a>&lt;Marker, F&gt;</h4></section></summary><div class='docblock'>The type of <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a> that this instance converts into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_system\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/exclusive_function_system.rs.html#43\">source</a><a href=\"#method.into_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#tymethod.into_system\" class=\"fn\">into_system</a>(\n    func: F\n) -&gt; &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;&lt;F as <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html#associatedtype.In\" title=\"type bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction::In\">In</a>, &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html#associatedtype.Out\" title=\"type bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction::Out\">Out</a>, (IsExclusiveFunctionSystem, Marker)&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a></h4></section></summary><div class='docblock'>Turns this value into its corresponding <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pipe\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#169-171\">source</a><a href=\"#method.pipe\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.pipe\" class=\"fn\">pipe</a>&lt;B, Final, MarkerB&gt;(\n    self,\n    system: B\n) -&gt; <a class=\"struct\" href=\"bevy_ecs/system/combinator/struct.CombinatorSystem.html\" title=\"struct bevy_ecs::system::combinator::CombinatorSystem\">CombinatorSystem</a>&lt;Pipe, Self::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>, &lt;B as <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;Out, Final, MarkerB&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;Out, Final, MarkerB&gt;,</div></h4></section></summary><div class='docblock'>Pass the output of this system <code>A</code> into a second system <code>B</code>, creating a new compound system. <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.pipe\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#198-200\">source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.map\" class=\"fn\">map</a>&lt;T, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"bevy_ecs/system/adapter_system/struct.AdapterSystem.html\" title=\"struct bevy_ecs::system::adapter_system::AdapterSystem\">AdapterSystem</a>&lt;F, Self::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Out) -&gt; T,</div></h4></section></summary><div class='docblock'>Pass the output of this system into the passed function <code>f</code>, creating a new system that\noutputs the value returned from the function. <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.system_type_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#209\">source</a><a href=\"#method.system_type_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.system_type_id\" class=\"fn\">system_type_id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a></h4></section></summary><div class='docblock'>Get the <a href=\"https://doc.rust-lang.org/1.79.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\"><code>TypeId</code></a> of the <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a> produced after calling <a href=\"bevy_ecs/system/trait.IntoSystem.html#tymethod.into_system\" title=\"associated function bevy_ecs::system::IntoSystem::into_system\"><code>into_system</code></a>.</div></details></div></details>","IntoSystem<<F as ExclusiveSystemParamFunction<Marker>>::In, <F as ExclusiveSystemParamFunction<Marker>>::Out, (IsExclusiveFunctionSystem, Marker)>","bevy_sprite::render::DrawSprite"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystem%3C%3CF+as+SystemParamFunction%3CMarker%3E%3E::In,+%3CF+as+SystemParamFunction%3CMarker%3E%3E::Out,+(IsFunctionSystem,+Marker)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/function_system.rs.html#448-451\">source</a><a href=\"#impl-IntoSystem%3C%3CF+as+SystemParamFunction%3CMarker%3E%3E::In,+%3CF+as+SystemParamFunction%3CMarker%3E%3E::Out,+(IsFunctionSystem,+Marker)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Marker, F&gt; <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;&lt;F as <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html#associatedtype.In\" title=\"type bevy_ecs::system::function_system::SystemParamFunction::In\">In</a>, &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html#associatedtype.Out\" title=\"type bevy_ecs::system::function_system::SystemParamFunction::Out\">Out</a>, (IsFunctionSystem, Marker)&gt; for F<div class=\"where\">where\n    Marker: 'static,\n    F: <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.System\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.System\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" class=\"associatedtype\">System</a> = <a class=\"struct\" href=\"bevy_ecs/system/function_system/struct.FunctionSystem.html\" title=\"struct bevy_ecs::system::function_system::FunctionSystem\">FunctionSystem</a>&lt;Marker, F&gt;</h4></section></summary><div class='docblock'>The type of <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a> that this instance converts into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_system\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/function_system.rs.html#454\">source</a><a href=\"#method.into_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#tymethod.into_system\" class=\"fn\">into_system</a>(\n    func: F\n) -&gt; &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;&lt;F as <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html#associatedtype.In\" title=\"type bevy_ecs::system::function_system::SystemParamFunction::In\">In</a>, &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html#associatedtype.Out\" title=\"type bevy_ecs::system::function_system::SystemParamFunction::Out\">Out</a>, (IsFunctionSystem, Marker)&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a></h4></section></summary><div class='docblock'>Turns this value into its corresponding <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pipe\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#169-171\">source</a><a href=\"#method.pipe\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.pipe\" class=\"fn\">pipe</a>&lt;B, Final, MarkerB&gt;(\n    self,\n    system: B\n) -&gt; <a class=\"struct\" href=\"bevy_ecs/system/combinator/struct.CombinatorSystem.html\" title=\"struct bevy_ecs::system::combinator::CombinatorSystem\">CombinatorSystem</a>&lt;Pipe, Self::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>, &lt;B as <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;Out, Final, MarkerB&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;Out, Final, MarkerB&gt;,</div></h4></section></summary><div class='docblock'>Pass the output of this system <code>A</code> into a second system <code>B</code>, creating a new compound system. <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.pipe\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#198-200\">source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.map\" class=\"fn\">map</a>&lt;T, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"bevy_ecs/system/adapter_system/struct.AdapterSystem.html\" title=\"struct bevy_ecs::system::adapter_system::AdapterSystem\">AdapterSystem</a>&lt;F, Self::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Out) -&gt; T,</div></h4></section></summary><div class='docblock'>Pass the output of this system into the passed function <code>f</code>, creating a new system that\noutputs the value returned from the function. <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.system_type_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#209\">source</a><a href=\"#method.system_type_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.system_type_id\" class=\"fn\">system_type_id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a></h4></section></summary><div class='docblock'>Get the <a href=\"https://doc.rust-lang.org/1.79.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\"><code>TypeId</code></a> of the <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a> produced after calling <a href=\"bevy_ecs/system/trait.IntoSystem.html#tymethod.into_system\" title=\"associated function bevy_ecs::system::IntoSystem::into_system\"><code>into_system</code></a>.</div></details></div></details>","IntoSystem<<F as SystemParamFunction<Marker>>::In, <F as SystemParamFunction<Marker>>::Out, (IsFunctionSystem, Marker)>","bevy_sprite::render::DrawSprite"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystemSet%3C(IsExclusiveFunctionSystem,+Marker)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/set.rs.html#189-192\">source</a><a href=\"#impl-IntoSystemSet%3C(IsExclusiveFunctionSystem,+Marker)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Marker, F&gt; <a class=\"trait\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html\" title=\"trait bevy_ecs::schedule::set::IntoSystemSet\">IntoSystemSet</a>&lt;(IsExclusiveFunctionSystem, Marker)&gt; for F<div class=\"where\">where\n    Marker: 'static,\n    F: <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Set\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Set\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#associatedtype.Set\" class=\"associatedtype\">Set</a> = <a class=\"struct\" href=\"bevy_ecs/schedule/set/struct.SystemTypeSet.html\" title=\"struct bevy_ecs::schedule::set::SystemTypeSet\">SystemTypeSet</a>&lt;<a class=\"struct\" href=\"bevy_ecs/system/exclusive_function_system/struct.ExclusiveFunctionSystem.html\" title=\"struct bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem\">ExclusiveFunctionSystem</a>&lt;Marker, F&gt;&gt;</h4></section></summary><div class='docblock'>The type of <a href=\"bevy_ecs/schedule/set/trait.SystemSet.html\" title=\"trait bevy_ecs::schedule::set::SystemSet\"><code>SystemSet</code></a> this instance converts into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_system_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/set.rs.html#197\">source</a><a href=\"#method.into_system_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#tymethod.into_system_set\" class=\"fn\">into_system_set</a>(\n    self\n) -&gt; &lt;F as <a class=\"trait\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html\" title=\"trait bevy_ecs::schedule::set::IntoSystemSet\">IntoSystemSet</a>&lt;(IsExclusiveFunctionSystem, Marker)&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#associatedtype.Set\" title=\"type bevy_ecs::schedule::set::IntoSystemSet::Set\">Set</a></h4></section></summary><div class='docblock'>Converts this instance to its associated <a href=\"bevy_ecs/schedule/set/trait.SystemSet.html\" title=\"trait bevy_ecs::schedule::set::SystemSet\"><code>SystemSet</code></a> type.</div></details></div></details>","IntoSystemSet<(IsExclusiveFunctionSystem, Marker)>","bevy_sprite::render::DrawSprite"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystemSet%3C(IsFunctionSystem,+Marker)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/set.rs.html#175-178\">source</a><a href=\"#impl-IntoSystemSet%3C(IsFunctionSystem,+Marker)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Marker, F&gt; <a class=\"trait\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html\" title=\"trait bevy_ecs::schedule::set::IntoSystemSet\">IntoSystemSet</a>&lt;(IsFunctionSystem, Marker)&gt; for F<div class=\"where\">where\n    Marker: 'static,\n    F: <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Set\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Set\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#associatedtype.Set\" class=\"associatedtype\">Set</a> = <a class=\"struct\" href=\"bevy_ecs/schedule/set/struct.SystemTypeSet.html\" title=\"struct bevy_ecs::schedule::set::SystemTypeSet\">SystemTypeSet</a>&lt;<a class=\"struct\" href=\"bevy_ecs/system/function_system/struct.FunctionSystem.html\" title=\"struct bevy_ecs::system::function_system::FunctionSystem\">FunctionSystem</a>&lt;Marker, F&gt;&gt;</h4></section></summary><div class='docblock'>The type of <a href=\"bevy_ecs/schedule/set/trait.SystemSet.html\" title=\"trait bevy_ecs::schedule::set::SystemSet\"><code>SystemSet</code></a> this instance converts into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_system_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/set.rs.html#183\">source</a><a href=\"#method.into_system_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#tymethod.into_system_set\" class=\"fn\">into_system_set</a>(\n    self\n) -&gt; &lt;F as <a class=\"trait\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html\" title=\"trait bevy_ecs::schedule::set::IntoSystemSet\">IntoSystemSet</a>&lt;(IsFunctionSystem, Marker)&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#associatedtype.Set\" title=\"type bevy_ecs::schedule::set::IntoSystemSet::Set\">Set</a></h4></section></summary><div class='docblock'>Converts this instance to its associated <a href=\"bevy_ecs/schedule/set/trait.SystemSet.html\" title=\"trait bevy_ecs::schedule::set::SystemSet\"><code>SystemSet</code></a> type.</div></details></div></details>","IntoSystemSet<(IsFunctionSystem, Marker)>","bevy_sprite::render::DrawSprite"]],
"bevy_ui":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystem%3C%3CF+as+ExclusiveSystemParamFunction%3CMarker%3E%3E::In,+%3CF+as+ExclusiveSystemParamFunction%3CMarker%3E%3E::Out,+(IsExclusiveFunctionSystem,+Marker)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/exclusive_function_system.rs.html#37-40\">source</a><a href=\"#impl-IntoSystem%3C%3CF+as+ExclusiveSystemParamFunction%3CMarker%3E%3E::In,+%3CF+as+ExclusiveSystemParamFunction%3CMarker%3E%3E::Out,+(IsExclusiveFunctionSystem,+Marker)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Marker, F&gt; <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;&lt;F as <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html#associatedtype.In\" title=\"type bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction::In\">In</a>, &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html#associatedtype.Out\" title=\"type bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction::Out\">Out</a>, (IsExclusiveFunctionSystem, Marker)&gt; for F<div class=\"where\">where\n    Marker: 'static,\n    F: <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.System\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.System\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" class=\"associatedtype\">System</a> = <a class=\"struct\" href=\"bevy_ecs/system/exclusive_function_system/struct.ExclusiveFunctionSystem.html\" title=\"struct bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem\">ExclusiveFunctionSystem</a>&lt;Marker, F&gt;</h4></section></summary><div class='docblock'>The type of <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a> that this instance converts into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_system\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/exclusive_function_system.rs.html#43\">source</a><a href=\"#method.into_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#tymethod.into_system\" class=\"fn\">into_system</a>(\n    func: F\n) -&gt; &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;&lt;F as <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html#associatedtype.In\" title=\"type bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction::In\">In</a>, &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html#associatedtype.Out\" title=\"type bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction::Out\">Out</a>, (IsExclusiveFunctionSystem, Marker)&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a></h4></section></summary><div class='docblock'>Turns this value into its corresponding <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pipe\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#169-171\">source</a><a href=\"#method.pipe\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.pipe\" class=\"fn\">pipe</a>&lt;B, Final, MarkerB&gt;(\n    self,\n    system: B\n) -&gt; <a class=\"struct\" href=\"bevy_ecs/system/combinator/struct.CombinatorSystem.html\" title=\"struct bevy_ecs::system::combinator::CombinatorSystem\">CombinatorSystem</a>&lt;Pipe, Self::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>, &lt;B as <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;Out, Final, MarkerB&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;Out, Final, MarkerB&gt;,</div></h4></section></summary><div class='docblock'>Pass the output of this system <code>A</code> into a second system <code>B</code>, creating a new compound system. <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.pipe\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#198-200\">source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.map\" class=\"fn\">map</a>&lt;T, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"bevy_ecs/system/adapter_system/struct.AdapterSystem.html\" title=\"struct bevy_ecs::system::adapter_system::AdapterSystem\">AdapterSystem</a>&lt;F, Self::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Out) -&gt; T,</div></h4></section></summary><div class='docblock'>Pass the output of this system into the passed function <code>f</code>, creating a new system that\noutputs the value returned from the function. <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.system_type_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#209\">source</a><a href=\"#method.system_type_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.system_type_id\" class=\"fn\">system_type_id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a></h4></section></summary><div class='docblock'>Get the <a href=\"https://doc.rust-lang.org/1.79.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\"><code>TypeId</code></a> of the <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a> produced after calling <a href=\"bevy_ecs/system/trait.IntoSystem.html#tymethod.into_system\" title=\"associated function bevy_ecs::system::IntoSystem::into_system\"><code>into_system</code></a>.</div></details></div></details>","IntoSystem<<F as ExclusiveSystemParamFunction<Marker>>::In, <F as ExclusiveSystemParamFunction<Marker>>::Out, (IsExclusiveFunctionSystem, Marker)>","bevy_ui::render::render_pass::DrawUi","bevy_ui::render::ui_material_pipeline::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystem%3C%3CF+as+SystemParamFunction%3CMarker%3E%3E::In,+%3CF+as+SystemParamFunction%3CMarker%3E%3E::Out,+(IsFunctionSystem,+Marker)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/function_system.rs.html#448-451\">source</a><a href=\"#impl-IntoSystem%3C%3CF+as+SystemParamFunction%3CMarker%3E%3E::In,+%3CF+as+SystemParamFunction%3CMarker%3E%3E::Out,+(IsFunctionSystem,+Marker)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Marker, F&gt; <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;&lt;F as <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html#associatedtype.In\" title=\"type bevy_ecs::system::function_system::SystemParamFunction::In\">In</a>, &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html#associatedtype.Out\" title=\"type bevy_ecs::system::function_system::SystemParamFunction::Out\">Out</a>, (IsFunctionSystem, Marker)&gt; for F<div class=\"where\">where\n    Marker: 'static,\n    F: <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.System\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.System\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" class=\"associatedtype\">System</a> = <a class=\"struct\" href=\"bevy_ecs/system/function_system/struct.FunctionSystem.html\" title=\"struct bevy_ecs::system::function_system::FunctionSystem\">FunctionSystem</a>&lt;Marker, F&gt;</h4></section></summary><div class='docblock'>The type of <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a> that this instance converts into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_system\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/function_system.rs.html#454\">source</a><a href=\"#method.into_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#tymethod.into_system\" class=\"fn\">into_system</a>(\n    func: F\n) -&gt; &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;&lt;F as <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html#associatedtype.In\" title=\"type bevy_ecs::system::function_system::SystemParamFunction::In\">In</a>, &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html#associatedtype.Out\" title=\"type bevy_ecs::system::function_system::SystemParamFunction::Out\">Out</a>, (IsFunctionSystem, Marker)&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a></h4></section></summary><div class='docblock'>Turns this value into its corresponding <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pipe\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#169-171\">source</a><a href=\"#method.pipe\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.pipe\" class=\"fn\">pipe</a>&lt;B, Final, MarkerB&gt;(\n    self,\n    system: B\n) -&gt; <a class=\"struct\" href=\"bevy_ecs/system/combinator/struct.CombinatorSystem.html\" title=\"struct bevy_ecs::system::combinator::CombinatorSystem\">CombinatorSystem</a>&lt;Pipe, Self::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>, &lt;B as <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;Out, Final, MarkerB&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;Out, Final, MarkerB&gt;,</div></h4></section></summary><div class='docblock'>Pass the output of this system <code>A</code> into a second system <code>B</code>, creating a new compound system. <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.pipe\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#198-200\">source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.map\" class=\"fn\">map</a>&lt;T, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"bevy_ecs/system/adapter_system/struct.AdapterSystem.html\" title=\"struct bevy_ecs::system::adapter_system::AdapterSystem\">AdapterSystem</a>&lt;F, Self::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Out) -&gt; T,</div></h4></section></summary><div class='docblock'>Pass the output of this system into the passed function <code>f</code>, creating a new system that\noutputs the value returned from the function. <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.system_type_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#209\">source</a><a href=\"#method.system_type_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.system_type_id\" class=\"fn\">system_type_id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a></h4></section></summary><div class='docblock'>Get the <a href=\"https://doc.rust-lang.org/1.79.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\"><code>TypeId</code></a> of the <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a> produced after calling <a href=\"bevy_ecs/system/trait.IntoSystem.html#tymethod.into_system\" title=\"associated function bevy_ecs::system::IntoSystem::into_system\"><code>into_system</code></a>.</div></details></div></details>","IntoSystem<<F as SystemParamFunction<Marker>>::In, <F as SystemParamFunction<Marker>>::Out, (IsFunctionSystem, Marker)>","bevy_ui::render::render_pass::DrawUi","bevy_ui::render::ui_material_pipeline::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystemSet%3C(IsExclusiveFunctionSystem,+Marker)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/set.rs.html#189-192\">source</a><a href=\"#impl-IntoSystemSet%3C(IsExclusiveFunctionSystem,+Marker)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Marker, F&gt; <a class=\"trait\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html\" title=\"trait bevy_ecs::schedule::set::IntoSystemSet\">IntoSystemSet</a>&lt;(IsExclusiveFunctionSystem, Marker)&gt; for F<div class=\"where\">where\n    Marker: 'static,\n    F: <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Set\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Set\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#associatedtype.Set\" class=\"associatedtype\">Set</a> = <a class=\"struct\" href=\"bevy_ecs/schedule/set/struct.SystemTypeSet.html\" title=\"struct bevy_ecs::schedule::set::SystemTypeSet\">SystemTypeSet</a>&lt;<a class=\"struct\" href=\"bevy_ecs/system/exclusive_function_system/struct.ExclusiveFunctionSystem.html\" title=\"struct bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem\">ExclusiveFunctionSystem</a>&lt;Marker, F&gt;&gt;</h4></section></summary><div class='docblock'>The type of <a href=\"bevy_ecs/schedule/set/trait.SystemSet.html\" title=\"trait bevy_ecs::schedule::set::SystemSet\"><code>SystemSet</code></a> this instance converts into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_system_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/set.rs.html#197\">source</a><a href=\"#method.into_system_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#tymethod.into_system_set\" class=\"fn\">into_system_set</a>(\n    self\n) -&gt; &lt;F as <a class=\"trait\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html\" title=\"trait bevy_ecs::schedule::set::IntoSystemSet\">IntoSystemSet</a>&lt;(IsExclusiveFunctionSystem, Marker)&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#associatedtype.Set\" title=\"type bevy_ecs::schedule::set::IntoSystemSet::Set\">Set</a></h4></section></summary><div class='docblock'>Converts this instance to its associated <a href=\"bevy_ecs/schedule/set/trait.SystemSet.html\" title=\"trait bevy_ecs::schedule::set::SystemSet\"><code>SystemSet</code></a> type.</div></details></div></details>","IntoSystemSet<(IsExclusiveFunctionSystem, Marker)>","bevy_ui::render::render_pass::DrawUi","bevy_ui::render::ui_material_pipeline::DrawUiMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystemSet%3C(IsFunctionSystem,+Marker)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/set.rs.html#175-178\">source</a><a href=\"#impl-IntoSystemSet%3C(IsFunctionSystem,+Marker)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Marker, F&gt; <a class=\"trait\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html\" title=\"trait bevy_ecs::schedule::set::IntoSystemSet\">IntoSystemSet</a>&lt;(IsFunctionSystem, Marker)&gt; for F<div class=\"where\">where\n    Marker: 'static,\n    F: <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Set\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Set\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#associatedtype.Set\" class=\"associatedtype\">Set</a> = <a class=\"struct\" href=\"bevy_ecs/schedule/set/struct.SystemTypeSet.html\" title=\"struct bevy_ecs::schedule::set::SystemTypeSet\">SystemTypeSet</a>&lt;<a class=\"struct\" href=\"bevy_ecs/system/function_system/struct.FunctionSystem.html\" title=\"struct bevy_ecs::system::function_system::FunctionSystem\">FunctionSystem</a>&lt;Marker, F&gt;&gt;</h4></section></summary><div class='docblock'>The type of <a href=\"bevy_ecs/schedule/set/trait.SystemSet.html\" title=\"trait bevy_ecs::schedule::set::SystemSet\"><code>SystemSet</code></a> this instance converts into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_system_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/set.rs.html#183\">source</a><a href=\"#method.into_system_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#tymethod.into_system_set\" class=\"fn\">into_system_set</a>(\n    self\n) -&gt; &lt;F as <a class=\"trait\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html\" title=\"trait bevy_ecs::schedule::set::IntoSystemSet\">IntoSystemSet</a>&lt;(IsFunctionSystem, Marker)&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#associatedtype.Set\" title=\"type bevy_ecs::schedule::set::IntoSystemSet::Set\">Set</a></h4></section></summary><div class='docblock'>Converts this instance to its associated <a href=\"bevy_ecs/schedule/set/trait.SystemSet.html\" title=\"trait bevy_ecs::schedule::set::SystemSet\"><code>SystemSet</code></a> type.</div></details></div></details>","IntoSystemSet<(IsFunctionSystem, Marker)>","bevy_ui::render::render_pass::DrawUi","bevy_ui::render::ui_material_pipeline::DrawUiMaterial"]],
"bevy_winit":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystem%3C%3CF+as+ExclusiveSystemParamFunction%3CMarker%3E%3E::In,+%3CF+as+ExclusiveSystemParamFunction%3CMarker%3E%3E::Out,+(IsExclusiveFunctionSystem,+Marker)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/exclusive_function_system.rs.html#37-40\">source</a><a href=\"#impl-IntoSystem%3C%3CF+as+ExclusiveSystemParamFunction%3CMarker%3E%3E::In,+%3CF+as+ExclusiveSystemParamFunction%3CMarker%3E%3E::Out,+(IsExclusiveFunctionSystem,+Marker)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Marker, F&gt; <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;&lt;F as <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html#associatedtype.In\" title=\"type bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction::In\">In</a>, &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html#associatedtype.Out\" title=\"type bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction::Out\">Out</a>, (IsExclusiveFunctionSystem, Marker)&gt; for F<div class=\"where\">where\n    Marker: 'static,\n    F: <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.System\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.System\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" class=\"associatedtype\">System</a> = <a class=\"struct\" href=\"bevy_ecs/system/exclusive_function_system/struct.ExclusiveFunctionSystem.html\" title=\"struct bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem\">ExclusiveFunctionSystem</a>&lt;Marker, F&gt;</h4></section></summary><div class='docblock'>The type of <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a> that this instance converts into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_system\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/exclusive_function_system.rs.html#43\">source</a><a href=\"#method.into_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#tymethod.into_system\" class=\"fn\">into_system</a>(\n    func: F\n) -&gt; &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;&lt;F as <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html#associatedtype.In\" title=\"type bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction::In\">In</a>, &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html#associatedtype.Out\" title=\"type bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction::Out\">Out</a>, (IsExclusiveFunctionSystem, Marker)&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a></h4></section></summary><div class='docblock'>Turns this value into its corresponding <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pipe\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#169-171\">source</a><a href=\"#method.pipe\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.pipe\" class=\"fn\">pipe</a>&lt;B, Final, MarkerB&gt;(\n    self,\n    system: B\n) -&gt; <a class=\"struct\" href=\"bevy_ecs/system/combinator/struct.CombinatorSystem.html\" title=\"struct bevy_ecs::system::combinator::CombinatorSystem\">CombinatorSystem</a>&lt;Pipe, Self::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>, &lt;B as <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;Out, Final, MarkerB&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;Out, Final, MarkerB&gt;,</div></h4></section></summary><div class='docblock'>Pass the output of this system <code>A</code> into a second system <code>B</code>, creating a new compound system. <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.pipe\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#198-200\">source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.map\" class=\"fn\">map</a>&lt;T, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"bevy_ecs/system/adapter_system/struct.AdapterSystem.html\" title=\"struct bevy_ecs::system::adapter_system::AdapterSystem\">AdapterSystem</a>&lt;F, Self::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Out) -&gt; T,</div></h4></section></summary><div class='docblock'>Pass the output of this system into the passed function <code>f</code>, creating a new system that\noutputs the value returned from the function. <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.system_type_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#209\">source</a><a href=\"#method.system_type_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.system_type_id\" class=\"fn\">system_type_id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a></h4></section></summary><div class='docblock'>Get the <a href=\"https://doc.rust-lang.org/1.79.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\"><code>TypeId</code></a> of the <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a> produced after calling <a href=\"bevy_ecs/system/trait.IntoSystem.html#tymethod.into_system\" title=\"associated function bevy_ecs::system::IntoSystem::into_system\"><code>into_system</code></a>.</div></details></div></details>","IntoSystem<<F as ExclusiveSystemParamFunction<Marker>>::In, <F as ExclusiveSystemParamFunction<Marker>>::Out, (IsExclusiveFunctionSystem, Marker)>","bevy_winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystem%3C%3CF+as+SystemParamFunction%3CMarker%3E%3E::In,+%3CF+as+SystemParamFunction%3CMarker%3E%3E::Out,+(IsFunctionSystem,+Marker)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/function_system.rs.html#448-451\">source</a><a href=\"#impl-IntoSystem%3C%3CF+as+SystemParamFunction%3CMarker%3E%3E::In,+%3CF+as+SystemParamFunction%3CMarker%3E%3E::Out,+(IsFunctionSystem,+Marker)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Marker, F&gt; <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;&lt;F as <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html#associatedtype.In\" title=\"type bevy_ecs::system::function_system::SystemParamFunction::In\">In</a>, &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html#associatedtype.Out\" title=\"type bevy_ecs::system::function_system::SystemParamFunction::Out\">Out</a>, (IsFunctionSystem, Marker)&gt; for F<div class=\"where\">where\n    Marker: 'static,\n    F: <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.System\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.System\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" class=\"associatedtype\">System</a> = <a class=\"struct\" href=\"bevy_ecs/system/function_system/struct.FunctionSystem.html\" title=\"struct bevy_ecs::system::function_system::FunctionSystem\">FunctionSystem</a>&lt;Marker, F&gt;</h4></section></summary><div class='docblock'>The type of <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a> that this instance converts into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_system\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/function_system.rs.html#454\">source</a><a href=\"#method.into_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#tymethod.into_system\" class=\"fn\">into_system</a>(\n    func: F\n) -&gt; &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;&lt;F as <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html#associatedtype.In\" title=\"type bevy_ecs::system::function_system::SystemParamFunction::In\">In</a>, &lt;F as <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html#associatedtype.Out\" title=\"type bevy_ecs::system::function_system::SystemParamFunction::Out\">Out</a>, (IsFunctionSystem, Marker)&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a></h4></section></summary><div class='docblock'>Turns this value into its corresponding <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pipe\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#169-171\">source</a><a href=\"#method.pipe\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.pipe\" class=\"fn\">pipe</a>&lt;B, Final, MarkerB&gt;(\n    self,\n    system: B\n) -&gt; <a class=\"struct\" href=\"bevy_ecs/system/combinator/struct.CombinatorSystem.html\" title=\"struct bevy_ecs::system::combinator::CombinatorSystem\">CombinatorSystem</a>&lt;Pipe, Self::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>, &lt;B as <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;Out, Final, MarkerB&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;Out, Final, MarkerB&gt;,</div></h4></section></summary><div class='docblock'>Pass the output of this system <code>A</code> into a second system <code>B</code>, creating a new compound system. <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.pipe\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#198-200\">source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.map\" class=\"fn\">map</a>&lt;T, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"bevy_ecs/system/adapter_system/struct.AdapterSystem.html\" title=\"struct bevy_ecs::system::adapter_system::AdapterSystem\">AdapterSystem</a>&lt;F, Self::<a class=\"associatedtype\" href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" title=\"type bevy_ecs::system::IntoSystem::System\">System</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Out) -&gt; T,</div></h4></section></summary><div class='docblock'>Pass the output of this system into the passed function <code>f</code>, creating a new system that\noutputs the value returned from the function. <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.system_type_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#209\">source</a><a href=\"#method.system_type_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.system_type_id\" class=\"fn\">system_type_id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a></h4></section></summary><div class='docblock'>Get the <a href=\"https://doc.rust-lang.org/1.79.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\"><code>TypeId</code></a> of the <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a> produced after calling <a href=\"bevy_ecs/system/trait.IntoSystem.html#tymethod.into_system\" title=\"associated function bevy_ecs::system::IntoSystem::into_system\"><code>into_system</code></a>.</div></details></div></details>","IntoSystem<<F as SystemParamFunction<Marker>>::In, <F as SystemParamFunction<Marker>>::Out, (IsFunctionSystem, Marker)>","bevy_winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystemSet%3C(IsExclusiveFunctionSystem,+Marker)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/set.rs.html#189-192\">source</a><a href=\"#impl-IntoSystemSet%3C(IsExclusiveFunctionSystem,+Marker)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Marker, F&gt; <a class=\"trait\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html\" title=\"trait bevy_ecs::schedule::set::IntoSystemSet\">IntoSystemSet</a>&lt;(IsExclusiveFunctionSystem, Marker)&gt; for F<div class=\"where\">where\n    Marker: 'static,\n    F: <a class=\"trait\" href=\"bevy_ecs/system/exclusive_function_system/trait.ExclusiveSystemParamFunction.html\" title=\"trait bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction\">ExclusiveSystemParamFunction</a>&lt;Marker&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Set\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Set\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#associatedtype.Set\" class=\"associatedtype\">Set</a> = <a class=\"struct\" href=\"bevy_ecs/schedule/set/struct.SystemTypeSet.html\" title=\"struct bevy_ecs::schedule::set::SystemTypeSet\">SystemTypeSet</a>&lt;<a class=\"struct\" href=\"bevy_ecs/system/exclusive_function_system/struct.ExclusiveFunctionSystem.html\" title=\"struct bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem\">ExclusiveFunctionSystem</a>&lt;Marker, F&gt;&gt;</h4></section></summary><div class='docblock'>The type of <a href=\"bevy_ecs/schedule/set/trait.SystemSet.html\" title=\"trait bevy_ecs::schedule::set::SystemSet\"><code>SystemSet</code></a> this instance converts into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_system_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/set.rs.html#197\">source</a><a href=\"#method.into_system_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#tymethod.into_system_set\" class=\"fn\">into_system_set</a>(\n    self\n) -&gt; &lt;F as <a class=\"trait\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html\" title=\"trait bevy_ecs::schedule::set::IntoSystemSet\">IntoSystemSet</a>&lt;(IsExclusiveFunctionSystem, Marker)&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#associatedtype.Set\" title=\"type bevy_ecs::schedule::set::IntoSystemSet::Set\">Set</a></h4></section></summary><div class='docblock'>Converts this instance to its associated <a href=\"bevy_ecs/schedule/set/trait.SystemSet.html\" title=\"trait bevy_ecs::schedule::set::SystemSet\"><code>SystemSet</code></a> type.</div></details></div></details>","IntoSystemSet<(IsExclusiveFunctionSystem, Marker)>","bevy_winit::CreateWindowParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystemSet%3C(IsFunctionSystem,+Marker)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/set.rs.html#175-178\">source</a><a href=\"#impl-IntoSystemSet%3C(IsFunctionSystem,+Marker)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Marker, F&gt; <a class=\"trait\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html\" title=\"trait bevy_ecs::schedule::set::IntoSystemSet\">IntoSystemSet</a>&lt;(IsFunctionSystem, Marker)&gt; for F<div class=\"where\">where\n    Marker: 'static,\n    F: <a class=\"trait\" href=\"bevy_ecs/system/function_system/trait.SystemParamFunction.html\" title=\"trait bevy_ecs::system::function_system::SystemParamFunction\">SystemParamFunction</a>&lt;Marker&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Set\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Set\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#associatedtype.Set\" class=\"associatedtype\">Set</a> = <a class=\"struct\" href=\"bevy_ecs/schedule/set/struct.SystemTypeSet.html\" title=\"struct bevy_ecs::schedule::set::SystemTypeSet\">SystemTypeSet</a>&lt;<a class=\"struct\" href=\"bevy_ecs/system/function_system/struct.FunctionSystem.html\" title=\"struct bevy_ecs::system::function_system::FunctionSystem\">FunctionSystem</a>&lt;Marker, F&gt;&gt;</h4></section></summary><div class='docblock'>The type of <a href=\"bevy_ecs/schedule/set/trait.SystemSet.html\" title=\"trait bevy_ecs::schedule::set::SystemSet\"><code>SystemSet</code></a> this instance converts into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_system_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/set.rs.html#183\">source</a><a href=\"#method.into_system_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#tymethod.into_system_set\" class=\"fn\">into_system_set</a>(\n    self\n) -&gt; &lt;F as <a class=\"trait\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html\" title=\"trait bevy_ecs::schedule::set::IntoSystemSet\">IntoSystemSet</a>&lt;(IsFunctionSystem, Marker)&gt;&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/schedule/set/trait.IntoSystemSet.html#associatedtype.Set\" title=\"type bevy_ecs::schedule::set::IntoSystemSet::Set\">Set</a></h4></section></summary><div class='docblock'>Converts this instance to its associated <a href=\"bevy_ecs/schedule/set/trait.SystemSet.html\" title=\"trait bevy_ecs::schedule::set::SystemSet\"><code>SystemSet</code></a> type.</div></details></div></details>","IntoSystemSet<(IsFunctionSystem, Marker)>","bevy_winit::CreateWindowParams"]],
"gltf":[],
"lewton":[],
"naga":[],
"wgpu_core":[],
"x11rb":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#518\">source</a><a href=\"#impl-Serialize-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; <a class=\"trait\" href=\"x11rb/x11_utils/trait.Serialize.html\" title=\"trait x11rb::x11_utils::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"x11rb/x11_utils/trait.Serialize.html\" title=\"trait x11rb::x11_utils::Serialize\">Serialize</a>,\n    B: <a class=\"trait\" href=\"x11rb/x11_utils/trait.Serialize.html\" title=\"trait x11rb::x11_utils::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"x11rb/x11_utils/trait.Serialize.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>The value returned by <code>serialize</code>. <a href=\"x11rb/x11_utils/trait.Serialize.html#associatedtype.Bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#518\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/x11_utils/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B)</a> as <a class=\"trait\" href=\"x11rb/x11_utils/trait.Serialize.html\" title=\"trait x11rb::x11_utils::Serialize\">Serialize</a>&gt;::<a class=\"associatedtype\" href=\"x11rb/x11_utils/trait.Serialize.html#associatedtype.Bytes\" title=\"type x11rb::x11_utils::Serialize::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Serialize this value into X11 raw bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#518\">source</a><a href=\"#method.serialize_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/x11_utils/trait.Serialize.html#tymethod.serialize_into\" class=\"fn\">serialize_into</a>(&amp;self, bytes: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class='docblock'>Serialize this value into X11 raw bytes, appending the result into <code>bytes</code>. <a href=\"x11rb/x11_utils/trait.Serialize.html#tymethod.serialize_into\">Read more</a></div></details></div></details>","Serialize","x11rb::connection::BufWithFds","x11rb::connection::EventAndSeqNumber","x11rb::connection::RawEventAndSeqNumber"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryParse-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#518\">source</a><a href=\"#impl-TryParse-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; <a class=\"trait\" href=\"x11rb/x11_utils/trait.TryParse.html\" title=\"trait x11rb::x11_utils::TryParse\">TryParse</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"x11rb/x11_utils/trait.TryParse.html\" title=\"trait x11rb::x11_utils::TryParse\">TryParse</a>,\n    B: <a class=\"trait\" href=\"x11rb/x11_utils/trait.TryParse.html\" title=\"trait x11rb::x11_utils::TryParse\">TryParse</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_parse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#518\">source</a><a href=\"#method.try_parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/x11_utils/trait.TryParse.html#tymethod.try_parse\" class=\"fn\">try_parse</a>(remaining: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B)</a>, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]), <a class=\"enum\" href=\"x11rb/rust_connection/enum.ParseError.html\" title=\"enum x11rb::rust_connection::ParseError\">ParseError</a>&gt;</h4></section></summary><div class='docblock'>Try to parse the given values into an instance of this type. <a href=\"x11rb/x11_utils/trait.TryParse.html#tymethod.try_parse\">Read more</a></div></details></div></details>","TryParse","x11rb::connection::BufWithFds","x11rb::connection::EventAndSeqNumber","x11rb::connection::RawEventAndSeqNumber"]],
"x11rb_protocol":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#518\">source</a><a href=\"#impl-Serialize-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; <a class=\"trait\" href=\"x11rb_protocol/x11_utils/trait.Serialize.html\" title=\"trait x11rb_protocol::x11_utils::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"x11rb_protocol/x11_utils/trait.Serialize.html\" title=\"trait x11rb_protocol::x11_utils::Serialize\">Serialize</a>,\n    B: <a class=\"trait\" href=\"x11rb_protocol/x11_utils/trait.Serialize.html\" title=\"trait x11rb_protocol::x11_utils::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"x11rb_protocol/x11_utils/trait.Serialize.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>The value returned by <code>serialize</code>. <a href=\"x11rb_protocol/x11_utils/trait.Serialize.html#associatedtype.Bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#518\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb_protocol/x11_utils/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"x11rb_protocol/x11_utils/trait.Serialize.html#associatedtype.Bytes\" title=\"type x11rb_protocol::x11_utils::Serialize::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Serialize this value into X11 raw bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#518\">source</a><a href=\"#method.serialize_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb_protocol/x11_utils/trait.Serialize.html#tymethod.serialize_into\" class=\"fn\">serialize_into</a>(&amp;self, bytes: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class='docblock'>Serialize this value into X11 raw bytes, appending the result into <code>bytes</code>. <a href=\"x11rb_protocol/x11_utils/trait.Serialize.html#tymethod.serialize_into\">Read more</a></div></details></div></details>","Serialize","x11rb_protocol::BufWithFds","x11rb_protocol::RawEventAndSeqNumber"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryParse-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#518\">source</a><a href=\"#impl-TryParse-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; <a class=\"trait\" href=\"x11rb_protocol/x11_utils/trait.TryParse.html\" title=\"trait x11rb_protocol::x11_utils::TryParse\">TryParse</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"x11rb_protocol/x11_utils/trait.TryParse.html\" title=\"trait x11rb_protocol::x11_utils::TryParse\">TryParse</a>,\n    B: <a class=\"trait\" href=\"x11rb_protocol/x11_utils/trait.TryParse.html\" title=\"trait x11rb_protocol::x11_utils::TryParse\">TryParse</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_parse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#518\">source</a><a href=\"#method.try_parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb_protocol/x11_utils/trait.TryParse.html#tymethod.try_parse\" class=\"fn\">try_parse</a>(remaining: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(A, B)</a>, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]), <a class=\"enum\" href=\"x11rb_protocol/errors/enum.ParseError.html\" title=\"enum x11rb_protocol::errors::ParseError\">ParseError</a>&gt;</h4></section></summary><div class='docblock'>Try to parse the given values into an instance of this type. <a href=\"x11rb_protocol/x11_utils/trait.TryParse.html#tymethod.try_parse\">Read more</a></div></details></div></details>","TryParse","x11rb_protocol::BufWithFds","x11rb_protocol::RawEventAndSeqNumber"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()