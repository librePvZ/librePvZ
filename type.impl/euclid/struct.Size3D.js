(function() {var type_impls = {
"euclid":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26Size3D%3CT,+U%3E%3E-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1461-1470\">source</a><a href=\"#impl-Add%3C%26Size3D%3CT,+U%3E%3E-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;T, Output = T&gt;, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1463-1469\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; Self</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&Size3D<T, U>>","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1448-1459\">source</a><a href=\"#impl-Add-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1452-1458\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: Self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1484-1491\">source</a><a href=\"#impl-AddAssign-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1486-1490\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ceil-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1416-1422\">source</a><a href=\"#impl-Ceil-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"euclid/num/trait.Ceil.html\" title=\"trait euclid::num::Ceil\">Ceil</a>, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Ceil.html\" title=\"trait euclid::num::Ceil\">Ceil</a> for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1419-1421\">source</a><a href=\"#method.ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Ceil.html#tymethod.ceil\" class=\"fn\">ceil</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>See <a href=\"#method.ceil\"><code>Size3D::ceil()</code></a>.</p>\n</div></details></div></details>","Ceil","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#957-966\">source</a><a href=\"#impl-Clone-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#958-965\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1028-1036\">source</a><a href=\"#impl-Debug-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1029-1035\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1038-1042\">source</a><a href=\"#impl-Default-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1039-1041\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.79.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Size3D%3CT,+U2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1581-1592\">source</a><a href=\"#impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Size3D%3CT,+U2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>, U1, U2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U1, U2&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U2&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, U1&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1585-1591\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, scale: <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U1, U2&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Scale<T, U1, U2>>","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CT%3E-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1558-1570\">source</a><a href=\"#impl-Div%3CT%3E-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1563-1569\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, scale: T) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<T>","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1594-1599\">source</a><a href=\"#impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U, U&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1596-1598\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<Scale<T, U, U>>","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CT%3E-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1572-1579\">source</a><a href=\"#impl-DivAssign%3CT%3E-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1574-1578\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: T)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<T>","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Floor-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1424-1430\">source</a><a href=\"#impl-Floor-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"euclid/num/trait.Floor.html\" title=\"trait euclid::num::Floor\">Floor</a>, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Floor.html\" title=\"trait euclid::num::Floor\">Floor</a> for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1427-1429\">source</a><a href=\"#method.floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Floor.html#tymethod.floor\" class=\"fn\">floor</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>See <a href=\"#method.floor\"><code>Size3D::floor()</code></a>.</p>\n</div></details></div></details>","Floor","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+3%5D%3E-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1634-1639\">source</a><a href=\"#impl-From%3C%5BT;+3%5D%3E-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">[T; 3]</a>&gt; for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1636-1638\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>([w, h, d]: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">[T; 3]</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 3]>","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T)%3E-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1648-1653\">source</a><a href=\"#impl-From%3C(T,+T,+T)%3E-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T, T, T)</a>&gt; for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1650-1652\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tuple: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T, T, T)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T)>","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVector3D%3CT,+U%3E%3E-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1620-1625\">source</a><a href=\"#impl-From%3CVector3D%3CT,+U%3E%3E-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1622-1624\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Vector3D<T, U>>","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1017-1026\">source</a><a href=\"#impl-Hash-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1021-1025\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, h: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;mut H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Size3D%3CT,+U1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1538-1549\">source</a><a href=\"#impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Size3D%3CT,+U1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>, U1, U2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U1, U2&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U1&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, U2&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1542-1548\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, scale: <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U1, U2&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Scale<T, U1, U2>>","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CT%3E-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1515-1527\">source</a><a href=\"#impl-Mul%3CT%3E-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1520-1526\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, scale: T) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<T>","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1551-1556\">source</a><a href=\"#impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U, U&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1553-1555\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<Scale<T, U, U>>","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CT%3E-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1529-1536\">source</a><a href=\"#impl-MulAssign%3CT%3E-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1531-1535\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: T)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<T>","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1439-1446\">source</a><a href=\"#impl-Neg-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1443-1445\">source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1008-1015\">source</a><a href=\"#impl-PartialEq-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1012-1014\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Round-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1408-1414\">source</a><a href=\"#impl-Round-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"euclid/num/trait.Round.html\" title=\"trait euclid::num::Round\">Round</a>, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Round.html\" title=\"trait euclid::num::Round\">Round</a> for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1411-1413\">source</a><a href=\"#method.round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Round.html#tymethod.round\" class=\"fn\">round</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>See <a href=\"#method.round\"><code>Size3D::round()</code></a>.</p>\n</div></details></div></details>","Round","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1044-1090\">source</a><a href=\"#impl-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1048-1053\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,</div></h4></section></summary><div class=\"docblock\"><p>The same as <a href=\"./num/trait.Zero.html#tymethod.zero\"><code>Zero::zero()</code></a> but available without importing trait.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1057-1064\">source</a><h4 class=\"code-header\">pub const fn <a href=\"euclid/struct.Size3D.html#tymethod.new\" class=\"fn\">new</a>(width: T, height: T, depth: T) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Constructor taking scalar values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_lengths\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1067-1069\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.from_lengths\" class=\"fn\">from_lengths</a>(\n    width: <a class=\"struct\" href=\"euclid/struct.Length.html\" title=\"struct euclid::Length\">Length</a>&lt;T, U&gt;,\n    height: <a class=\"struct\" href=\"euclid/struct.Length.html\" title=\"struct euclid::Length\">Length</a>&lt;T, U&gt;,\n    depth: <a class=\"struct\" href=\"euclid/struct.Length.html\" title=\"struct euclid::Length\">Length</a>&lt;T, U&gt;\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Constructor taking scalar strongly typed lengths.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.splat\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1073-1083\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.splat\" class=\"fn\">splat</a>(v: T) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Constructor setting all components to the same value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_untyped\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1087-1089\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.from_untyped\" class=\"fn\">from_untyped</a>(p: <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, <a class=\"struct\" href=\"euclid/struct.UnknownUnit.html\" title=\"struct euclid::UnknownUnit\">UnknownUnit</a>&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Tag a unitless value with units.</p>\n</div></details></div></details>",0,"euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1092-1213\">source</a><a href=\"#impl-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, U&gt; <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_array\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1095-1097\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.to_array\" class=\"fn\">to_array</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">[T; 3]</a></h4></section></summary><div class=\"docblock\"><p>Return this size as an array of three elements (width, then height, then depth).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_tuple\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1101-1103\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.to_tuple\" class=\"fn\">to_tuple</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(T, T, T)</a></h4></section></summary><div class=\"docblock\"><p>Return this size as an array of three elements (width, then height, then depth).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_vector\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1107-1109\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.to_vector\" class=\"fn\">to_vector</a>(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Return this size as a vector with width, height and depth.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_untyped\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1113-1115\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.to_untyped\" class=\"fn\">to_untyped</a>(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, <a class=\"struct\" href=\"euclid/struct.UnknownUnit.html\" title=\"struct euclid::UnknownUnit\">UnknownUnit</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Drop the units, preserving only the numeric value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_unit\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1119-1121\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.cast_unit\" class=\"fn\">cast_unit</a>&lt;V&gt;(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, V&gt;</h4></section></summary><div class=\"docblock\"><p>Cast the unit</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1135-1140\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.round\" class=\"fn\">round</a>(self) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Round.html\" title=\"trait euclid::num::Round\">Round</a>,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the nearest integer value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(size3::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>, <span class=\"number\">0.4</span>).round(), size3::&lt;<span class=\"kw\">_</span>, Mm&gt;(<span class=\"number\">0.0</span>, -<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1154-1159\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.ceil\" class=\"fn\">ceil</a>(self) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Ceil.html\" title=\"trait euclid::num::Ceil\">Ceil</a>,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the smallest integer equal or greater than the original value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(size3::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>, <span class=\"number\">0.4</span>).ceil(), size3::&lt;<span class=\"kw\">_</span>, Mm&gt;(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1173-1178\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.floor\" class=\"fn\">floor</a>(self) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Floor.html\" title=\"trait euclid::num::Floor\">Floor</a>,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the biggest integer equal or lower than the original value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(size3::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>, <span class=\"number\">0.4</span>).floor(), size3::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">1.0</span>, -<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.volume\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1181-1186\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.volume\" class=\"fn\">volume</a>(self) -&gt; T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns result of multiplication of all components</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lerp\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1206-1212\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.lerp\" class=\"fn\">lerp</a>(self, other: Self, t: T) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.One.html\" title=\"trait euclid::num::One\">One</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Linearly interpolate between this size and another size.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::size3;\n<span class=\"kw\">use </span>euclid::default::Size3D;\n\n<span class=\"kw\">let </span>from: Size3D&lt;<span class=\"kw\">_</span>&gt; = size3(<span class=\"number\">0.0</span>, <span class=\"number\">10.0</span>, -<span class=\"number\">1.0</span>);\n<span class=\"kw\">let </span>to:  Size3D&lt;<span class=\"kw\">_</span>&gt; = size3(<span class=\"number\">8.0</span>, -<span class=\"number\">4.0</span>,  <span class=\"number\">0.0</span>);\n\n<span class=\"macro\">assert_eq!</span>(from.lerp(to, -<span class=\"number\">1.0</span>), size3(-<span class=\"number\">8.0</span>,  <span class=\"number\">24.0</span>, -<span class=\"number\">2.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">0.0</span>), size3( <span class=\"number\">0.0</span>,  <span class=\"number\">10.0</span>, -<span class=\"number\">1.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">0.5</span>), size3( <span class=\"number\">4.0</span>,   <span class=\"number\">3.0</span>, -<span class=\"number\">0.5</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">1.0</span>), size3( <span class=\"number\">8.0</span>,  -<span class=\"number\">4.0</span>,  <span class=\"number\">0.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">2.0</span>), size3(<span class=\"number\">16.0</span>, -<span class=\"number\">18.0</span>,  <span class=\"number\">1.0</span>));</code></pre></div>\n</div></details></div></details>",0,"euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1215-1295\">source</a><a href=\"#impl-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, U&gt; <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1222-1224\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.cast\" class=\"fn\">cast</a>&lt;NewT: <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>&gt;(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;NewT, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast from one numeric representation to another, preserving the units.</p>\n<p>When casting from floating point to integer coordinates, the decimals are truncated\nas one would expect from a simple cast, but this behavior does not always make sense\ngeometrically. Consider using <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before casting.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_cast\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1231-1240\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.try_cast\" class=\"fn\">try_cast</a>&lt;NewT: <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;NewT, U&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Fallible cast from one numeric representation to another, preserving the units.</p>\n<p>When casting from floating point to integer coordinates, the decimals are truncated\nas one would expect from a simple cast, but this behavior does not always make sense\ngeometrically. Consider using <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before casting.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1246-1248\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.to_f32\" class=\"fn\">to_f32</a>(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.f32.html\">f32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>f32</code> size.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1252-1254\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.to_f64\" class=\"fn\">to_f64</a>(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.f64.html\">f64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>f64</code> size.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1262-1264\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.to_usize\" class=\"fn\">to_usize</a>(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>uint</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1272-1274\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.to_u32\" class=\"fn\">to_u32</a>(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>u32</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1282-1284\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.to_i32\" class=\"fn\">to_i32</a>(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i32.html\">i32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>i32</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1292-1294\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.to_i64\" class=\"fn\">to_i64</a>(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i64.html\">i64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>i64</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details></div></details>",0,"euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1297-1303\">source</a><a href=\"#impl-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"num_traits/float/trait.Float.html\" title=\"trait num_traits::float::Float\">Float</a>, U&gt; <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_finite\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1300-1302\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.is_finite\" class=\"fn\">is_finite</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if all members are finite.</p>\n</div></details></div></details>",0,"euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1305-1319\">source</a><a href=\"#impl-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"num_traits/sign/trait.Signed.html\" title=\"trait num_traits::sign::Signed\">Signed</a>, U&gt; <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1311-1313\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.abs\" class=\"fn\">abs</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of each component.</p>\n<p>For <code>f32</code> and <code>f64</code>, <code>NaN</code> will be returned for component if the component is <code>NaN</code>.</p>\n<p>For signed integers, <code>::MIN</code> will be returned for component if the component is <code>::MIN</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_positive\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1316-1318\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.is_positive\" class=\"fn\">is_positive</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all components is positive and <code>false</code> any component is zero or negative.</p>\n</div></details></div></details>",0,"euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1321-1386\">source</a><a href=\"#impl-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>, U&gt; <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1324-1330\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the size each component of which are minimum of this size and another.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1334-1340\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the size each component of which are maximum of this size and another.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1347-1352\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.clamp\" class=\"fn\">clamp</a>(self, start: Self, end: Self) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the size each component of which clamped by corresponding\ncomponents of <code>start</code> and <code>end</code>.</p>\n<p>Shortcut for <code>self.max(start).min(end)</code>.</p>\n</div></details><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1356-1358\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.contains\" class=\"fn\">contains</a>(self, other: Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.greater_than\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1361-1367\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.greater_than\" class=\"fn\">greater_than</a>(self, other: Self) -&gt; <a class=\"struct\" href=\"euclid/struct.BoolVector3D.html\" title=\"struct euclid::BoolVector3D\">BoolVector3D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “greater than” operation on each component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lower_than\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1370-1376\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.lower_than\" class=\"fn\">lower_than</a>(self, other: Self) -&gt; <a class=\"struct\" href=\"euclid/struct.BoolVector3D.html\" title=\"struct euclid::BoolVector3D\">BoolVector3D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “lower than” operation on each component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1379-1385\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if any component of size is zero, negative or NaN.</p>\n</div></details></div></details>",0,"euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1388-1406\">source</a><a href=\"#impl-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, U&gt; <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.equal\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1390-1396\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.equal\" class=\"fn\">equal</a>(self, other: Self) -&gt; <a class=\"struct\" href=\"euclid/struct.BoolVector3D.html\" title=\"struct euclid::BoolVector3D\">BoolVector3D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “equal” operation on each component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not_equal\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1399-1405\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Size3D.html#tymethod.not_equal\" class=\"fn\">not_equal</a>(self, other: Self) -&gt; <a class=\"struct\" href=\"euclid/struct.BoolVector3D.html\" title=\"struct euclid::BoolVector3D\">BoolVector3D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “not equal” operation on each component.</p>\n</div></details></div></details>",0,"euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1493-1504\">source</a><a href=\"#impl-Sub-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1497-1503\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: Self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1506-1513\">source</a><a href=\"#impl-SubAssign-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1508-1512\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3C%26Size3D%3CT,+U%3E%3E-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1478-1482\">source</a><a href=\"#impl-Sum%3C%26Size3D%3CT,+U%3E%3E-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>, U: 'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;&amp;'a <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1479-1481\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;'a Self</a>&gt;&gt;(iter: I) -&gt; Self</h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum<&'a Size3D<T, U>>","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1472-1476\">source</a><a href=\"#impl-Sum-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1473-1475\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = Self&gt;&gt;(iter: I) -&gt; Self</h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum","euclid::default::Size3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1432-1437\">source</a><a href=\"#impl-Zero-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a> for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1434-1436\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; Self</h4></section></div></details>","Zero","euclid::default::Size3D"],["<section id=\"impl-Copy-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#955\">source</a><a href=\"#impl-Copy-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;</h3></section>","Copy","euclid::default::Size3D"],["<section id=\"impl-Eq-for-Size3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#1006\">source</a><a href=\"#impl-Eq-for-Size3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","euclid::default::Size3D"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()