(function() {var type_impls = {
"bevy_math":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Dir3\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#340\">source</a><a href=\"#impl-Clone-for-Dir3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"bevy_math/struct.Dir3.html\" title=\"struct bevy_math::Dir3\">Dir3</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#340\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bevy_math/struct.Dir3.html\" title=\"struct bevy_math::Dir3\">Dir3</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.79.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","bevy_math::direction::Direction3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Dir3\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#340\">source</a><a href=\"#impl-Debug-for-Dir3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"bevy_math/struct.Dir3.html\" title=\"struct bevy_math::Dir3\">Dir3</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#340\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.79.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","bevy_math::direction::Direction3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-Dir3\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#465-470\">source</a><a href=\"#impl-Deref-for-Dir3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"bevy_math/struct.Dir3.html\" title=\"struct bevy_math::Dir3\">Dir3</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = <a class=\"struct\" href=\"bevy_math/struct.Vec3.html\" title=\"struct bevy_math::Vec3\">Vec3</a></h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#467-469\">source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","bevy_math::direction::Direction3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Dir3\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#351-449\">source</a><a href=\"#impl-Dir3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"bevy_math/struct.Dir3.html\" title=\"struct bevy_math::Dir3\">Dir3</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.X\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#353\">source</a><h4 class=\"code-header\">pub const <a href=\"bevy_math/struct.Dir3.html#associatedconstant.X\" class=\"constant\">X</a>: Self = _</h4></section></summary><div class=\"docblock\"><p>A unit vector pointing along the positive X axis.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.Y\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#355\">source</a><h4 class=\"code-header\">pub const <a href=\"bevy_math/struct.Dir3.html#associatedconstant.Y\" class=\"constant\">Y</a>: Self = _</h4></section></summary><div class=\"docblock\"><p>A unit vector pointing along the positive Y axis.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.Z\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#357\">source</a><h4 class=\"code-header\">pub const <a href=\"bevy_math/struct.Dir3.html#associatedconstant.Z\" class=\"constant\">Z</a>: Self = _</h4></section></summary><div class=\"docblock\"><p>A unit vector pointing along the positive Z axis.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.NEG_X\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#359\">source</a><h4 class=\"code-header\">pub const <a href=\"bevy_math/struct.Dir3.html#associatedconstant.NEG_X\" class=\"constant\">NEG_X</a>: Self = _</h4></section></summary><div class=\"docblock\"><p>A unit vector pointing along the negative X axis.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.NEG_Y\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#361\">source</a><h4 class=\"code-header\">pub const <a href=\"bevy_math/struct.Dir3.html#associatedconstant.NEG_Y\" class=\"constant\">NEG_Y</a>: Self = _</h4></section></summary><div class=\"docblock\"><p>A unit vector pointing along the negative Y axis.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.NEG_Z\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#363\">source</a><h4 class=\"code-header\">pub const <a href=\"bevy_math/struct.Dir3.html#associatedconstant.NEG_Z\" class=\"constant\">NEG_Z</a>: Self = _</h4></section></summary><div class=\"docblock\"><p>A unit vector pointing along the negative Z axis.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.AXES\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#365\">source</a><h4 class=\"code-header\">pub const <a href=\"bevy_math/struct.Dir3.html#associatedconstant.AXES\" class=\"constant\">AXES</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">[Self; 3]</a> = _</h4></section></summary><div class=\"docblock\"><p>The directional axes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#371-373\">source</a><h4 class=\"code-header\">pub fn <a href=\"bevy_math/struct.Dir3.html#tymethod.new\" class=\"fn\">new</a>(value: <a class=\"struct\" href=\"bevy_math/struct.Vec3.html\" title=\"struct bevy_math::Vec3\">Vec3</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"bevy_math/enum.InvalidDirectionError.html\" title=\"enum bevy_math::InvalidDirectionError\">InvalidDirectionError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Create a direction from a finite, nonzero <a href=\"bevy_math/struct.Vec3.html\" title=\"struct bevy_math::Vec3\"><code>Vec3</code></a>, normalizing it.</p>\n<p>Returns <a href=\"bevy_math/enum.InvalidDirectionError.html\" title=\"enum bevy_math::InvalidDirectionError\"><code>Err(InvalidDirectionError)</code></a> if the length\nof the given vector is zero (or very close to zero), infinite, or <code>NaN</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#380-388\">source</a><h4 class=\"code-header\">pub fn <a href=\"bevy_math/struct.Dir3.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(value: <a class=\"struct\" href=\"bevy_math/struct.Vec3.html\" title=\"struct bevy_math::Vec3\">Vec3</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a <a href=\"bevy_math/struct.Dir3.html\" title=\"struct bevy_math::Dir3\"><code>Dir3</code></a> from a <a href=\"bevy_math/struct.Vec3.html\" title=\"struct bevy_math::Vec3\"><code>Vec3</code></a> that is already normalized.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p><code>value</code> must be normalized, i.e its length must be <code>1.0</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_and_length\" class=\"method\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#395-402\">source</a><h4 class=\"code-header\">pub fn <a href=\"bevy_math/struct.Dir3.html#tymethod.new_and_length\" class=\"fn\">new_and_length</a>(value: <a class=\"struct\" href=\"bevy_math/struct.Vec3.html\" title=\"struct bevy_math::Vec3\">Vec3</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.f32.html\">f32</a>), <a class=\"enum\" href=\"bevy_math/enum.InvalidDirectionError.html\" title=\"enum bevy_math::InvalidDirectionError\">InvalidDirectionError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Create a direction from a finite, nonzero <a href=\"bevy_math/struct.Vec3.html\" title=\"struct bevy_math::Vec3\"><code>Vec3</code></a>, normalizing it and\nalso returning its original length.</p>\n<p>Returns <a href=\"bevy_math/enum.InvalidDirectionError.html\" title=\"enum bevy_math::InvalidDirectionError\"><code>Err(InvalidDirectionError)</code></a> if the length\nof the given vector is zero (or very close to zero), infinite, or <code>NaN</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_xyz\" class=\"method\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#408-410\">source</a><h4 class=\"code-header\">pub fn <a href=\"bevy_math/struct.Dir3.html#tymethod.from_xyz\" class=\"fn\">from_xyz</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.f32.html\">f32</a>, y: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.f32.html\">f32</a>, z: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"bevy_math/enum.InvalidDirectionError.html\" title=\"enum bevy_math::InvalidDirectionError\">InvalidDirectionError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Create a direction from its <code>x</code>, <code>y</code>, and <code>z</code> components.</p>\n<p>Returns <a href=\"bevy_math/enum.InvalidDirectionError.html\" title=\"enum bevy_math::InvalidDirectionError\"><code>Err(InvalidDirectionError)</code></a> if the length\nof the vector formed by the components is zero (or very close to zero), infinite, or <code>NaN</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_vec3\" class=\"method\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#413-415\">source</a><h4 class=\"code-header\">pub const fn <a href=\"bevy_math/struct.Dir3.html#tymethod.as_vec3\" class=\"fn\">as_vec3</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bevy_math/struct.Vec3.html\" title=\"struct bevy_math::Vec3\">Vec3</a></h4></section></summary><div class=\"docblock\"><p>Returns the inner <a href=\"bevy_math/struct.Vec3.html\" title=\"struct bevy_math::Vec3\"><code>Vec3</code></a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slerp\" class=\"method\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#445-448\">source</a><h4 class=\"code-header\">pub fn <a href=\"bevy_math/struct.Dir3.html#tymethod.slerp\" class=\"fn\">slerp</a>(self, rhs: Self, s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.f32.html\">f32</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Performs a spherical linear interpolation between <code>self</code> and <code>rhs</code>\nbased on the value <code>s</code>.</p>\n<p>This corresponds to interpolating between the two directions at a constant angular velocity.</p>\n<p>When <code>s == 0.0</code>, the result will be equal to <code>self</code>.\nWhen <code>s == 1.0</code>, the result will be equal to <code>rhs</code>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>dir1 = Dir3::X;\n<span class=\"kw\">let </span>dir2 = Dir3::Y;\n\n<span class=\"kw\">let </span>result1 = dir1.slerp(dir2, <span class=\"number\">1.0 </span>/ <span class=\"number\">3.0</span>);\n<span class=\"macro\">assert_relative_eq!</span>(\n    result1,\n    Dir3::from_xyz(<span class=\"number\">0.75_f32</span>.sqrt(), <span class=\"number\">0.5</span>, <span class=\"number\">0.0</span>).unwrap(),\n    epsilon = <span class=\"number\">0.000001\n</span>);\n\n<span class=\"kw\">let </span>result2 = dir1.slerp(dir2, <span class=\"number\">0.5</span>);\n<span class=\"macro\">assert_relative_eq!</span>(result2, Dir3::from_xyz(<span class=\"number\">0.5_f32</span>.sqrt(), <span class=\"number\">0.5_f32</span>.sqrt(), <span class=\"number\">0.0</span>).unwrap());</code></pre></div>\n</div></details></div></details>",0,"bevy_math::direction::Direction3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CDir3A%3E-for-Dir3\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#666-670\">source</a><a href=\"#impl-From%3CDir3A%3E-for-Dir3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"bevy_math/struct.Dir3A.html\" title=\"struct bevy_math::Dir3A\">Dir3A</a>&gt; for <a class=\"struct\" href=\"bevy_math/struct.Dir3.html\" title=\"struct bevy_math::Dir3\">Dir3</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#667-669\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"bevy_math/struct.Dir3A.html\" title=\"struct bevy_math::Dir3A\">Dir3A</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Dir3A>","bevy_math::direction::Direction3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromReflect-for-Dir3\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#impl-FromReflect-for-Dir3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy_reflect/from_reflect/trait.FromReflect.html\" title=\"trait bevy_reflect::from_reflect::FromReflect\">FromReflect</a> for <a class=\"struct\" href=\"bevy_math/struct.Dir3.html\" title=\"struct bevy_math::Dir3\">Dir3</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"bevy_math/struct.Vec3.html\" title=\"struct bevy_math::Vec3\">Vec3</a>: <a class=\"trait\" href=\"bevy_reflect/from_reflect/trait.FromReflect.html\" title=\"trait bevy_reflect::from_reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy_reflect/type_path/trait.TypePath.html\" title=\"trait bevy_reflect::type_path::TypePath\">TypePath</a> + RegisterForReflection,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.from_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/from_reflect/trait.FromReflect.html#tymethod.from_reflect\" class=\"fn\">from_reflect</a>(reflect: &amp;dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Constructs a concrete instance of <code>Self</code> from a reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_from_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/from_reflect.rs.html#42\">source</a><a href=\"#method.take_from_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/from_reflect/trait.FromReflect.html#method.take_from_reflect\" class=\"fn\">take_from_reflect</a>(\n    reflect: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to downcast the given value to <code>Self</code> using,\nconstructing the value using <a href=\"bevy_reflect/from_reflect/trait.FromReflect.html#tymethod.from_reflect\" title=\"associated function bevy_reflect::from_reflect::FromReflect::from_reflect::from_reflect\"><code>from_reflect</code></a> if that fails. <a href=\"bevy_reflect/from_reflect/trait.FromReflect.html#method.take_from_reflect\">Read more</a></div></details></div></details>","FromReflect","bevy_math::direction::Direction3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromRng-for-Dir3\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_math/sampling/standard.rs.html#76\">source</a><a href=\"#impl-FromRng-for-Dir3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy_math/sampling/standard/trait.FromRng.html\" title=\"trait bevy_math::sampling::standard::FromRng\">FromRng</a> for <a class=\"struct\" href=\"bevy_math/struct.Dir3.html\" title=\"struct bevy_math::Dir3\">Dir3</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_rng\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/sampling/standard.rs.html#51-53\">source</a><a href=\"#method.from_rng\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_math/sampling/standard/trait.FromRng.html#method.from_rng\" class=\"fn\">from_rng</a>&lt;R: <a class=\"trait\" href=\"rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; Self</h4></section></summary><div class='docblock'>Construct a value of this type uniformly at random using <code>rng</code> as the source of randomness.</div></details></div></details>","FromRng","bevy_math::direction::Direction3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetTypeRegistration-for-Dir3\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#impl-GetTypeRegistration-for-Dir3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy_reflect/type_registry/trait.GetTypeRegistration.html\" title=\"trait bevy_reflect::type_registry::GetTypeRegistration\">GetTypeRegistration</a> for <a class=\"struct\" href=\"bevy_math/struct.Dir3.html\" title=\"struct bevy_math::Dir3\">Dir3</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"bevy_math/struct.Vec3.html\" title=\"struct bevy_math::Vec3\">Vec3</a>: <a class=\"trait\" href=\"bevy_reflect/from_reflect/trait.FromReflect.html\" title=\"trait bevy_reflect::from_reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy_reflect/type_path/trait.TypePath.html\" title=\"trait bevy_reflect::type_path::TypePath\">TypePath</a> + RegisterForReflection,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_type_registration\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.get_type_registration\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/type_registry/trait.GetTypeRegistration.html#tymethod.get_type_registration\" class=\"fn\">get_type_registration</a>() -&gt; <a class=\"struct\" href=\"bevy_reflect/type_registry/struct.TypeRegistration.html\" title=\"struct bevy_reflect::type_registry::TypeRegistration\">TypeRegistration</a></h4></section></summary><div class='docblock'>Returns the default <a href=\"bevy_reflect/type_registry/struct.TypeRegistration.html\" title=\"struct bevy_reflect::type_registry::TypeRegistration\"><code>TypeRegistration</code></a> for this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_type_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.register_type_dependencies\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/type_registry/trait.GetTypeRegistration.html#method.register_type_dependencies\" class=\"fn\">register_type_dependencies</a>(registry: &amp;mut <a class=\"struct\" href=\"bevy_reflect/type_registry/struct.TypeRegistry.html\" title=\"struct bevy_reflect::type_registry::TypeRegistry\">TypeRegistry</a>)</h4></section></summary><div class='docblock'>Registers other types needed by this type. <a href=\"bevy_reflect/type_registry/trait.GetTypeRegistration.html#method.register_type_dependencies\">Read more</a></div></details></div></details>","GetTypeRegistration","bevy_math::direction::Direction3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3Cf32%3E-for-Dir3\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#479-484\">source</a><a href=\"#impl-Mul%3Cf32%3E-for-Dir3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"struct\" href=\"bevy_math/struct.Dir3.html\" title=\"struct bevy_math::Dir3\">Dir3</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"bevy_math/struct.Vec3.html\" title=\"struct bevy_math::Vec3\">Vec3</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#481-483\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.f32.html\">f32</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<f32>","bevy_math::direction::Direction3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-Dir3\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#472-477\">source</a><a href=\"#impl-Neg-for-Dir3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"bevy_math/struct.Dir3.html\" title=\"struct bevy_math::Dir3\">Dir3</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"bevy_math/struct.Dir3.html\" title=\"struct bevy_math::Dir3\">Dir3</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#474-476\">source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.79.0/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","bevy_math::direction::Direction3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Dir3\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#340\">source</a><a href=\"#impl-PartialEq-for-Dir3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"bevy_math/struct.Dir3.html\" title=\"struct bevy_math::Dir3\">Dir3</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#340\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"bevy_math/struct.Dir3.html\" title=\"struct bevy_math::Dir3\">Dir3</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.79.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","bevy_math::direction::Direction3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reflect-for-Dir3\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#impl-Reflect-for-Dir3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a> for <a class=\"struct\" href=\"bevy_math/struct.Dir3.html\" title=\"struct bevy_math::Dir3\">Dir3</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"bevy_math/struct.Vec3.html\" title=\"struct bevy_math::Vec3\">Vec3</a>: <a class=\"trait\" href=\"bevy_reflect/from_reflect/trait.FromReflect.html\" title=\"trait bevy_reflect::from_reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy_reflect/type_path/trait.TypePath.html\" title=\"trait bevy_reflect::type_path::TypePath\">TypePath</a> + RegisterForReflection,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_represented_type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.get_represented_type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.get_represented_type_info\" class=\"fn\">get_represented_type_info</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"enum\" href=\"bevy_reflect/type_info/enum.TypeInfo.html\" title=\"enum bevy_reflect::type_info::TypeInfo\">TypeInfo</a>&gt;</h4></section></summary><div class='docblock'>Returns the <a href=\"bevy_reflect/type_info/enum.TypeInfo.html\" title=\"enum bevy_reflect::type_info::TypeInfo\"><code>TypeInfo</code></a> of the type <em>represented</em> by this value. <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.get_represented_type_info\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.into_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.into_any\" class=\"fn\">into_any</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;Self&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a>&gt;</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>Box&lt;dyn Any&gt;</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.as_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.as_any\" class=\"fn\">as_any</a>(&amp;self) -&gt; &amp;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a></h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>&amp;dyn Any</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.as_any_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.as_any_mut\" class=\"fn\">as_any_mut</a>(&amp;mut self) -&gt; &amp;mut dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a></h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>&amp;mut dyn Any</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.into_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.into_reflect\" class=\"fn\">into_reflect</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;Self&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a>&gt;</h4></section></summary><div class='docblock'>Casts this type to a boxed reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.as_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.as_reflect\" class=\"fn\">as_reflect</a>(&amp;self) -&gt; &amp;dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a></h4></section></summary><div class='docblock'>Casts this type to a reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_reflect_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.as_reflect_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.as_reflect_mut\" class=\"fn\">as_reflect_mut</a>(&amp;mut self) -&gt; &amp;mut dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a></h4></section></summary><div class='docblock'>Casts this type to a mutable reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.clone_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.clone_value\" class=\"fn\">clone_value</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a>&gt;</h4></section></summary><div class='docblock'>Clones the value as a <code>Reflect</code> trait object. <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.clone_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Performs a type-checked assignment of a reflected value to this value. <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.set\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.try_apply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.try_apply\" class=\"fn\">try_apply</a>(&amp;mut self, value: &amp;dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"bevy_reflect/reflect/enum.ApplyError.html\" title=\"enum bevy_reflect::reflect::ApplyError\">ApplyError</a>&gt;</h4></section></summary><div class='docblock'>Tries to <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.apply\" title=\"method bevy_reflect::reflect::Reflect::apply\"><code>apply</code></a> a reflected value to this value. <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.try_apply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.reflect_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.reflect_kind\" class=\"fn\">reflect_kind</a>(&amp;self) -&gt; <a class=\"enum\" href=\"bevy_reflect/reflect/enum.ReflectKind.html\" title=\"enum bevy_reflect::reflect::ReflectKind\">ReflectKind</a></h4></section></summary><div class='docblock'>Returns a zero-sized enumeration of “kinds” of type. <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.reflect_kind\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.reflect_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.reflect_ref\" class=\"fn\">reflect_ref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"bevy_reflect/reflect/enum.ReflectRef.html\" title=\"enum bevy_reflect::reflect::ReflectRef\">ReflectRef</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Returns an immutable enumeration of “kinds” of type. <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.reflect_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.reflect_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.reflect_mut\" class=\"fn\">reflect_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"bevy_reflect/reflect/enum.ReflectMut.html\" title=\"enum bevy_reflect::reflect::ReflectMut\">ReflectMut</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Returns a mutable enumeration of “kinds” of type. <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.reflect_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.reflect_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.reflect_owned\" class=\"fn\">reflect_owned</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;Self&gt;) -&gt; <a class=\"enum\" href=\"bevy_reflect/reflect/enum.ReflectOwned.html\" title=\"enum bevy_reflect::reflect::ReflectOwned\">ReflectOwned</a></h4></section></summary><div class='docblock'>Returns an owned enumeration of “kinds” of type. <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.reflect_owned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_partial_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.reflect_partial_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.reflect_partial_eq\" class=\"fn\">reflect_partial_eq</a>(&amp;self, value: &amp;dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>&gt;</h4></section></summary><div class='docblock'>Returns a “partial equality” comparison result. <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.reflect_partial_eq\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.debug\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.debug\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.debug\" class=\"fn\">debug</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.79.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Debug formatter for the value. <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.debug\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#262\">source</a><a href=\"#method.apply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.apply\" class=\"fn\">apply</a>(&amp;mut self, value: &amp;(dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a> + 'static))</h4></section></summary><div class='docblock'>Applies a reflected value to this value. <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.apply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#317\">source</a><a href=\"#method.reflect_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.reflect_hash\" class=\"fn\">reflect_hash</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Returns a hash of the value (which includes the type). <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.reflect_hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serializable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#351\">source</a><a href=\"#method.serializable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.serializable\" class=\"fn\">serializable</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"bevy_reflect/serde/ser/enum.Serializable.html\" title=\"enum bevy_reflect::serde::ser::Serializable\">Serializable</a>&lt;'_&gt;&gt;</h4></section></summary><div class='docblock'>Returns a serializable version of the value. <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.serializable\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_dynamic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#367\">source</a><a href=\"#method.is_dynamic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.is_dynamic\" class=\"fn\">is_dynamic</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Indicates whether or not this type is a <em>dynamic</em> type. <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.is_dynamic\">Read more</a></div></details></div></details>","Reflect","bevy_math::direction::Direction3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CVec3%3E-for-Dir3\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#451-457\">source</a><a href=\"#impl-TryFrom%3CVec3%3E-for-Dir3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"bevy_math/struct.Vec3.html\" title=\"struct bevy_math::Vec3\">Vec3</a>&gt; for <a class=\"struct\" href=\"bevy_math/struct.Dir3.html\" title=\"struct bevy_math::Dir3\">Dir3</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"bevy_math/enum.InvalidDirectionError.html\" title=\"enum bevy_math::InvalidDirectionError\">InvalidDirectionError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#454-456\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: <a class=\"struct\" href=\"bevy_math/struct.Vec3.html\" title=\"struct bevy_math::Vec3\">Vec3</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<Vec3>","bevy_math::direction::Direction3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TupleStruct-for-Dir3\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#impl-TupleStruct-for-Dir3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy_reflect/tuple_struct/trait.TupleStruct.html\" title=\"trait bevy_reflect::tuple_struct::TupleStruct\">TupleStruct</a> for <a class=\"struct\" href=\"bevy_math/struct.Dir3.html\" title=\"struct bevy_math::Dir3\">Dir3</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"bevy_math/struct.Vec3.html\" title=\"struct bevy_math::Vec3\">Vec3</a>: <a class=\"trait\" href=\"bevy_reflect/from_reflect/trait.FromReflect.html\" title=\"trait bevy_reflect::from_reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy_reflect/type_path/trait.TypePath.html\" title=\"trait bevy_reflect::type_path::TypePath\">TypePath</a> + RegisterForReflection,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.field\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.field\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/tuple_struct/trait.TupleStruct.html#tymethod.field\" class=\"fn\">field</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a>&gt;</h4></section></summary><div class='docblock'>Returns a reference to the value of the field with index <code>index</code> as a\n<code>&amp;dyn Reflect</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.field_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.field_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/tuple_struct/trait.TupleStruct.html#tymethod.field_mut\" class=\"fn\">field_mut</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a>&gt;</h4></section></summary><div class='docblock'>Returns a mutable reference to the value of the field with index <code>index</code>\nas a <code>&amp;mut dyn Reflect</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.field_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.field_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/tuple_struct/trait.TupleStruct.html#tymethod.field_len\" class=\"fn\">field_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the number of fields in the tuple struct.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_fields\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.iter_fields\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/tuple_struct/trait.TupleStruct.html#tymethod.iter_fields\" class=\"fn\">iter_fields</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bevy_reflect/tuple_struct/struct.TupleStructFieldIter.html\" title=\"struct bevy_reflect::tuple_struct::TupleStructFieldIter\">TupleStructFieldIter</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Returns an iterator over the values of the tuple struct’s fields.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_dynamic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.clone_dynamic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/tuple_struct/trait.TupleStruct.html#tymethod.clone_dynamic\" class=\"fn\">clone_dynamic</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bevy_reflect/tuple_struct/struct.DynamicTupleStruct.html\" title=\"struct bevy_reflect::tuple_struct::DynamicTupleStruct\">DynamicTupleStruct</a></h4></section></summary><div class='docblock'>Clones the struct into a <a href=\"bevy_reflect/tuple_struct/struct.DynamicTupleStruct.html\" title=\"struct bevy_reflect::tuple_struct::DynamicTupleStruct\"><code>DynamicTupleStruct</code></a>.</div></details></div></details>","TupleStruct","bevy_math::direction::Direction3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypePath-for-Dir3\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#impl-TypePath-for-Dir3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy_reflect/type_path/trait.TypePath.html\" title=\"trait bevy_reflect::type_path::TypePath\">TypePath</a> for <a class=\"struct\" href=\"bevy_math/struct.Dir3.html\" title=\"struct bevy_math::Dir3\">Dir3</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.type_path\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/type_path/trait.TypePath.html#tymethod.type_path\" class=\"fn\">type_path</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Returns the fully qualified path of the underlying type. <a href=\"bevy_reflect/type_path/trait.TypePath.html#tymethod.type_path\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.short_type_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.short_type_path\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/type_path/trait.TypePath.html#tymethod.short_type_path\" class=\"fn\">short_type_path</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Returns a short, pretty-print enabled path to the type. <a href=\"bevy_reflect/type_path/trait.TypePath.html#tymethod.short_type_path\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_ident\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.type_ident\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/type_path/trait.TypePath.html#method.type_ident\" class=\"fn\">type_ident</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the name of the type, or <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy_reflect/type_path/trait.TypePath.html#anonymity\" title=\"trait bevy_reflect::type_path::TypePath\">anonymous</a>. <a href=\"bevy_reflect/type_path/trait.TypePath.html#method.type_ident\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.crate_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/type_path/trait.TypePath.html#method.crate_name\" class=\"fn\">crate_name</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the name of the crate the type is in, or <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy_reflect/type_path/trait.TypePath.html#anonymity\" title=\"trait bevy_reflect::type_path::TypePath\">anonymous</a>. <a href=\"bevy_reflect/type_path/trait.TypePath.html#method.crate_name\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.module_path\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/type_path/trait.TypePath.html#method.module_path\" class=\"fn\">module_path</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the path to the module the type is in, or <a href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy_reflect/type_path/trait.TypePath.html#anonymity\" title=\"trait bevy_reflect::type_path::TypePath\">anonymous</a>. <a href=\"bevy_reflect/type_path/trait.TypePath.html#method.module_path\">Read more</a></div></details></div></details>","TypePath","bevy_math::direction::Direction3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Typed-for-Dir3\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#impl-Typed-for-Dir3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy_reflect/type_info/trait.Typed.html\" title=\"trait bevy_reflect::type_info::Typed\">Typed</a> for <a class=\"struct\" href=\"bevy_math/struct.Dir3.html\" title=\"struct bevy_math::Dir3\">Dir3</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"struct\" href=\"bevy_math/struct.Vec3.html\" title=\"struct bevy_math::Vec3\">Vec3</a>: <a class=\"trait\" href=\"bevy_reflect/from_reflect/trait.FromReflect.html\" title=\"trait bevy_reflect::from_reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy_reflect/type_path/trait.TypePath.html\" title=\"trait bevy_reflect::type_path::TypePath\">TypePath</a> + RegisterForReflection,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#342\">source</a><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/type_info/trait.Typed.html#tymethod.type_info\" class=\"fn\">type_info</a>() -&gt; &amp;'static <a class=\"enum\" href=\"bevy_reflect/type_info/enum.TypeInfo.html\" title=\"enum bevy_reflect::type_info::TypeInfo\">TypeInfo</a></h4></section></summary><div class='docblock'>Returns the compile-time <a href=\"bevy_reflect/type_info/enum.TypeInfo.html\" title=\"enum bevy_reflect::type_info::TypeInfo\">info</a> for the underlying type.</div></details></div></details>","Typed","bevy_math::direction::Direction3d"],["<section id=\"impl-Copy-for-Dir3\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#340\">source</a><a href=\"#impl-Copy-for-Dir3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"bevy_math/struct.Dir3.html\" title=\"struct bevy_math::Dir3\">Dir3</a></h3></section>","Copy","bevy_math::direction::Direction3d"],["<section id=\"impl-Primitive3d-for-Dir3\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#349\">source</a><a href=\"#impl-Primitive3d-for-Dir3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy_math/primitives/trait.Primitive3d.html\" title=\"trait bevy_math::primitives::Primitive3d\">Primitive3d</a> for <a class=\"struct\" href=\"bevy_math/struct.Dir3.html\" title=\"struct bevy_math::Dir3\">Dir3</a></h3></section>","Primitive3d","bevy_math::direction::Direction3d"],["<section id=\"impl-StructuralPartialEq-for-Dir3\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_math/direction.rs.html#340\">source</a><a href=\"#impl-StructuralPartialEq-for-Dir3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"bevy_math/struct.Dir3.html\" title=\"struct bevy_math::Dir3\">Dir3</a></h3></section>","StructuralPartialEq","bevy_math::direction::Direction3d"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()