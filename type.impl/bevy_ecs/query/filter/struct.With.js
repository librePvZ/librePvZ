(function() {var type_impls = {
"bevy_render":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryFilter-for-With%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#202\">source</a><a href=\"#impl-QueryFilter-for-With%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy_ecs/query/filter/trait.QueryFilter.html\" title=\"trait bevy_ecs::query::filter::QueryFilter\">QueryFilter</a> for <a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy_ecs/component/trait.Component.html\" title=\"trait bevy_ecs::component::Component\">Component</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.IS_ARCHETYPAL\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#203\">source</a><a href=\"#associatedconstant.IS_ARCHETYPAL\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bevy_ecs/query/filter/trait.QueryFilter.html#associatedconstant.IS_ARCHETYPAL\" class=\"constant\">IS_ARCHETYPAL</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a> = true</h4></section></summary><div class='docblock'>Returns true if (and only if) this Filter relies strictly on archetypes to limit which\ncomponents are accessed by the Query. <a href=\"bevy_ecs/query/filter/trait.QueryFilter.html#associatedconstant.IS_ARCHETYPAL\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter_fetch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#206-210\">source</a><a href=\"#method.filter_fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy_ecs/query/filter/trait.QueryFilter.html#tymethod.filter_fetch\" class=\"fn\">filter_fetch</a>(\n    _fetch: &amp;mut &lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy_ecs::query::world_query::WorldQuery::Fetch\">Fetch</a>&lt;'_&gt;,\n    _entity: <a class=\"struct\" href=\"bevy_ecs/entity/struct.Entity.html\" title=\"struct bevy_ecs::entity::Entity\">Entity</a>,\n    _table_row: <a class=\"struct\" href=\"bevy_ecs/storage/table/struct.TableRow.html\" title=\"struct bevy_ecs::storage::table::TableRow\">TableRow</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if the provided <a href=\"bevy_ecs/entity/struct.Entity.html\" title=\"struct bevy_ecs::entity::Entity\"><code>Entity</code></a> and <a href=\"bevy_ecs/storage/table/struct.TableRow.html\" title=\"struct bevy_ecs::storage::table::TableRow\"><code>TableRow</code></a> should be included in the query results.\nIf false, the entity will be skipped. <a href=\"bevy_ecs/query/filter/trait.QueryFilter.html#tymethod.filter_fetch\">Read more</a></div></details></div></details>","QueryFilter","bevy_render::view::visibility::WithMesh"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WorldQuery-for-With%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#138\">source</a><a href=\"#impl-WorldQuery-for-With%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a> for <a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy_ecs/component/trait.Component.html\" title=\"trait bevy_ecs::component::Component\">Component</a>,</div></h3></section></summary><div class=\"docblock\"><p>SAFETY:\n<code>update_component_access</code> does not add any accesses.\nThis is sound because <code>fetch</code> does not access any components.\n<code>update_component_access</code> adds a <code>With</code> filter for <code>T</code>.\nThis is sound because <code>matches_component_set</code> returns whether the set contains the component.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" class=\"associatedtype\">Item</a>&lt;'w&gt; = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The item returned by this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a>\nFor <code>QueryData</code> this will be the item returned by the query.\nFor <code>QueryFilter</code> this will be either <code>()</code>, or a <code>bool</code> indicating whether the entity should be included\nor a tuple of such things.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Fetch\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Fetch\" class=\"associatedtype\">Fetch</a>&lt;'w&gt; = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>Per archetype/table state used by this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a> to fetch <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::Item\"><code>Self::Item</code></a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.State\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.State\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.State\" class=\"associatedtype\">State</a> = <a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a></h4></section></summary><div class='docblock'>State used to construct a <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::Fetch\"><code>Self::Fetch</code></a>. This will be cached inside <a href=\"bevy_ecs/query/state/struct.QueryState.html\" title=\"struct bevy_ecs::query::state::QueryState\"><code>QueryState</code></a>,\nso it is best to move as much data / computation here as possible to reduce the cost of\nconstructing <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::Fetch\"><code>Self::Fetch</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#143\">source</a><a href=\"#method.shrink\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.shrink\" class=\"fn\">shrink</a>&lt;'wlong, 'wshort&gt;(\n    _: &lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy_ecs::query::world_query::WorldQuery::Item\">Item</a>&lt;'wlong&gt;\n) -&gt; &lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy_ecs::query::world_query::WorldQuery::Item\">Item</a>&lt;'wshort&gt;<div class=\"where\">where\n    'wlong: 'wshort,</div></h4></section></summary><div class='docblock'>This function manually implements subtyping for the query items.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init_fetch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#146-151\">source</a><a href=\"#method.init_fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.init_fetch\" class=\"fn\">init_fetch</a>(\n    _world: <a class=\"struct\" href=\"bevy_ecs/world/unsafe_world_cell/struct.UnsafeWorldCell.html\" title=\"struct bevy_ecs::world::unsafe_world_cell::UnsafeWorldCell\">UnsafeWorldCell</a>&lt;'_&gt;,\n    _state: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>,\n    _last_run: <a class=\"struct\" href=\"bevy_ecs/component/struct.Tick.html\" title=\"struct bevy_ecs::component::Tick\">Tick</a>,\n    _this_run: <a class=\"struct\" href=\"bevy_ecs/component/struct.Tick.html\" title=\"struct bevy_ecs::component::Tick\">Tick</a>\n)</h4></section></summary><div class='docblock'>Creates a new instance of this fetch. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.init_fetch\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.IS_DENSE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#154\">source</a><a href=\"#associatedconstant.IS_DENSE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedconstant.IS_DENSE\" class=\"constant\">IS_DENSE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a> = _</h4></section></summary><div class='docblock'>Returns true if (and only if) every table of every archetype matched by this fetch contains\nall of the matched components. This is used to select a more efficient “table iterator”\nfor “dense” queries. If this returns true, <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_table\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::set_table\"><code>WorldQuery::set_table</code></a> must be used before\n<a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.fetch\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::fetch\"><code>WorldQuery::fetch</code></a> can be called for iterators. If this returns false,\n<a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_archetype\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::set_archetype\"><code>WorldQuery::set_archetype</code></a> must be used before <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.fetch\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::fetch\"><code>WorldQuery::fetch</code></a> can be called for\niterators.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_archetype\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#162-167\">source</a><a href=\"#method.set_archetype\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_archetype\" class=\"fn\">set_archetype</a>(\n    _fetch: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>,\n    _state: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>,\n    _archetype: &amp;<a class=\"struct\" href=\"bevy_ecs/archetype/struct.Archetype.html\" title=\"struct bevy_ecs::archetype::Archetype\">Archetype</a>,\n    _table: &amp;<a class=\"struct\" href=\"bevy_ecs/storage/table/struct.Table.html\" title=\"struct bevy_ecs::storage::table::Table\">Table</a>\n)</h4></section></summary><div class='docblock'>Adjusts internal state to account for the next <a href=\"bevy_ecs/archetype/struct.Archetype.html\" title=\"struct bevy_ecs::archetype::Archetype\"><code>Archetype</code></a>. This will always be called on\narchetypes that match this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a>. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_archetype\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_table\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#171\">source</a><a href=\"#method.set_table\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_table\" class=\"fn\">set_table</a>(_fetch: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, _state: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>, _table: &amp;<a class=\"struct\" href=\"bevy_ecs/storage/table/struct.Table.html\" title=\"struct bevy_ecs::storage::table::Table\">Table</a>)</h4></section></summary><div class='docblock'>Adjusts internal state to account for the next <a href=\"bevy_ecs/storage/table/struct.Table.html\" title=\"struct bevy_ecs::storage::table::Table\"><code>Table</code></a>. This will always be called on tables\nthat match this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a>. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_table\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fetch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#174-178\">source</a><a href=\"#method.fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.fetch\" class=\"fn\">fetch</a>&lt;'w&gt;(\n    _fetch: &amp;mut &lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy_ecs::query::world_query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;,\n    _entity: <a class=\"struct\" href=\"bevy_ecs/entity/struct.Entity.html\" title=\"struct bevy_ecs::entity::Entity\">Entity</a>,\n    _table_row: <a class=\"struct\" href=\"bevy_ecs/storage/table/struct.TableRow.html\" title=\"struct bevy_ecs::storage::table::TableRow\">TableRow</a>\n) -&gt; &lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy_ecs::query::world_query::WorldQuery::Item\">Item</a>&lt;'w&gt;</h4></section></summary><div class='docblock'>Fetch <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::Item\"><code>Self::Item</code></a> for either the given <code>entity</code> in the current <a href=\"bevy_ecs/storage/table/struct.Table.html\" title=\"struct bevy_ecs::storage::table::Table\"><code>Table</code></a>,\nor for the given <code>entity</code> in the current <a href=\"bevy_ecs/archetype/struct.Archetype.html\" title=\"struct bevy_ecs::archetype::Archetype\"><code>Archetype</code></a>. This must always be called after\n<a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_table\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::set_table\"><code>WorldQuery::set_table</code></a> with a <code>table_row</code> in the range of the current <a href=\"bevy_ecs/storage/table/struct.Table.html\" title=\"struct bevy_ecs::storage::table::Table\"><code>Table</code></a> or after\n<a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_archetype\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::set_archetype\"><code>WorldQuery::set_archetype</code></a>  with a <code>entity</code> in the current archetype. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.fetch\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_component_access\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#182\">source</a><a href=\"#method.update_component_access\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.update_component_access\" class=\"fn\">update_component_access</a>(\n    _: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>,\n    access: &amp;mut <a class=\"struct\" href=\"bevy_ecs/query/access/struct.FilteredAccess.html\" title=\"struct bevy_ecs::query::access::FilteredAccess\">FilteredAccess</a>&lt;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>&gt;\n)</h4></section></summary><div class='docblock'>Adds any component accesses used by this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a> to <code>access</code>. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.update_component_access\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#186\">source</a><a href=\"#method.init_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.init_state\" class=\"fn\">init_state</a>(world: &amp;mut <a class=\"struct\" href=\"bevy_ecs/world/struct.World.html\" title=\"struct bevy_ecs::world::World\">World</a>) -&gt; <a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a></h4></section></summary><div class='docblock'>Creates and initializes a <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.State\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::State\"><code>State</code></a> for this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a> type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#190\">source</a><a href=\"#method.get_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.get_state\" class=\"fn\">get_state</a>(components: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.Components.html\" title=\"struct bevy_ecs::component::Components\">Components</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy_ecs::query::world_query::WorldQuery::State\">State</a>&gt;</h4></section></summary><div class='docblock'>Attempts to initialize a <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.State\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::State\"><code>State</code></a> for this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a> type using read-only\naccess to <a href=\"bevy_ecs/component/struct.Components.html\" title=\"struct bevy_ecs::component::Components\"><code>Components</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.matches_component_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#194-197\">source</a><a href=\"#method.matches_component_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.matches_component_set\" class=\"fn\">matches_component_set</a>(\n    _: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>,\n    set_contains_id: &amp;impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if this query matches a set of components. Otherwise, returns <code>false</code>. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.matches_component_set\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_access\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#105\">source</a><a href=\"#method.set_access\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#method.set_access\" class=\"fn\">set_access</a>(_state: &amp;mut Self::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy_ecs::query::world_query::WorldQuery::State\">State</a>, _access: &amp;<a class=\"struct\" href=\"bevy_ecs/query/access/struct.FilteredAccess.html\" title=\"struct bevy_ecs::query::access::FilteredAccess\">FilteredAccess</a>&lt;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>&gt;)</h4></section></summary><div class='docblock'>Sets available accesses for implementors with dynamic access such as <a href=\"bevy_ecs/world/entity_ref/struct.FilteredEntityRef.html\" title=\"struct bevy_ecs::world::entity_ref::FilteredEntityRef\"><code>FilteredEntityRef</code></a>\nor <a href=\"bevy_ecs/world/entity_ref/struct.FilteredEntityMut.html\" title=\"struct bevy_ecs::world::entity_ref::FilteredEntityMut\"><code>FilteredEntityMut</code></a>. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#method.set_access\">Read more</a></div></details></div></details>","WorldQuery","bevy_render::view::visibility::WithMesh"],["<section id=\"impl-ArchetypeFilter-for-With%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#956\">source</a><a href=\"#impl-ArchetypeFilter-for-With%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy_ecs/query/filter/trait.ArchetypeFilter.html\" title=\"trait bevy_ecs::query::filter::ArchetypeFilter\">ArchetypeFilter</a> for <a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy_ecs/component/trait.Component.html\" title=\"trait bevy_ecs::component::Component\">Component</a>,</div></h3></section>","ArchetypeFilter","bevy_render::view::visibility::WithMesh"]],
"bevy_sprite":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryFilter-for-With%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#202\">source</a><a href=\"#impl-QueryFilter-for-With%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy_ecs/query/filter/trait.QueryFilter.html\" title=\"trait bevy_ecs::query::filter::QueryFilter\">QueryFilter</a> for <a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy_ecs/component/trait.Component.html\" title=\"trait bevy_ecs::component::Component\">Component</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.IS_ARCHETYPAL\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#203\">source</a><a href=\"#associatedconstant.IS_ARCHETYPAL\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bevy_ecs/query/filter/trait.QueryFilter.html#associatedconstant.IS_ARCHETYPAL\" class=\"constant\">IS_ARCHETYPAL</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a> = true</h4></section></summary><div class='docblock'>Returns true if (and only if) this Filter relies strictly on archetypes to limit which\ncomponents are accessed by the Query. <a href=\"bevy_ecs/query/filter/trait.QueryFilter.html#associatedconstant.IS_ARCHETYPAL\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter_fetch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#206-210\">source</a><a href=\"#method.filter_fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy_ecs/query/filter/trait.QueryFilter.html#tymethod.filter_fetch\" class=\"fn\">filter_fetch</a>(\n    _fetch: &amp;mut &lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy_ecs::query::world_query::WorldQuery::Fetch\">Fetch</a>&lt;'_&gt;,\n    _entity: <a class=\"struct\" href=\"bevy_ecs/entity/struct.Entity.html\" title=\"struct bevy_ecs::entity::Entity\">Entity</a>,\n    _table_row: <a class=\"struct\" href=\"bevy_ecs/storage/table/struct.TableRow.html\" title=\"struct bevy_ecs::storage::table::TableRow\">TableRow</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if the provided <a href=\"bevy_ecs/entity/struct.Entity.html\" title=\"struct bevy_ecs::entity::Entity\"><code>Entity</code></a> and <a href=\"bevy_ecs/storage/table/struct.TableRow.html\" title=\"struct bevy_ecs::storage::table::TableRow\"><code>TableRow</code></a> should be included in the query results.\nIf false, the entity will be skipped. <a href=\"bevy_ecs/query/filter/trait.QueryFilter.html#tymethod.filter_fetch\">Read more</a></div></details></div></details>","QueryFilter","bevy_sprite::WithMesh2d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WorldQuery-for-With%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#138\">source</a><a href=\"#impl-WorldQuery-for-With%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a> for <a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy_ecs/component/trait.Component.html\" title=\"trait bevy_ecs::component::Component\">Component</a>,</div></h3></section></summary><div class=\"docblock\"><p>SAFETY:\n<code>update_component_access</code> does not add any accesses.\nThis is sound because <code>fetch</code> does not access any components.\n<code>update_component_access</code> adds a <code>With</code> filter for <code>T</code>.\nThis is sound because <code>matches_component_set</code> returns whether the set contains the component.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" class=\"associatedtype\">Item</a>&lt;'w&gt; = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The item returned by this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a>\nFor <code>QueryData</code> this will be the item returned by the query.\nFor <code>QueryFilter</code> this will be either <code>()</code>, or a <code>bool</code> indicating whether the entity should be included\nor a tuple of such things.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Fetch\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Fetch\" class=\"associatedtype\">Fetch</a>&lt;'w&gt; = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>Per archetype/table state used by this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a> to fetch <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::Item\"><code>Self::Item</code></a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.State\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.State\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.State\" class=\"associatedtype\">State</a> = <a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a></h4></section></summary><div class='docblock'>State used to construct a <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::Fetch\"><code>Self::Fetch</code></a>. This will be cached inside <a href=\"bevy_ecs/query/state/struct.QueryState.html\" title=\"struct bevy_ecs::query::state::QueryState\"><code>QueryState</code></a>,\nso it is best to move as much data / computation here as possible to reduce the cost of\nconstructing <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::Fetch\"><code>Self::Fetch</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#143\">source</a><a href=\"#method.shrink\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.shrink\" class=\"fn\">shrink</a>&lt;'wlong, 'wshort&gt;(\n    _: &lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy_ecs::query::world_query::WorldQuery::Item\">Item</a>&lt;'wlong&gt;\n) -&gt; &lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy_ecs::query::world_query::WorldQuery::Item\">Item</a>&lt;'wshort&gt;<div class=\"where\">where\n    'wlong: 'wshort,</div></h4></section></summary><div class='docblock'>This function manually implements subtyping for the query items.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init_fetch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#146-151\">source</a><a href=\"#method.init_fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.init_fetch\" class=\"fn\">init_fetch</a>(\n    _world: <a class=\"struct\" href=\"bevy_ecs/world/unsafe_world_cell/struct.UnsafeWorldCell.html\" title=\"struct bevy_ecs::world::unsafe_world_cell::UnsafeWorldCell\">UnsafeWorldCell</a>&lt;'_&gt;,\n    _state: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>,\n    _last_run: <a class=\"struct\" href=\"bevy_ecs/component/struct.Tick.html\" title=\"struct bevy_ecs::component::Tick\">Tick</a>,\n    _this_run: <a class=\"struct\" href=\"bevy_ecs/component/struct.Tick.html\" title=\"struct bevy_ecs::component::Tick\">Tick</a>\n)</h4></section></summary><div class='docblock'>Creates a new instance of this fetch. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.init_fetch\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.IS_DENSE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#154\">source</a><a href=\"#associatedconstant.IS_DENSE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedconstant.IS_DENSE\" class=\"constant\">IS_DENSE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a> = _</h4></section></summary><div class='docblock'>Returns true if (and only if) every table of every archetype matched by this fetch contains\nall of the matched components. This is used to select a more efficient “table iterator”\nfor “dense” queries. If this returns true, <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_table\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::set_table\"><code>WorldQuery::set_table</code></a> must be used before\n<a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.fetch\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::fetch\"><code>WorldQuery::fetch</code></a> can be called for iterators. If this returns false,\n<a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_archetype\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::set_archetype\"><code>WorldQuery::set_archetype</code></a> must be used before <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.fetch\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::fetch\"><code>WorldQuery::fetch</code></a> can be called for\niterators.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_archetype\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#162-167\">source</a><a href=\"#method.set_archetype\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_archetype\" class=\"fn\">set_archetype</a>(\n    _fetch: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>,\n    _state: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>,\n    _archetype: &amp;<a class=\"struct\" href=\"bevy_ecs/archetype/struct.Archetype.html\" title=\"struct bevy_ecs::archetype::Archetype\">Archetype</a>,\n    _table: &amp;<a class=\"struct\" href=\"bevy_ecs/storage/table/struct.Table.html\" title=\"struct bevy_ecs::storage::table::Table\">Table</a>\n)</h4></section></summary><div class='docblock'>Adjusts internal state to account for the next <a href=\"bevy_ecs/archetype/struct.Archetype.html\" title=\"struct bevy_ecs::archetype::Archetype\"><code>Archetype</code></a>. This will always be called on\narchetypes that match this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a>. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_archetype\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_table\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#171\">source</a><a href=\"#method.set_table\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_table\" class=\"fn\">set_table</a>(_fetch: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, _state: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>, _table: &amp;<a class=\"struct\" href=\"bevy_ecs/storage/table/struct.Table.html\" title=\"struct bevy_ecs::storage::table::Table\">Table</a>)</h4></section></summary><div class='docblock'>Adjusts internal state to account for the next <a href=\"bevy_ecs/storage/table/struct.Table.html\" title=\"struct bevy_ecs::storage::table::Table\"><code>Table</code></a>. This will always be called on tables\nthat match this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a>. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_table\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fetch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#174-178\">source</a><a href=\"#method.fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.fetch\" class=\"fn\">fetch</a>&lt;'w&gt;(\n    _fetch: &amp;mut &lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy_ecs::query::world_query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;,\n    _entity: <a class=\"struct\" href=\"bevy_ecs/entity/struct.Entity.html\" title=\"struct bevy_ecs::entity::Entity\">Entity</a>,\n    _table_row: <a class=\"struct\" href=\"bevy_ecs/storage/table/struct.TableRow.html\" title=\"struct bevy_ecs::storage::table::TableRow\">TableRow</a>\n) -&gt; &lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy_ecs::query::world_query::WorldQuery::Item\">Item</a>&lt;'w&gt;</h4></section></summary><div class='docblock'>Fetch <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::Item\"><code>Self::Item</code></a> for either the given <code>entity</code> in the current <a href=\"bevy_ecs/storage/table/struct.Table.html\" title=\"struct bevy_ecs::storage::table::Table\"><code>Table</code></a>,\nor for the given <code>entity</code> in the current <a href=\"bevy_ecs/archetype/struct.Archetype.html\" title=\"struct bevy_ecs::archetype::Archetype\"><code>Archetype</code></a>. This must always be called after\n<a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_table\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::set_table\"><code>WorldQuery::set_table</code></a> with a <code>table_row</code> in the range of the current <a href=\"bevy_ecs/storage/table/struct.Table.html\" title=\"struct bevy_ecs::storage::table::Table\"><code>Table</code></a> or after\n<a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_archetype\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::set_archetype\"><code>WorldQuery::set_archetype</code></a>  with a <code>entity</code> in the current archetype. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.fetch\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_component_access\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#182\">source</a><a href=\"#method.update_component_access\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.update_component_access\" class=\"fn\">update_component_access</a>(\n    _: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>,\n    access: &amp;mut <a class=\"struct\" href=\"bevy_ecs/query/access/struct.FilteredAccess.html\" title=\"struct bevy_ecs::query::access::FilteredAccess\">FilteredAccess</a>&lt;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>&gt;\n)</h4></section></summary><div class='docblock'>Adds any component accesses used by this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a> to <code>access</code>. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.update_component_access\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#186\">source</a><a href=\"#method.init_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.init_state\" class=\"fn\">init_state</a>(world: &amp;mut <a class=\"struct\" href=\"bevy_ecs/world/struct.World.html\" title=\"struct bevy_ecs::world::World\">World</a>) -&gt; <a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a></h4></section></summary><div class='docblock'>Creates and initializes a <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.State\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::State\"><code>State</code></a> for this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a> type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#190\">source</a><a href=\"#method.get_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.get_state\" class=\"fn\">get_state</a>(components: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.Components.html\" title=\"struct bevy_ecs::component::Components\">Components</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy_ecs::query::world_query::WorldQuery::State\">State</a>&gt;</h4></section></summary><div class='docblock'>Attempts to initialize a <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.State\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::State\"><code>State</code></a> for this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a> type using read-only\naccess to <a href=\"bevy_ecs/component/struct.Components.html\" title=\"struct bevy_ecs::component::Components\"><code>Components</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.matches_component_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#194-197\">source</a><a href=\"#method.matches_component_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.matches_component_set\" class=\"fn\">matches_component_set</a>(\n    _: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>,\n    set_contains_id: &amp;impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if this query matches a set of components. Otherwise, returns <code>false</code>. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.matches_component_set\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_access\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#105\">source</a><a href=\"#method.set_access\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#method.set_access\" class=\"fn\">set_access</a>(_state: &amp;mut Self::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy_ecs::query::world_query::WorldQuery::State\">State</a>, _access: &amp;<a class=\"struct\" href=\"bevy_ecs/query/access/struct.FilteredAccess.html\" title=\"struct bevy_ecs::query::access::FilteredAccess\">FilteredAccess</a>&lt;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>&gt;)</h4></section></summary><div class='docblock'>Sets available accesses for implementors with dynamic access such as <a href=\"bevy_ecs/world/entity_ref/struct.FilteredEntityRef.html\" title=\"struct bevy_ecs::world::entity_ref::FilteredEntityRef\"><code>FilteredEntityRef</code></a>\nor <a href=\"bevy_ecs/world/entity_ref/struct.FilteredEntityMut.html\" title=\"struct bevy_ecs::world::entity_ref::FilteredEntityMut\"><code>FilteredEntityMut</code></a>. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#method.set_access\">Read more</a></div></details></div></details>","WorldQuery","bevy_sprite::WithMesh2d"],["<section id=\"impl-ArchetypeFilter-for-With%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#956\">source</a><a href=\"#impl-ArchetypeFilter-for-With%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy_ecs/query/filter/trait.ArchetypeFilter.html\" title=\"trait bevy_ecs::query::filter::ArchetypeFilter\">ArchetypeFilter</a> for <a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy_ecs/component/trait.Component.html\" title=\"trait bevy_ecs::component::Component\">Component</a>,</div></h3></section>","ArchetypeFilter","bevy_sprite::WithMesh2d"]],
"bevy_text":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryFilter-for-With%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#202\">source</a><a href=\"#impl-QueryFilter-for-With%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy_ecs/query/filter/trait.QueryFilter.html\" title=\"trait bevy_ecs::query::filter::QueryFilter\">QueryFilter</a> for <a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy_ecs/component/trait.Component.html\" title=\"trait bevy_ecs::component::Component\">Component</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.IS_ARCHETYPAL\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#203\">source</a><a href=\"#associatedconstant.IS_ARCHETYPAL\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bevy_ecs/query/filter/trait.QueryFilter.html#associatedconstant.IS_ARCHETYPAL\" class=\"constant\">IS_ARCHETYPAL</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a> = true</h4></section></summary><div class='docblock'>Returns true if (and only if) this Filter relies strictly on archetypes to limit which\ncomponents are accessed by the Query. <a href=\"bevy_ecs/query/filter/trait.QueryFilter.html#associatedconstant.IS_ARCHETYPAL\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter_fetch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#206-210\">source</a><a href=\"#method.filter_fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy_ecs/query/filter/trait.QueryFilter.html#tymethod.filter_fetch\" class=\"fn\">filter_fetch</a>(\n    _fetch: &amp;mut &lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy_ecs::query::world_query::WorldQuery::Fetch\">Fetch</a>&lt;'_&gt;,\n    _entity: <a class=\"struct\" href=\"bevy_ecs/entity/struct.Entity.html\" title=\"struct bevy_ecs::entity::Entity\">Entity</a>,\n    _table_row: <a class=\"struct\" href=\"bevy_ecs/storage/table/struct.TableRow.html\" title=\"struct bevy_ecs::storage::table::TableRow\">TableRow</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if the provided <a href=\"bevy_ecs/entity/struct.Entity.html\" title=\"struct bevy_ecs::entity::Entity\"><code>Entity</code></a> and <a href=\"bevy_ecs/storage/table/struct.TableRow.html\" title=\"struct bevy_ecs::storage::table::TableRow\"><code>TableRow</code></a> should be included in the query results.\nIf false, the entity will be skipped. <a href=\"bevy_ecs/query/filter/trait.QueryFilter.html#tymethod.filter_fetch\">Read more</a></div></details></div></details>","QueryFilter","bevy_text::WithText"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WorldQuery-for-With%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#138\">source</a><a href=\"#impl-WorldQuery-for-With%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a> for <a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy_ecs/component/trait.Component.html\" title=\"trait bevy_ecs::component::Component\">Component</a>,</div></h3></section></summary><div class=\"docblock\"><p>SAFETY:\n<code>update_component_access</code> does not add any accesses.\nThis is sound because <code>fetch</code> does not access any components.\n<code>update_component_access</code> adds a <code>With</code> filter for <code>T</code>.\nThis is sound because <code>matches_component_set</code> returns whether the set contains the component.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" class=\"associatedtype\">Item</a>&lt;'w&gt; = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The item returned by this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a>\nFor <code>QueryData</code> this will be the item returned by the query.\nFor <code>QueryFilter</code> this will be either <code>()</code>, or a <code>bool</code> indicating whether the entity should be included\nor a tuple of such things.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Fetch\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Fetch\" class=\"associatedtype\">Fetch</a>&lt;'w&gt; = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>Per archetype/table state used by this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a> to fetch <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::Item\"><code>Self::Item</code></a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.State\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.State\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.State\" class=\"associatedtype\">State</a> = <a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a></h4></section></summary><div class='docblock'>State used to construct a <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::Fetch\"><code>Self::Fetch</code></a>. This will be cached inside <a href=\"bevy_ecs/query/state/struct.QueryState.html\" title=\"struct bevy_ecs::query::state::QueryState\"><code>QueryState</code></a>,\nso it is best to move as much data / computation here as possible to reduce the cost of\nconstructing <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::Fetch\"><code>Self::Fetch</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#143\">source</a><a href=\"#method.shrink\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.shrink\" class=\"fn\">shrink</a>&lt;'wlong, 'wshort&gt;(\n    _: &lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy_ecs::query::world_query::WorldQuery::Item\">Item</a>&lt;'wlong&gt;\n) -&gt; &lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy_ecs::query::world_query::WorldQuery::Item\">Item</a>&lt;'wshort&gt;<div class=\"where\">where\n    'wlong: 'wshort,</div></h4></section></summary><div class='docblock'>This function manually implements subtyping for the query items.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init_fetch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#146-151\">source</a><a href=\"#method.init_fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.init_fetch\" class=\"fn\">init_fetch</a>(\n    _world: <a class=\"struct\" href=\"bevy_ecs/world/unsafe_world_cell/struct.UnsafeWorldCell.html\" title=\"struct bevy_ecs::world::unsafe_world_cell::UnsafeWorldCell\">UnsafeWorldCell</a>&lt;'_&gt;,\n    _state: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>,\n    _last_run: <a class=\"struct\" href=\"bevy_ecs/component/struct.Tick.html\" title=\"struct bevy_ecs::component::Tick\">Tick</a>,\n    _this_run: <a class=\"struct\" href=\"bevy_ecs/component/struct.Tick.html\" title=\"struct bevy_ecs::component::Tick\">Tick</a>\n)</h4></section></summary><div class='docblock'>Creates a new instance of this fetch. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.init_fetch\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.IS_DENSE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#154\">source</a><a href=\"#associatedconstant.IS_DENSE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedconstant.IS_DENSE\" class=\"constant\">IS_DENSE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a> = _</h4></section></summary><div class='docblock'>Returns true if (and only if) every table of every archetype matched by this fetch contains\nall of the matched components. This is used to select a more efficient “table iterator”\nfor “dense” queries. If this returns true, <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_table\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::set_table\"><code>WorldQuery::set_table</code></a> must be used before\n<a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.fetch\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::fetch\"><code>WorldQuery::fetch</code></a> can be called for iterators. If this returns false,\n<a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_archetype\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::set_archetype\"><code>WorldQuery::set_archetype</code></a> must be used before <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.fetch\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::fetch\"><code>WorldQuery::fetch</code></a> can be called for\niterators.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_archetype\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#162-167\">source</a><a href=\"#method.set_archetype\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_archetype\" class=\"fn\">set_archetype</a>(\n    _fetch: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>,\n    _state: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>,\n    _archetype: &amp;<a class=\"struct\" href=\"bevy_ecs/archetype/struct.Archetype.html\" title=\"struct bevy_ecs::archetype::Archetype\">Archetype</a>,\n    _table: &amp;<a class=\"struct\" href=\"bevy_ecs/storage/table/struct.Table.html\" title=\"struct bevy_ecs::storage::table::Table\">Table</a>\n)</h4></section></summary><div class='docblock'>Adjusts internal state to account for the next <a href=\"bevy_ecs/archetype/struct.Archetype.html\" title=\"struct bevy_ecs::archetype::Archetype\"><code>Archetype</code></a>. This will always be called on\narchetypes that match this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a>. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_archetype\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_table\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#171\">source</a><a href=\"#method.set_table\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_table\" class=\"fn\">set_table</a>(_fetch: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, _state: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>, _table: &amp;<a class=\"struct\" href=\"bevy_ecs/storage/table/struct.Table.html\" title=\"struct bevy_ecs::storage::table::Table\">Table</a>)</h4></section></summary><div class='docblock'>Adjusts internal state to account for the next <a href=\"bevy_ecs/storage/table/struct.Table.html\" title=\"struct bevy_ecs::storage::table::Table\"><code>Table</code></a>. This will always be called on tables\nthat match this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a>. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_table\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fetch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#174-178\">source</a><a href=\"#method.fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.fetch\" class=\"fn\">fetch</a>&lt;'w&gt;(\n    _fetch: &amp;mut &lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy_ecs::query::world_query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;,\n    _entity: <a class=\"struct\" href=\"bevy_ecs/entity/struct.Entity.html\" title=\"struct bevy_ecs::entity::Entity\">Entity</a>,\n    _table_row: <a class=\"struct\" href=\"bevy_ecs/storage/table/struct.TableRow.html\" title=\"struct bevy_ecs::storage::table::TableRow\">TableRow</a>\n) -&gt; &lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy_ecs::query::world_query::WorldQuery::Item\">Item</a>&lt;'w&gt;</h4></section></summary><div class='docblock'>Fetch <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::Item\"><code>Self::Item</code></a> for either the given <code>entity</code> in the current <a href=\"bevy_ecs/storage/table/struct.Table.html\" title=\"struct bevy_ecs::storage::table::Table\"><code>Table</code></a>,\nor for the given <code>entity</code> in the current <a href=\"bevy_ecs/archetype/struct.Archetype.html\" title=\"struct bevy_ecs::archetype::Archetype\"><code>Archetype</code></a>. This must always be called after\n<a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_table\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::set_table\"><code>WorldQuery::set_table</code></a> with a <code>table_row</code> in the range of the current <a href=\"bevy_ecs/storage/table/struct.Table.html\" title=\"struct bevy_ecs::storage::table::Table\"><code>Table</code></a> or after\n<a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_archetype\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::set_archetype\"><code>WorldQuery::set_archetype</code></a>  with a <code>entity</code> in the current archetype. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.fetch\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_component_access\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#182\">source</a><a href=\"#method.update_component_access\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.update_component_access\" class=\"fn\">update_component_access</a>(\n    _: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>,\n    access: &amp;mut <a class=\"struct\" href=\"bevy_ecs/query/access/struct.FilteredAccess.html\" title=\"struct bevy_ecs::query::access::FilteredAccess\">FilteredAccess</a>&lt;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>&gt;\n)</h4></section></summary><div class='docblock'>Adds any component accesses used by this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a> to <code>access</code>. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.update_component_access\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#186\">source</a><a href=\"#method.init_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.init_state\" class=\"fn\">init_state</a>(world: &amp;mut <a class=\"struct\" href=\"bevy_ecs/world/struct.World.html\" title=\"struct bevy_ecs::world::World\">World</a>) -&gt; <a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a></h4></section></summary><div class='docblock'>Creates and initializes a <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.State\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::State\"><code>State</code></a> for this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a> type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#190\">source</a><a href=\"#method.get_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.get_state\" class=\"fn\">get_state</a>(components: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.Components.html\" title=\"struct bevy_ecs::component::Components\">Components</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy_ecs::query::world_query::WorldQuery::State\">State</a>&gt;</h4></section></summary><div class='docblock'>Attempts to initialize a <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.State\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::State\"><code>State</code></a> for this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a> type using read-only\naccess to <a href=\"bevy_ecs/component/struct.Components.html\" title=\"struct bevy_ecs::component::Components\"><code>Components</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.matches_component_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#194-197\">source</a><a href=\"#method.matches_component_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.matches_component_set\" class=\"fn\">matches_component_set</a>(\n    _: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>,\n    set_contains_id: &amp;impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if this query matches a set of components. Otherwise, returns <code>false</code>. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.matches_component_set\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_access\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#105\">source</a><a href=\"#method.set_access\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#method.set_access\" class=\"fn\">set_access</a>(_state: &amp;mut Self::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy_ecs::query::world_query::WorldQuery::State\">State</a>, _access: &amp;<a class=\"struct\" href=\"bevy_ecs/query/access/struct.FilteredAccess.html\" title=\"struct bevy_ecs::query::access::FilteredAccess\">FilteredAccess</a>&lt;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>&gt;)</h4></section></summary><div class='docblock'>Sets available accesses for implementors with dynamic access such as <a href=\"bevy_ecs/world/entity_ref/struct.FilteredEntityRef.html\" title=\"struct bevy_ecs::world::entity_ref::FilteredEntityRef\"><code>FilteredEntityRef</code></a>\nor <a href=\"bevy_ecs/world/entity_ref/struct.FilteredEntityMut.html\" title=\"struct bevy_ecs::world::entity_ref::FilteredEntityMut\"><code>FilteredEntityMut</code></a>. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#method.set_access\">Read more</a></div></details></div></details>","WorldQuery","bevy_text::WithText"],["<section id=\"impl-ArchetypeFilter-for-With%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#956\">source</a><a href=\"#impl-ArchetypeFilter-for-With%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy_ecs/query/filter/trait.ArchetypeFilter.html\" title=\"trait bevy_ecs::query::filter::ArchetypeFilter\">ArchetypeFilter</a> for <a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy_ecs/component/trait.Component.html\" title=\"trait bevy_ecs::component::Component\">Component</a>,</div></h3></section>","ArchetypeFilter","bevy_text::WithText"]],
"bevy_ui":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryFilter-for-With%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#202\">source</a><a href=\"#impl-QueryFilter-for-With%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy_ecs/query/filter/trait.QueryFilter.html\" title=\"trait bevy_ecs::query::filter::QueryFilter\">QueryFilter</a> for <a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy_ecs/component/trait.Component.html\" title=\"trait bevy_ecs::component::Component\">Component</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.IS_ARCHETYPAL\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#203\">source</a><a href=\"#associatedconstant.IS_ARCHETYPAL\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bevy_ecs/query/filter/trait.QueryFilter.html#associatedconstant.IS_ARCHETYPAL\" class=\"constant\">IS_ARCHETYPAL</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a> = true</h4></section></summary><div class='docblock'>Returns true if (and only if) this Filter relies strictly on archetypes to limit which\ncomponents are accessed by the Query. <a href=\"bevy_ecs/query/filter/trait.QueryFilter.html#associatedconstant.IS_ARCHETYPAL\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter_fetch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#206-210\">source</a><a href=\"#method.filter_fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy_ecs/query/filter/trait.QueryFilter.html#tymethod.filter_fetch\" class=\"fn\">filter_fetch</a>(\n    _fetch: &amp;mut &lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy_ecs::query::world_query::WorldQuery::Fetch\">Fetch</a>&lt;'_&gt;,\n    _entity: <a class=\"struct\" href=\"bevy_ecs/entity/struct.Entity.html\" title=\"struct bevy_ecs::entity::Entity\">Entity</a>,\n    _table_row: <a class=\"struct\" href=\"bevy_ecs/storage/table/struct.TableRow.html\" title=\"struct bevy_ecs::storage::table::TableRow\">TableRow</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if the provided <a href=\"bevy_ecs/entity/struct.Entity.html\" title=\"struct bevy_ecs::entity::Entity\"><code>Entity</code></a> and <a href=\"bevy_ecs/storage/table/struct.TableRow.html\" title=\"struct bevy_ecs::storage::table::TableRow\"><code>TableRow</code></a> should be included in the query results.\nIf false, the entity will be skipped. <a href=\"bevy_ecs/query/filter/trait.QueryFilter.html#tymethod.filter_fetch\">Read more</a></div></details></div></details>","QueryFilter","bevy_ui::WithNode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WorldQuery-for-With%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#138\">source</a><a href=\"#impl-WorldQuery-for-With%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a> for <a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy_ecs/component/trait.Component.html\" title=\"trait bevy_ecs::component::Component\">Component</a>,</div></h3></section></summary><div class=\"docblock\"><p>SAFETY:\n<code>update_component_access</code> does not add any accesses.\nThis is sound because <code>fetch</code> does not access any components.\n<code>update_component_access</code> adds a <code>With</code> filter for <code>T</code>.\nThis is sound because <code>matches_component_set</code> returns whether the set contains the component.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" class=\"associatedtype\">Item</a>&lt;'w&gt; = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The item returned by this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a>\nFor <code>QueryData</code> this will be the item returned by the query.\nFor <code>QueryFilter</code> this will be either <code>()</code>, or a <code>bool</code> indicating whether the entity should be included\nor a tuple of such things.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Fetch\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Fetch\" class=\"associatedtype\">Fetch</a>&lt;'w&gt; = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>Per archetype/table state used by this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a> to fetch <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::Item\"><code>Self::Item</code></a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.State\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.State\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.State\" class=\"associatedtype\">State</a> = <a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a></h4></section></summary><div class='docblock'>State used to construct a <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::Fetch\"><code>Self::Fetch</code></a>. This will be cached inside <a href=\"bevy_ecs/query/state/struct.QueryState.html\" title=\"struct bevy_ecs::query::state::QueryState\"><code>QueryState</code></a>,\nso it is best to move as much data / computation here as possible to reduce the cost of\nconstructing <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::Fetch\"><code>Self::Fetch</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#143\">source</a><a href=\"#method.shrink\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.shrink\" class=\"fn\">shrink</a>&lt;'wlong, 'wshort&gt;(\n    _: &lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy_ecs::query::world_query::WorldQuery::Item\">Item</a>&lt;'wlong&gt;\n) -&gt; &lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy_ecs::query::world_query::WorldQuery::Item\">Item</a>&lt;'wshort&gt;<div class=\"where\">where\n    'wlong: 'wshort,</div></h4></section></summary><div class='docblock'>This function manually implements subtyping for the query items.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init_fetch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#146-151\">source</a><a href=\"#method.init_fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.init_fetch\" class=\"fn\">init_fetch</a>(\n    _world: <a class=\"struct\" href=\"bevy_ecs/world/unsafe_world_cell/struct.UnsafeWorldCell.html\" title=\"struct bevy_ecs::world::unsafe_world_cell::UnsafeWorldCell\">UnsafeWorldCell</a>&lt;'_&gt;,\n    _state: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>,\n    _last_run: <a class=\"struct\" href=\"bevy_ecs/component/struct.Tick.html\" title=\"struct bevy_ecs::component::Tick\">Tick</a>,\n    _this_run: <a class=\"struct\" href=\"bevy_ecs/component/struct.Tick.html\" title=\"struct bevy_ecs::component::Tick\">Tick</a>\n)</h4></section></summary><div class='docblock'>Creates a new instance of this fetch. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.init_fetch\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.IS_DENSE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#154\">source</a><a href=\"#associatedconstant.IS_DENSE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedconstant.IS_DENSE\" class=\"constant\">IS_DENSE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a> = _</h4></section></summary><div class='docblock'>Returns true if (and only if) every table of every archetype matched by this fetch contains\nall of the matched components. This is used to select a more efficient “table iterator”\nfor “dense” queries. If this returns true, <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_table\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::set_table\"><code>WorldQuery::set_table</code></a> must be used before\n<a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.fetch\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::fetch\"><code>WorldQuery::fetch</code></a> can be called for iterators. If this returns false,\n<a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_archetype\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::set_archetype\"><code>WorldQuery::set_archetype</code></a> must be used before <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.fetch\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::fetch\"><code>WorldQuery::fetch</code></a> can be called for\niterators.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_archetype\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#162-167\">source</a><a href=\"#method.set_archetype\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_archetype\" class=\"fn\">set_archetype</a>(\n    _fetch: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>,\n    _state: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>,\n    _archetype: &amp;<a class=\"struct\" href=\"bevy_ecs/archetype/struct.Archetype.html\" title=\"struct bevy_ecs::archetype::Archetype\">Archetype</a>,\n    _table: &amp;<a class=\"struct\" href=\"bevy_ecs/storage/table/struct.Table.html\" title=\"struct bevy_ecs::storage::table::Table\">Table</a>\n)</h4></section></summary><div class='docblock'>Adjusts internal state to account for the next <a href=\"bevy_ecs/archetype/struct.Archetype.html\" title=\"struct bevy_ecs::archetype::Archetype\"><code>Archetype</code></a>. This will always be called on\narchetypes that match this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a>. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_archetype\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_table\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#171\">source</a><a href=\"#method.set_table\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_table\" class=\"fn\">set_table</a>(_fetch: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.unit.html\">()</a>, _state: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>, _table: &amp;<a class=\"struct\" href=\"bevy_ecs/storage/table/struct.Table.html\" title=\"struct bevy_ecs::storage::table::Table\">Table</a>)</h4></section></summary><div class='docblock'>Adjusts internal state to account for the next <a href=\"bevy_ecs/storage/table/struct.Table.html\" title=\"struct bevy_ecs::storage::table::Table\"><code>Table</code></a>. This will always be called on tables\nthat match this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a>. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_table\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fetch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#174-178\">source</a><a href=\"#method.fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.fetch\" class=\"fn\">fetch</a>&lt;'w&gt;(\n    _fetch: &amp;mut &lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Fetch\" title=\"type bevy_ecs::query::world_query::WorldQuery::Fetch\">Fetch</a>&lt;'w&gt;,\n    _entity: <a class=\"struct\" href=\"bevy_ecs/entity/struct.Entity.html\" title=\"struct bevy_ecs::entity::Entity\">Entity</a>,\n    _table_row: <a class=\"struct\" href=\"bevy_ecs/storage/table/struct.TableRow.html\" title=\"struct bevy_ecs::storage::table::TableRow\">TableRow</a>\n) -&gt; &lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" title=\"type bevy_ecs::query::world_query::WorldQuery::Item\">Item</a>&lt;'w&gt;</h4></section></summary><div class='docblock'>Fetch <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.Item\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::Item\"><code>Self::Item</code></a> for either the given <code>entity</code> in the current <a href=\"bevy_ecs/storage/table/struct.Table.html\" title=\"struct bevy_ecs::storage::table::Table\"><code>Table</code></a>,\nor for the given <code>entity</code> in the current <a href=\"bevy_ecs/archetype/struct.Archetype.html\" title=\"struct bevy_ecs::archetype::Archetype\"><code>Archetype</code></a>. This must always be called after\n<a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_table\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::set_table\"><code>WorldQuery::set_table</code></a> with a <code>table_row</code> in the range of the current <a href=\"bevy_ecs/storage/table/struct.Table.html\" title=\"struct bevy_ecs::storage::table::Table\"><code>Table</code></a> or after\n<a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.set_archetype\" title=\"associated function bevy_ecs::query::world_query::WorldQuery::set_archetype\"><code>WorldQuery::set_archetype</code></a>  with a <code>entity</code> in the current archetype. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.fetch\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_component_access\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#182\">source</a><a href=\"#method.update_component_access\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.update_component_access\" class=\"fn\">update_component_access</a>(\n    _: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>,\n    access: &amp;mut <a class=\"struct\" href=\"bevy_ecs/query/access/struct.FilteredAccess.html\" title=\"struct bevy_ecs::query::access::FilteredAccess\">FilteredAccess</a>&lt;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>&gt;\n)</h4></section></summary><div class='docblock'>Adds any component accesses used by this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a> to <code>access</code>. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.update_component_access\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#186\">source</a><a href=\"#method.init_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.init_state\" class=\"fn\">init_state</a>(world: &amp;mut <a class=\"struct\" href=\"bevy_ecs/world/struct.World.html\" title=\"struct bevy_ecs::world::World\">World</a>) -&gt; <a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a></h4></section></summary><div class='docblock'>Creates and initializes a <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.State\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::State\"><code>State</code></a> for this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a> type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#190\">source</a><a href=\"#method.get_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.get_state\" class=\"fn\">get_state</a>(components: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.Components.html\" title=\"struct bevy_ecs::component::Components\">Components</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt; as <a class=\"trait\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\">WorldQuery</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy_ecs::query::world_query::WorldQuery::State\">State</a>&gt;</h4></section></summary><div class='docblock'>Attempts to initialize a <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.State\" title=\"associated type bevy_ecs::query::world_query::WorldQuery::State\"><code>State</code></a> for this <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html\" title=\"trait bevy_ecs::query::world_query::WorldQuery\"><code>WorldQuery</code></a> type using read-only\naccess to <a href=\"bevy_ecs/component/struct.Components.html\" title=\"struct bevy_ecs::component::Components\"><code>Components</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.matches_component_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#194-197\">source</a><a href=\"#method.matches_component_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.matches_component_set\" class=\"fn\">matches_component_set</a>(\n    _: &amp;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>,\n    set_contains_id: &amp;impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if this query matches a set of components. Otherwise, returns <code>false</code>. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#tymethod.matches_component_set\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_access\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/world_query.rs.html#105\">source</a><a href=\"#method.set_access\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#method.set_access\" class=\"fn\">set_access</a>(_state: &amp;mut Self::<a class=\"associatedtype\" href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#associatedtype.State\" title=\"type bevy_ecs::query::world_query::WorldQuery::State\">State</a>, _access: &amp;<a class=\"struct\" href=\"bevy_ecs/query/access/struct.FilteredAccess.html\" title=\"struct bevy_ecs::query::access::FilteredAccess\">FilteredAccess</a>&lt;<a class=\"struct\" href=\"bevy_ecs/component/struct.ComponentId.html\" title=\"struct bevy_ecs::component::ComponentId\">ComponentId</a>&gt;)</h4></section></summary><div class='docblock'>Sets available accesses for implementors with dynamic access such as <a href=\"bevy_ecs/world/entity_ref/struct.FilteredEntityRef.html\" title=\"struct bevy_ecs::world::entity_ref::FilteredEntityRef\"><code>FilteredEntityRef</code></a>\nor <a href=\"bevy_ecs/world/entity_ref/struct.FilteredEntityMut.html\" title=\"struct bevy_ecs::world::entity_ref::FilteredEntityMut\"><code>FilteredEntityMut</code></a>. <a href=\"bevy_ecs/query/world_query/trait.WorldQuery.html#method.set_access\">Read more</a></div></details></div></details>","WorldQuery","bevy_ui::WithNode"],["<section id=\"impl-ArchetypeFilter-for-With%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/query/filter.rs.html#956\">source</a><a href=\"#impl-ArchetypeFilter-for-With%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy_ecs/query/filter/trait.ArchetypeFilter.html\" title=\"trait bevy_ecs::query::filter::ArchetypeFilter\">ArchetypeFilter</a> for <a class=\"struct\" href=\"bevy_ecs/query/filter/struct.With.html\" title=\"struct bevy_ecs::query::filter::With\">With</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy_ecs/component/trait.Component.html\" title=\"trait bevy_ecs::component::Component\">Component</a>,</div></h3></section>","ArchetypeFilter","bevy_ui::WithNode"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()