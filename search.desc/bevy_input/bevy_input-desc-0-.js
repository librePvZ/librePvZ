searchState.loadedDescShard("bevy_input", 0, "Input functionality for the Bevy game engine.\nStores the position data of the input devices of type <code>T</code>.\nA “press-able” input of type <code>T</code>.\nThe current “press” state of an element\nAdds keyboard and mouse input to an App\nLabel for systems that update the input data.\nThe largest possible axis value.\nThe smallest possible axis value.\nThe button is pressed.\nThe button is not pressed.\nReturns <code>true</code> if all items in <code>inputs</code> have been pressed.\nReturns <code>true</code> if any item in <code>inputs</code> has been pressed during …\nReturns <code>true</code> if any item in <code>inputs</code> has just been released.\nReturns <code>true</code> if any item in <code>inputs</code> has been pressed.\nClears the <code>just pressed</code> and <code>just released</code> data for every …\nClears the <code>just_pressed</code> state of the <code>input</code> and returns <code>true</code>…\nClears the <code>just_released</code> state of the <code>input</code> and returns …\nCommon run conditions\nReturns an iterator of all the input devices that have …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe gamepad input functionality.\nGestures functionality, from touchscreens and touchpads.\nReturns the position data of the provided <code>input_device</code>.\nAn iterator visiting every just pressed input in arbitrary …\nAn iterator visiting every just released input in …\nAn iterator visiting every pressed input in arbitrary …\nReturns the unclamped position data of the provided …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs this button pressed?\nReturns <code>true</code> if the <code>input</code> has been pressed during the …\nReturns <code>true</code> if the <code>input</code> has been released during the …\nThe keyboard input functionality.\nThe mouse input functionality.\nMost commonly used re-exported types.\nRegisters a press for the given <code>input</code>.\nReturns <code>true</code> if the <code>input</code> has been pressed.\nRegisters a release for the given <code>input</code>.\nRegisters a release for all currently pressed inputs.\nRemoves the position data of the <code>input_device</code>, returning …\nClears the <code>pressed</code>, <code>just_pressed</code> and <code>just_released</code> data of …\nClears the <code>pressed</code>, <code>just_pressed</code>, and <code>just_released</code> data …\nSets the position data of the <code>input_device</code> to <code>position_data</code>…\nThe touch input functionality.\nRun condition that is active if <code>ButtonInput::just_pressed</code> …\nRun condition that is active if <code>ButtonInput::just_released</code> …\nRun condition that is active if <code>ButtonInput::pressed</code> is …\nStateful run condition that can be toggled via a input …\nAdd a rumble to the given gamepad.\nAn axis of the gamepad has been triggered.\nSettings for a <code>GamepadAxis</code>.\nErrors that occur when setting axis settings for gamepad …\nA button of the gamepad has been triggered.\nSettings for a <code>GamepadButton</code>.\nManages settings for gamepad buttons.\nErrors that occur when setting button settings for gamepad …\nThe C button.\nThe gamepad is connected.\nA gamepad has been connected or disconnected.\nThe down button of the D-Pad.\nThe left button of the D-Pad.\nThe right button of the D-Pad.\nThe up button of the D-Pad.\nThe given parameter <code>deadzone_lowerbound</code> was not in range …\nParameter <code>deadzone_upperbound</code> was not less than or equal …\nThe given parameter <code>deadzone_lowerbound</code> was not in range …\nThe gamepad is disconnected.\nThe right action button of the action pad (i.e. PS: …\nA gamepad with an associated <code>ID</code>.\nAn axis of a <code>Gamepad</code>.\nGamepad event for when the “value” on the axis changes …\nA type of a <code>GamepadAxis</code>.\nA button of a <code>Gamepad</code>.\nGamepad event for when the “value” (amount of …\nA gamepad button input event.\nA type of a <code>GamepadButton</code>.\nThe connection status of a gamepad.\nA Gamepad connection event. Created when a connection to a …\nA gamepad event.\nMetadata associated with a <code>Gamepad</code>.\nThe intensity at which a gamepad’s force-feedback motors …\nAn event that controls force-feedback rumbling of a <code>Gamepad</code>…\nSettings for all <code>Gamepad</code>s.\nA collection of connected <code>Gamepad</code>s.\nThe horizontal value of the left stick.\nThe vertical value of the left stick.\nThe left thumb stick button.\nThe first left trigger.\nThe second left trigger.\nThe value of the left <code>Z</code> button.\nParameter <code>livezone_lowerbound</code> was not less than or equal …\nThe given parameter <code>livezone_lowerbound</code> was not in range …\nThe given parameter <code>deadzone_lowerbound</code> was not in range …\nRumble both gamepad motors at maximum intensity.\nThe mode button.\nThe upper action button of the action pad (i.e. PS: …\nMiscellaneous buttons, considered non-standard (i.e. Extra …\nNon-standard support for other axis types (i.e. HOTAS …\nThe given parameter was not in range 0.0..=1.0.\nParameter <code>release_threshold</code> was not less than or equal to …\nThe given parameter was not in range 0.0..=1.0.\nThe horizontal value of the right stick.\nThe vertical value of the right stick.\nThe right thumb stick button.\nThe first right trigger.\nThe second right trigger.\nThe value of the right <code>Z</code> button.\nRumble the strong motor at maximum intensity.\nThe select button.\nThe bottom action button of the action pad (i.e. PS: …\nThe start button.\nStop all running rumbles on the given <code>Gamepad</code>.\nThe given parameter was not in range 0.0..=2.0.\nRumble the weak motor at maximum intensity.\nThe left action button of the action pad (i.e. PS: Square, …\nThe Z button.\nThe user defined axis settings.\nThe type of the axis.\nThe type of the triggered axis.\nThe gamepad button assigned to the event.\nThe user defined button axis settings.\nThe user defined button settings.\nThe type of the button.\nThe type of the triggered button.\nClamps the <code>raw_value</code> according to the <code>AxisSettings</code>.\nIs the gamepad connected?\nThe change in the gamepads connection.\nReturns <code>true</code> if the <code>gamepad</code> is connected.\nGet the value above which inputs will be rounded up to 0.0.\nGet the value below which positive inputs will be rounded …\nThe default axis settings.\nThe default button axis settings.\nThe default button settings.\nIs the gamepad disconnected?\nFilters the <code>new_value</code> based on the <code>old_value</code>, according to …\nFilters the <code>new_value</code> based on the <code>old_value</code>, according to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the <code>Gamepad</code> associated with this request.\nThe gamepad on which the button is located on.\nThe gamepad on which the axis is located on.\nThe gamepad whose connection status changed.\nThe gamepad on which the axis is triggered.\nThe gamepad on which the button is triggered.\nUses <code>GamepadAxisChangedEvent</code>s to update the relevant …\nUses <code>GamepadButtonChangedEvent</code>s to update the relevant …\nHandles <code>GamepadConnectionEvent</code>s and updates gamepad …\nSplits the <code>GamepadEvent</code> event stream into its component …\nReturns the <code>AxisSettings</code> of the <code>axis</code>.\nReturns the <code>ButtonAxisSettings</code> of the <code>button</code>.\nReturns the <code>ButtonSettings</code> of the <code>button</code>.\nThe high value at which to apply rounding.\nThe <code>ID</code> of the gamepad.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the button is pressed.\nReturns <code>true</code> if the button is released.\nReturns an iterator over registered <code>Gamepad</code>s in an …\nGet the value below which negative inputs will be rounded …\nGet the value above which inputs will be rounded up to 1.0.\nThe low value at which to apply rounding.\nThe name of the gamepad if this one is connected.\nThe name of the gamepad.\nCreates a new <code>Gamepad</code>.\nCreates a new <code>GamepadButton</code>.\nCreates a new <code>GamepadAxis</code>.\nCreates a new <code>ButtonSettings</code> instance.\nCreates a new <code>AxisSettings</code> instance.\nCreates a <code>GamepadConnectionEvent</code>.\nCreates a <code>GamepadAxisChangedEvent</code>.\nCreates a <code>GamepadButtonChangedEvent</code>.\nGet the button input threshold above which the button is …\nGet the button input threshold below which the button is …\nTry to set the value above which inputs will be rounded up …\nTry to set the value below which positive inputs will be …\nTry to set the value below which negative inputs will be …\nTry to set the value above which inputs will be rounded up …\nTry to set the button input threshold above which the …\nTry to set the button input threshold below which the …\nTry to set the minimum value by which input must change …\nThe pressed state of the button.\nCreates a new rumble intensity with strong motor intensity …\nThe rumble intensity of the strong gamepad motor.\nGet the minimum value by which input must change before …\nThe threshold to apply rounding.\nTry to set the value above which inputs will be rounded up …\nTry to set the value below which positive inputs will be …\nTry to set the value below which negative inputs will be …\nTry to set the value above which inputs will be rounded up …\nTry to set the button input threshold above which the …\nTry to set the button input threshold below which the …\nTry to set the minimum value by which input must change …\nThe value of the axis.\nThe value of the button.\nCreates a new rumble intensity with weak motor intensity …\nThe rumble intensity of the weak gamepad motor.\nThe value of the <code>deadzone_lowerbound</code> parameter.\nThe value of the <code>deadzone_upperbound</code> parameter.\nThe value of the <code>livezone_lowerbound</code> parameter.\nThe value of the <code>livezone_upperbound</code> parameter.\nThe value of the <code>press_threshold</code> parameter.\nThe value of the <code>release_threshold</code> parameter.\nHow long the gamepad should rumble.\nThe gamepad to rumble.\nThe gamepad to stop rumble.\nHow intense the rumble should be.\nDouble tap gesture.\nPan gesture.\nTwo-finger pinch gesture, often used for magnifications.\nTwo-finger rotation gesture.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSwitch the input mode on an external AVR (audio/video …\nToggle the power on an external AVR (audio/video …\nAbort\nThe Accept (Commit, OK) key. Accept current option or …\nFound on Sun’s USB keyboard.\nRedo or repeat an action.\nInitiate the multi-candidate mode.\nThe Alphanumeric key (on linux/web)\nThe <code>Alt</code> (Alternative) key.\nThe Alternate Graphics (AltGr or AltGraph) key.\nAlt, Option, or ⌥.\nAlt, Option, or ⌥. This is labeled AltGr on many …\nAn Android “scancode”.\nAn Android “keycode”, which is similar to a “…\nThe Application switch key, which provides a list of …\n↓\nNavigate or traverse downward. (<code>KEYCODE_DPAD_DOWN</code>)\n←\nNavigate or traverse leftward. (<code>KEYCODE_DPAD_LEFT</code>)\n→\nNavigate or traverse rightward. (<code>KEYCODE_DPAD_RIGHT</code>)\n↑\nNavigate or traverse upward. (<code>KEYCODE_DPAD_UP</code>)\nThe Attention (Attn) key.\nAdjust audio balance leftward. (<code>VK_AUDIO_BALANCE_LEFT</code>)\nAdjust audio balance rightward. (<code>VK_AUDIO_BALANCE_RIGHT</code>)\nDecrease audio bass boost or cycle down through bass boost …\nToggle bass boost on/off. (<code>APPCOMMAND_BASS_BOOST</code>)\nIncrease audio bass boost or cycle up through bass boost …\nAdjust audio fader towards front. (<code>VK_FADER_FRONT</code>)\nAdjust audio fader towards rear. (<code>VK_FADER_REAR</code>)\nAdvance surround audio mode to next available mode. (…\nDecrease treble. (<code>APPCOMMAND_TREBLE_DOWN</code>)\nIncrease treble. (<code>APPCOMMAND_TREBLE_UP</code>)\nAudioVolumeDown\nDecrease audio volume. (<code>APPCOMMAND_VOLUME_DOWN</code>, …\nAudioVolumeMute\nToggle between muted state and prior volume level. (…\nAudioVolumeUp\nIncrease audio volume. (<code>APPCOMMAND_VOLUME_UP</code>, …\n` on a US keyboard. This is also called a backtick or …\nUsed for both the US \\ (on the 101-key layout) and also …\nBackspace or ⌫. Labeled Delete on Apple keyboards.\nUsed to remove the character to the left of the cursor. …\n[ on a US keyboard.\n] on a US keyboard.\nThe Brightness Down key. Typically controls the display …\nThe Brightness Up key. Typically controls the display …\nSome laptops place this key to the left of the ↑ key.\nNavigate to previous content or page in current history. (…\nBrowserFavorites\nOpen the list of browser favorites. (…\nSome laptops place this key to the right of the ↑ key.\nNavigate to next content or page in current history. (…\nThe “home” button on Android.\nGo to the user’s preferred home page. (…\nBrowserRefresh\nRefresh the current page or content. (…\nBrowserSearch\nCall up the user’s preferred search page. (…\nBrowserStop\nStop loading the current page or content. (…\nThe Call key. (<code>KEYCODE_CALL</code>)\nThe Camera key. (<code>KEYCODE_CAMERA</code>)\nThe Camera focus key. (<code>KEYCODE_FOCUS</code>)\nThe Cancel key. (on linux and web)\nCapsLock or ⇪\nThe <code>Caps Lock</code> (Capital) key.\nSelect next (numerically or logically) lower channel. (…\nSelect next (numerically or logically) higher channel. (…\nA key string that corresponds to the character typed by …\nRemove the currently selected input.\nClose the current document or message (Note: This …\nToggle the display of Closed Captions. (<code>VK_CC</code>, …\nInitiate the Code Input mode to allow characters to be …\nGeneral purpose color-coded media function key, as index 0 …\nGeneral purpose color-coded media function key, as index 1 …\nGeneral purpose color-coded media function key, as index 2 …\nGeneral purpose color-coded media function key, as index 3 …\nGeneral purpose color-coded media function key, as index 4 …\nGeneral purpose color-coded media function key, as index 5 …\n, on a US keyboard.\nThe Compose key, also known as “Multi_key” on the X …\nThe application context menu key, which is typically found …\nShow the application’s context menu. This key is …\nThe <code>Control</code> or <code>Ctrl</code> key.\nControl or ⌃\nControl or ⌃\nJapanese: 変 (henkan)\nConvert the current input method sequence.\nFound on Sun’s USB keyboard.\nCopy the current selection. (<code>APPCOMMAND_COPY</code>)\nThe Cursor Select key.\nFound on Sun’s USB keyboard.\nCut the current selection. (<code>APPCOMMAND_CUT</code>)\nSelect Digital Video Recorder. (<code>KEYCODE_DVR</code>)\nContains the text representation of the dead-key when …\n⌦. The forward delete key. Note that on Apple keyboards, …\nUsed to delete the character to the right of the cursor. …\n0 on a US keyboard.\n1 on a US keyboard.\n2 on a US keyboard.\n3 on a US keyboard.\n4 on a US keyboard.\n5 on a US keyboard.\n6 on a US keyboard.\n7 on a US keyboard.\n8 on a US keyboard.\n9 on a US keyboard.\nAdjust brightness of device, by toggling between or …\nSwap video sources. (<code>VK_DISPLAY_SWAP</code>)\nThe Eisu key. This key may close the IME, but its purpose …\nEject or ⏏. This key is placed in the function section …\nToggle removable media to eject (open) and insert (close) …\nPage Down, End, or ↘\nThe End key, used with keyboard entry to go to the end of …\nThe End Call key. (<code>KEYCODE_ENDCALL</code>)\nEnter or ↵. Labeled Return on Apple keyboards.\nThe <code>Enter</code> or <code>↵</code> key. Used to activate current selection …\n= on a US keyboard.\nThe Erase to End of Field key. This key deletes all …\nEsc or ⎋\nThe <code>Esc</code> key. This key was originally used to initiate an …\nThe Extend Selection (Exsel) key.\nThe Execute key.\nExit the current application. (<code>VK_EXIT</code>)\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nClear program or content stored as favorite 0. (…\nClear program or content stored as favorite 1. (…\nClear program or content stored as favorite 2. (…\nClear program or content stored as favorite 3. (…\nSelect (recall) program or content stored as favorite 0. (…\nSelect (recall) program or content stored as favorite 1. (…\nSelect (recall) program or content stored as favorite 2. (…\nSelect (recall) program or content stored as favorite 3. (…\nStore current program or content as favorite 0. (…\nStore current program or content as favorite 1. (…\nStore current program or content as favorite 2. (…\nStore current program or content as favorite 3. (…\nThe Final Mode <code>Final</code> key used on some Asian keyboards, to …\nFound on Sun’s USB keyboard.\nOpen the Find dialog. (<code>APPCOMMAND_FIND</code>)\nFn This is typically a hardware key that does not generate …\nThe Function switch <code>Fn</code> key. Activating this key …\nFLock or FnLock. Function Lock key. Found on the Microsoft …\nThe Function-Lock (<code>FnLock</code> or <code>F-Lock</code>) key. Activating this …\nThe Back key. (<code>KEYCODE_BACK</code>)\nThe Home key, which goes to the phone’s main screen. (…\nSwitch to the first character group. (ISO/IEC 9995)\nSwitch to the last character group. (ISO/IEC 9995)\nSwitch to the next character group. (ISO/IEC 9995)\nSwitch to the previous character group. (ISO/IEC 9995)\nToggle display of program or content guide. (<code>VK_GUIDE</code>, …\nIf guide is active and displayed, then display next …\nIf guide is active and displayed, then display previous …\nToggle between Hangul and English modes.\nHanjaMode\nThe (Half-Width) Characters key.\nThe Headset Hook key. (<code>KEYCODE_HEADSETHOOK</code>)\nHelp. Not present on standard PC keyboards.\nOpen a help dialog or toggle display of help information. (…\nThe Hibernate key. This key saves the current state of the …\nUse for dedicated ひらがな key found on some Japanese …\nThe Hiragana (Japanese Kana characters) key.\nThe Hiragana/Katakana toggle key. (…\nHome or ↖\nThe Home key, used with keyboard entry, to go to start of …\nLegacy modifier key.\nLegacy modifier key.\nToggle display of information about currently selected …\nInsert or Ins. Not present on Apple keyboards.\nToggle between text modes for insertion or overtyping. (…\nToggle instant replay. (<code>VK_INSTANT_REPLAY</code>)\nLocated between the left Shift and Z keys. Labeled \\ on a …\nLocated between the / and right Shift keys. Labeled \\ (ro) …\nLocated between the = and Backspace keys. Labeled ¥ (yen) …\nJunjaMode\nJapanese: カタカナ/ひらがな/ローマ字 …\nThe Kana Mode (Kana Lock) key. This key is used to enter …\nThe Kanji (Japanese name for ideographic characters of …\nUse for dedicated カタカナ key found on some Japanese …\nThe Katakana (Japanese Kana characters) key.\nThe logical key code of a <code>KeyboardInput</code>.\nThe <code>11</code> key found on media numpads that have buttons from <code>1</code> …\nThe <code>12</code> key found on media numpads that have buttons from <code>1</code> …\na on a US keyboard. Labeled q on an AZERTY (e.g., French) …\nb on a US keyboard.\nc on a US keyboard.\nThe key code of a <code>KeyboardInput</code>.\nd on a US keyboard.\ne on a US keyboard.\nf on a US keyboard.\ng on a US keyboard.\nh on a US keyboard.\ni on a US keyboard.\nj on a US keyboard.\nk on a US keyboard.\nl on a US keyboard.\nm on a US keyboard.\nn on a US keyboard.\no on a US keyboard.\np on a US keyboard.\nq on a US keyboard. Labeled a on an AZERTY (e.g., French) …\nr on a US keyboard.\ns on a US keyboard.\nt on a US keyboard.\nu on a US keyboard.\nv on a US keyboard.\nw on a US keyboard. Labeled z on an AZERTY (e.g., French) …\nx on a US keyboard.\ny on a US keyboard. Labeled z on a QWERTZ (e.g., German) …\nz on a US keyboard. Labeled w on an AZERTY (e.g., French) …\nGets generated from <code>bevy_winit::winit_runner</code>\nA keyboard input event.\nKorean: HangulMode 한/영 (han/yeong)\nKorean: Hanja 한 (hanja)\nJapanese (word-processing keyboard): Katakana\nJapanese (word-processing keyboard): Hiragana\nJapanese (word-processing keyboard): Zenkaku/Hankaku\nLastNumberRedial\nSometimes labelled My Computer on the keyboard\nSometimes labelled Calculator on the keyboard\nThe first generic “LaunchApplication” key. This is …\nThe second generic “LaunchApplication” key. This is …\nThe “Calendar” key. (<code>KEYCODE_CALENDAR</code>)\nThe “Contacts” key. (<code>KEYCODE_CONTACTS</code>)\nLaunchMail\nThe “Mail” key. (<code>APPCOMMAND_LAUNCH_MAIL</code>)\nThe “Media Player” key. (<code>APPCOMMAND_LAUNCH_MEDIA_SELECT</code>…\nLaunchMusicPlayer\nLaunchPhone\nLaunchScreenSaver\nLaunchSpreadsheet\nLaunchWebBrowser\nLaunchWebCam\nLaunchWordProcessor\nLaunch linked content, if available and appropriate. (…\nList the current program. (<code>VK_LIST</code>)\nToggle display listing of currently available live content …\nLock or unlock current content or program. (<code>VK_LOCK</code>)\nLogOff\nA macOS “scancode”.\nA macOS “scancode”. There does not appear to be any …\nOpen an editor to forward the current message. (…\nOpen an editor to reply to the current message. (…\nSend the current message. (<code>APPCOMMAND_SEND_MAIL</code>)\nToggle between manner mode state: silent, vibrate, ring, …\nShow a list of media applications: audio/video players and …\nAudio track key. (<code>KEYCODE_MEDIA_AUDIO_TRACK</code>)\nClose the current media, for example to close a CD or DVD …\nInitiate or continue forward playback at faster than …\nSelect previously selected channel or media. (<code>VK_LAST</code>, …\nPause the currently playing media. (<code>APPCOMMAND_MEDIA_PAUSE</code>…\nInitiate or continue media playback at normal speed, if …\nMediaPlayPause\nToggle media between play and pause states. (…\nInitiate or resume recording of currently selected media. (…\nInitiate or continue reverse playback at faster than …\nMediaSelect\nSkip backward to next content or program. (…\nSkip forward to next content or program. (<code>VK_SKIP</code>, …\nStep backward to next content or program. (…\nStep forward to next content or program. (…\nMediaStop\nStop media playing, pausing, forwarding, rewinding, or …\nMedia top menu. (<code>KEYCODE_MEDIA_TOP_MENU</code>)\nMediaTrackNext\nSeek to next media or program track. (…\nMediaTrackPrevious\nSeek to previous media or program track. (…\nLegacy modifier key. Also called “Super” in certain …\nLegacy modifier key. Also called “Super” in certain …\nToggle the microphone on/off. (<code>APPCOMMAND_MIC_ON_OFF_TOGGLE</code>…\nDecrease microphone volume. (…\nMute the microphone. (<code>APPCOMMAND_MICROPHONE_VOLUME_MUTE</code>, …\nIncrease microphone volume. (…\n- on a US keyboard.\nToggle between or cycle through input modes of IMEs.\nContains the platform-native logical key identifier, known …\nContains the platform-native physical key identifier\nNavigate in. (<code>KEYCODE_NAVIGATE_IN</code>)\nNavigate to next key. (<code>KEYCODE_NAVIGATE_NEXT</code>)\nNavigate out. (<code>KEYCODE_NAVIGATE_OUT</code>)\nNavigate to previous key. (<code>KEYCODE_NAVIGATE_PREVIOUS</code>)\nOpen a new document or message. (<code>APPCOMMAND_NEW</code>)\nNextCandidate, web only.\nCycle to next favorite channel (in favorites list). (…\nCycle to next user profile (if there are multiple user …\nJapanese: 無変換 (muhenkan)\nAccept current input method sequence without conversion in …\nThe Notification key. (<code>KEYCODE_NOTIFICATION</code>)\nOn the Mac, this is used for the numpad Clear key.\nThe <code>NumLock</code> or Number Lock key. Used to toggle numpad mode …\n0 Ins on a keyboard. 0 on a phone or remote control\n1 End on a keyboard. 1 or 1 QZ on a phone or remote control\n2 ↓ on a keyboard. 2 ABC on a phone or remote control\n3 PgDn on a keyboard. 3 DEF on a phone or remote control\n4 ← on a keyboard. 4 GHI on a phone or remote control\n5 on a keyboard. 5 JKL on a phone or remote control\n6 → on a keyboard. 6 MNO on a phone or remote control\n7 Home on a keyboard. 7 PQRS or 7 PRS on a phone or remote …\n8 ↑ on a keyboard. 8 TUV on a phone or remote control\n9 PgUp on a keyboard. 9 WXYZ or 9 WXY on a phone or remote …\n+\nFound on the Microsoft Natural Keyboard.\nC or A (All Clear). Also for use with numpads that have a …\nC (Clear Entry)\n, (thousands separator). For locales where the thousands …\n. Del. For locales where the decimal separator is “,” …\n/\nThe Enter key on the numpad.\n=\n# on a phone or remote control device. This key is …\nM Add current entry to the value stored in memory.\nM Clear the value stored in memory.\nM Replace the current entry with the value stored in …\nM Replace the value stored in memory with the current …\nM Subtract current entry from the value stored in memory.\n<em> on a keyboard. For use with numpads that provide </em>…\n( Found on the Microsoft Natural Keyboard.\n) Found on the Microsoft Natural Keyboard.\n* on a phone or remote control device.\n-\nAccess on-demand content or programs. (<code>VK_ON_DEMAND</code>)\nFound on Sun’s USB keyboard.\nOpen an existing document or message. (<code>APPCOMMAND_OPEN</code>)\nPage Down, PgDn, or ⇟\nScroll down or display next page of content.\nPage Up, PgUp, or ⇞\nScroll up or display previous page of content.\nPairing key to pair devices. (<code>KEYCODE_PAIRING</code>)\nFound on Sun’s USB keyboard.\nThe Paste key. (<code>APPCOMMAND_PASTE</code>)\nPause Break\nPause the current state or application (as appropriate).\n. on a US keyboard.\nMove picture-in-picture window down. (<code>VK_PINP_DOWN</code>)\nMove picture-in-picture window. (<code>VK_PINP_MOVE</code>)\nToggle display of picture-in-picture window. (…\nMove picture-in-picture window up. (<code>VK_PINP_UP</code>)\nPlay or resume the current state or application (as …\nDecrease media playback speed. (<code>VK_PLAY_SPEED_DOWN</code>)\nReset playback to normal speed. (<code>VK_PLAY_SPEED_RESET</code>)\nIncrease media playback speed. (<code>VK_PLAY_SPEED_UP</code>)\nThis key is placed in the function section on some Apple …\nToggle power state. (<code>KEYCODE_POWER</code>) Note: Some devices …\nThe <code>PowerOff</code> key. Sometime called <code>PowerDown</code>.\nPreviousCandidate, web only.\nPrint the current document or message. (<code>APPCOMMAND_PRINT</code>)\nPrtScr SysRq or Print Screen\nInitiate print-screen function.\nIME PROCESS key\nFound on Sun’s USB keyboard.\nThe properties (Props) key.\n’ on a US keyboard.\nToggle random media or content shuffle mode. (…\nNot a physical key, but this key code is sent when the …\nToggle or cycle between media recording speeds. (…\nRedo the last action. (<code>APPCOMMAND_REDO</code>)\nResume\nToggle RF (radio frequency) input bypass mode (pass RF …\nThe Roman characters function key.\nSwitch the input mode on an external STB (set top box). (…\nToggle the power on an external STB (set top box). (…\nSave the current document or message. (<code>APPCOMMAND_SAVE</code>)\nToggle scan channels mode. (<code>VK_SCAN_CHANNELS_TOGGLE</code>)\nAdvance display screen mode to next available mode. (…\nScroll Lock\nToggle between scrolling and cursor movement modes.\nFound on Sun’s USB keyboard.\nThe Select key.\n; on a US keyboard.\nToggle display of device settings screen. (<code>VK_SETTINGS</code>, …\nUsed to enable shift modifier function for interpreting …\nShift or ⇧\nShift or ⇧\nSingleCandidate\n/ on a US keyboard.\nSleep\nGeneral purpose virtual function key, as index 1.\nGeneral purpose virtual function key, as index 2.\nGeneral purpose virtual function key, as index 3.\nGeneral purpose virtual function key, as index 4.\n  (space)\nUsed in text to insert a space between words. Usually …\nShow correction list when a word is incorrectly …\nToggle between dictation mode and command/control mode. (…\nSpellcheck the current document or selection. (…\nToggle split screen mode. (<code>VK_SPLIT_SCREEN_TOGGLE</code>)\nThe Standby key. This key turns off the display and places …\nToggle display of subtitles, if available. (<code>VK_SUBTITLE</code>)\nUsed to enable “super” modifier function for …\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Windows, ⌘, Command, or other OS symbol key.\nSuspend\nThe Symbol modifier key (used on some virtual keyboards).\nThe SymbolLock key, only on web.\nSwitch to viewing TV. (<code>KEYCODE_TV</code>)\nTV 3D Mode. (<code>KEYCODE_3D_MODE</code>)\nToggle between antenna and cable input. (…\nAudio description. (<code>KEYCODE_TV_AUDIO_DESCRIPTION</code>)\nAudio description mixing volume down. (…\nAudio description mixing volume up. (…\nContents menu. (<code>KEYCODE_TV_CONTENTS_MENU</code>)\nContents menu. (<code>KEYCODE_TV_DATA_SERVICE</code>)\nSwitch the input mode on an external TV. (<code>KEYCODE_TV_INPUT</code>)\nSwitch to component input #1. (<code>KEYCODE_TV_INPUT_COMPONENT_1</code>…\nSwitch to component input #2. (<code>KEYCODE_TV_INPUT_COMPONENT_2</code>…\nSwitch to composite input #1. (<code>KEYCODE_TV_INPUT_COMPOSITE_1</code>…\nSwitch to composite input #2. (<code>KEYCODE_TV_INPUT_COMPOSITE_2</code>…\nSwitch to HDMI input #1. (<code>KEYCODE_TV_INPUT_HDMI_1</code>)\nSwitch to HDMI input #2. (<code>KEYCODE_TV_INPUT_HDMI_2</code>)\nSwitch to HDMI input #3. (<code>KEYCODE_TV_INPUT_HDMI_3</code>)\nSwitch to HDMI input #4. (<code>KEYCODE_TV_INPUT_HDMI_4</code>)\nSwitch to VGA input #1. (<code>KEYCODE_TV_INPUT_VGA_1</code>)\nMedia context menu. (<code>KEYCODE_TV_MEDIA_CONTEXT_MENU</code>)\nToggle network. (<code>KEYCODE_TV_NETWORK</code>)\nNumber entry. (<code>KEYCODE_TV_NUMBER_ENTRY</code>)\nToggle the power on an external TV. (<code>KEYCODE_TV_POWER</code>)\nRadio. (<code>KEYCODE_TV_RADIO_SERVICE</code>)\nSatellite. (<code>KEYCODE_TV_SATELLITE</code>)\nBroadcast Satellite. (<code>KEYCODE_TV_SATELLITE_BS</code>)\nCommunication Satellite. (<code>KEYCODE_TV_SATELLITE_CS</code>)\nToggle between available satellites. (…\nAnalog Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_ANALOG</code>)\nDigital Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_DIGITAL</code>)\nTimer programming. (<code>KEYCODE_TV_TIMER_PROGRAMMING</code>)\nTab or ⇥\nThe Horizontal Tabulation <code>Tab</code> key.\nToggle display of teletext, if available (<code>VK_TELETEXT</code>, …\nTurbo\nFound on Sun’s USB keyboard.\nUndo the last action. (<code>APPCOMMAND_UNDO</code>)\nUnidentified\nThis variant is used when the key cannot be translated to …\nUnidentified\nThis variant is used when the key cannot be translated to …\nAdvance video mode to next available mode. (…\nVoiceDial\nWakeUp\nThe WakeUp key. (<code>KEYCODE_WAKEUP</code>)\nA “key value string”.\nA Windows “scancode”.\nA Windows “virtual-key code”.\nCause device to identify itself in some manner, e.g., …\nAn XKB “keycode”.\nAn XKB “keysym”.\nThe Zenkaku (Full-Width) Characters key.\nThe Zenkaku/Hankaku (full-width/half-width) toggle key. (…\nThe ZoomIn key. (<code>KEYCODE_ZOOM_IN</code>)\nThe ZoomOut key. (<code>KEYCODE_ZOOM_OUT</code>)\nToggle between full-screen and scaled content, or alter …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe physical key code of the key.\nUpdates the <code>ButtonInput&lt;KeyCode&gt;</code> resource with the latest …\nThe logical key of the input\nThe press state of the key.\nWindow that received the input.\nThe back mouse button.\nThe forward mouse button.\nThe left mouse button.\nThe line scroll unit.\nThe middle mouse button.\nA button on a mouse device.\nA mouse button input event.\nAn event reporting the change in physical position of a …\nThe scroll unit.\nA mouse wheel event.\nAnother mouse button with the associated number.\nThe pixel scroll unit.\nThe right mouse button.\nThe mouse button assigned to the event.\nThe change in the position of the pointing device since …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUpdates the <code>ButtonInput&lt;MouseButton&gt;</code> resource with the …\nThe pressed state of the button.\nThe mouse scroll unit.\nWindow that received the input.\nWindow that received the input.\nThe horizontal scroll value.\nThe vertical scroll value.\nOn iOS, the force is calibrated so that the same number …\nThe system canceled the tracking of the finger.\nA finger stopped touching the touchscreen.\nA force description of a <code>Touch</code> input.\nA finger moved over the touchscreen.\nIf the platform reports the force as normalized, we have …\nA finger started to touch the touchscreen.\nA touch input.\nA touch input event.\nA phase of a <code>TouchInput</code>.\nA collection of <code>Touch</code>es.\nChecks if any touch input was just canceled.\nChecks if any touch input was just pressed.\nChecks if any touch input was just released.\nClears <code>just_pressed</code>, <code>just_released</code>, and <code>just_canceled</code> data …\nClears the <code>just_canceled</code> state of the touch input and …\nClears the <code>just_pressed</code> state of the touch input and …\nClears the <code>just_released</code> state of the touch input and …\nThe delta of the current <code>position</code> and the <code>previous_position</code>…\nThe distance of the <code>start_position</code> and the current <code>position</code>…\nRetrieves the position of the first currently pressed …\nReturns the current <code>force</code> of the touch.\nDescribes how hard the screen was pressed.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the <code>Touch</code> input corresponding to the <code>id</code> if it is …\nReturns the <code>Touch</code> input corresponding to the <code>id</code> if it has …\nReturns the <code>id</code> of the touch.\nThe unique identifier of the finger.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn iterator visiting every pressed <code>Touch</code> input in …\nAn iterator visiting every just canceled <code>Touch</code> input in …\nAn iterator visiting every just pressed <code>Touch</code> input in …\nAn iterator visiting every just released <code>Touch</code> input in …\nReturns <code>true</code> if the input corresponding to the <code>id</code> has just …\nReturns <code>true</code> if the input corresponding to the <code>id</code> has just …\nReturns <code>true</code> if the input corresponding to the <code>id</code> has just …\nThe phase of the touch input.\nReturns the current <code>position</code> of the touch.\nThe position of the finger on the touchscreen.\nReturns the <code>previous_force</code> of the touch.\nReturns the <code>previous_position</code> of the touch.\nRegister a release for a given touch input.\nRegisters a release for all currently pressed touch inputs.\nClears <code>pressed</code>, <code>just_pressed</code>, <code>just_released</code>, and …\nReturns the <code>start_force</code> of the touch.\nReturns the <code>start_position</code> of the touch.\nUpdates the <code>Touches</code> resource with the latest <code>TouchInput</code> …\nThe window entity registering the touch.\nThe altitude (in radians) of the stylus.\nThe force of the touch, where a value of 1.0 represents …\nThe maximum possible force for a touch.")