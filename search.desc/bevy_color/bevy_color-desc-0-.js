searchState.loadedDescShard("bevy_color", 0, "Representations of colors in various color spaces.\nMethods for manipulating alpha values.\nA pure black color.\nInvalid character.\nAn enumerated type that can represent any of the color …\nRepresents a range of colors that can be linearly …\nTrait with methods for converting colors to non-color types\nTrait with methods for converting colors to packed …\nTrait for returning a grayscale color of a provided …\nError returned if a hex string could not be parsed as a …\nColor in Hue-Saturation-Lightness (HSL) color space with …\nA color in the HSL color space with alpha.\nColor in Hue-Saturation-Value (HSV) color space with alpha.\nA color in the HSV color space with alpha.\nTrait for manipulating the hue of a color.\nColor in Hue-Whiteness-Blackness (HWB) color space with …\nA color in the HWB color space with alpha.\nColor in LAB color space, with alpha\nA color in the LAB color space with alpha.\nColor in LCH color space, with alpha\nA color in the LCH color space with alpha.\nInvalid length.\nLinear RGB color with alpha.\nA color in the linear sRGB color space with alpha.\nMethods for changing the luminance of a color. Note that …\nLinear interpolation of two colors within a given color …\nColor in Oklab color space, with alpha\nA color in the Oklab color space with alpha.\nColor in Oklch color space, with alpha\nA color in the Oklch color space with alpha.\nParsing error.\nNon-linear standard RGB with alpha.\nA color in the sRGB color space with alpha.\nA pure white color.\nCIE 1931 color space, also known as XYZ, with an alpha …\nA color in the XYZ color space with alpha.\nThe a axis. [-1.5, 1.5]\nThe ‘a’ channel. [-1.0, 1.0]\nReturn a the alpha component of this color.\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nGet the color value at the given interpolation factor, …\nThe b axis. [-1.5, 1.5]\nThe ‘b’ channel. [-1.0, 1.0]\nThe blackness channel. [0.0, 1.0]\nThe blue channel. [0.0, 1.0]\nThe blue channel. [0.0, 1.0]\nThe chroma channel. [0.0, 1.5]\nThe ‘chroma’ channel. [0.0, 1.0]\nModule for calculating distance between two colors in the …\nReturn a darker version of this color. The <code>amount</code> should …\nConvert from an f32 array\nConvert from an f32 array without the alpha value\nConvert from [u8; 4] where that makes sense (Srgba is most …\nConvert to [u8; 3] where that makes sense (Srgba is most …\nConvert from a Vec3\nConvert from a Vec4\nThe green channel. [0.0, 1.0]\nThe green channel. [0.0, 1.0]\nReturn the hue of this color [0.0, 360.0].\nThe hue channel. [0.0, 360.0]\nThe hue channel. [0.0, 360.0]\nThe hue channel. [0.0, 360.0]\nThe hue channel. [0.0, 360.0]\nThe ‘hue’ channel. [0.0, 360.0]\nReturn a lighter version of this color. The <code>amount</code> should …\nThe lightness channel. [0.0, 1.0]\nThe lightness channel. [0.0, 1.5]\nThe lightness channel. [0.0, 1.5]\nThe ‘lightness’ channel. [0.0, 1.0]\nThe ‘lightness’ channel. [0.0, 1.0]\nReturn the luminance of this color (0.0 - 1.0).\nLinearly interpolate between this and another color, by …\nColor palettes consisting of collections of const colors.\nCommonly used color types and traits.\nThe red channel. [0.0, 1.0]\nThe red channel. [0.0, 1.0]\nThe saturation channel. [0.0, 1.0]\nThe saturation channel. [0.0, 1.0]\nSets the alpha component of this color.\nSets the hue of this color.\nConvert to an f32 array\nConvert to an f32 array without the alpha value\nConvert to [u8; 4] where that makes sense (Srgba is most …\nConvert to [u8; 3] where that makes sense (Srgba is most …\nConvert to a Vec3\nConvert to a Vec4\nThe value channel. [0.0, 1.0]\nThe whiteness channel. [0.0, 1.0]\nReturn a new version of this color with the given alpha …\nReturn a new version of this color with the hue channel …\nReturn a new version of this color with the given …\nThe x-axis. [0.0, 1.0]\nThe y-axis, intended to represent luminance. [0.0, 1.0]\nThe z-axis. [0.0, 1.0]\nCalculate the distance between this and another color as …\nDistance from <code>self</code> to <code>other</code>.\nDistance squared from <code>self</code> to <code>other</code>.\nNamed colors from the CSS1 specification, also known as …\nExtended colors from the CSS4 specification, Also known as …\nColors from Tailwind CSS (MIT License). Grouped by hue …\nMethods for manipulating alpha values.\nA pure black color.\nA fully black <code>Color::LinearRgba</code> color with an alpha of 1.0.\nA fully black color with full alpha.\nA fully blue color with full alpha.\nA fully blue color with full alpha.\nCIE Epsilon Constant\nCIE Kappa Constant\nInvalid character.\nAn enumerated type that can represent any of the color …\nTrait with methods for converting colors to non-color types\nTrait with methods for converting colors to packed …\nD65 White Point\nA fully green color with full alpha.\nA fully green color with full alpha.\nTrait for returning a grayscale color of a provided …\nError returned if a hex string could not be parsed as a …\nColor in Hue-Saturation-Lightness (HSL) color space with …\nA color in the HSL color space with alpha.\nColor in Hue-Saturation-Value (HSV) color space with alpha.\nA color in the HSV color space with alpha.\nTrait for manipulating the hue of a color.\nColor in Hue-Whiteness-Blackness (HWB) color space with …\nA color in the HWB color space with alpha.\nColor in LAB color space, with alpha\nA color in the LAB color space with alpha.\nColor in LCH color space, with alpha\nA color in the LCH color space with alpha.\nInvalid length.\nLinear RGB color with alpha.\nA color in the linear sRGB color space with alpha.\nMethods for changing the luminance of a color. Note that …\nLinear interpolation of two colors within a given color …\nAn invalid color.\nA fully transparent <code>Color::LinearRgba</code> color with 0 red, …\nA fully transparent color.\nColor in Oklab color space, with alpha\nA color in the Oklab color space with alpha.\nColor in Oklch color space, with alpha\nA color in the Oklch color space with alpha.\nParsing error.\nA fully red color with full alpha.\nA fully red color with full alpha.\nNon-linear standard RGB with alpha.\nA color in the sRGB color space with alpha.\nA pure white color.\nA fully white <code>Color::LinearRgba</code> color with an alpha of 1.0.\nA fully white color with full alpha.\nCIE 1931 color space, also known as XYZ, with an alpha …\nA color in the XYZ color space with alpha.\nThe a axis. [-1.5, 1.5]\nThe ‘a’ channel. [-1.0, 1.0]\nReturn a the alpha component of this color.\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nConverts this color to a u32.\nThe b axis. [-1.5, 1.5]\nThe ‘b’ channel. [-1.0, 1.0]\nThe blackness channel. [0.0, 1.0]\nThe blue channel. [0.0, 1.0]\nThe blue channel. [0.0, 1.0]\nThe chroma channel. [0.0, 1.5]\nThe ‘chroma’ channel. [0.0, 1.0]\nReturn a darker version of this color. The <code>amount</code> should …\nA fully white <code>Color::LinearRgba</code> color with an alpha of 1.0.\nConstruct a new <code>LinearRgba</code> color with the default values …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from an f32 array\nConvert from an f32 array without the alpha value\nConvert from [u8; 4] where that makes sense (Srgba is most …\nConvert to [u8; 3] where that makes sense (Srgba is most …\nConvert from a Vec3\nConvert from a Vec4\nConverts a non-linear sRGB value to a linear one via gamma …\nConverts a linear sRGB value to a non-linear one via gamma …\nReturns a grey color with the provided lightness from (0.0 …\nReturns a grey color with the provided lightness from (0.0 …\nReturns a grey color with the provided lightness from (0.0 …\nThe green channel. [0.0, 1.0]\nThe green channel. [0.0, 1.0]\nNew <code>Srgba</code> from a CSS-style hexadecimal string.\nCreates a new <code>Color</code> object storing a <code>Hsla</code> color with an …\nConstruct a new <code>Hsla</code> color from (h, s, l) components, with …\nCreates a new <code>Color</code> object storing a <code>Hsla</code> color.\nCreates a new <code>Color</code> object storing a <code>Hsva</code> color with an …\nConstruct a new <code>Hsva</code> color from (h, s, v) components, with …\nCreates a new <code>Color</code> object storing a <code>Hsva</code> color.\nReturn the hue of this color [0.0, 360.0].\nThe hue channel. [0.0, 360.0]\nThe hue channel. [0.0, 360.0]\nThe hue channel. [0.0, 360.0]\nThe hue channel. [0.0, 360.0]\nThe ‘hue’ channel. [0.0, 360.0]\nCreates a new <code>Color</code> object storing a <code>Hwba</code> color with an …\nConstruct a new <code>Hwba</code> color from (h, s, l) components, with …\nCreates a new <code>Color</code> object storing a <code>Hwba</code> color.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs the alpha component of this color greater than or equal …\nIs the alpha component of this color greater than or equal …\nIs the alpha component of this color greater than or equal …\nIs the alpha component of this color less than or equal to …\nIs the alpha component of this color less than or equal to …\nIs the alpha component of this color less than or equal to …\nCreates a new <code>Color</code> object storing a <code>Laba</code> color with an …\nConstruct a new <code>Laba</code> color from (l, a, b) components, with …\nConstruct a new <code>Oklaba</code> color from (l, a, b) components, …\nCreates a new <code>Color</code> object storing a <code>Laba</code> color.\nCreates a new <code>Color</code> object storing a <code>Lcha</code> color with an …\nConstruct a new <code>Lcha</code> color from (h, s, l) components, with …\nConstruct a new <code>Oklcha</code> color from (l, c, h) components, …\nCreates a new <code>Color</code> object storing a <code>Lcha</code> color.\nReturn a lighter version of this color. The <code>amount</code> should …\nThe lightness channel. [0.0, 1.0]\nThe lightness channel. [0.0, 1.5]\nThe lightness channel. [0.0, 1.5]\nThe ‘lightness’ channel. [0.0, 1.0]\nThe ‘lightness’ channel. [0.0, 1.0]\nCreates a new <code>Color</code> object storing a <code>LinearRgba</code> color with …\nCreates a new <code>Color</code> object storing a <code>LinearRgba</code> color.\nReturn the luminance of this color (0.0 - 1.0).\nLuminance calculated using the CIE XYZ formula.\nLinearly interpolate between this and another color, by …\nLinearly interpolate between this and another color, by …\nLinearly interpolate between this and another color, by …\nLinearly interpolate between this and another color, by …\nConstruct a new <code>Hsla</code> color from components.\nConstruct a new <code>Hsva</code> color from components.\nConstruct a new <code>Hwba</code> color from components.\nConstruct a new <code>Laba</code> color from components.\nConstruct a new <code>Lcha</code> color from components.\nConstruct a new <code>LinearRgba</code> color from components.\nConstruct a new <code>Oklaba</code> color from components.\nConstruct a new <code>Oklcha</code> color from components.\nConstruct a new <code>Srgba</code> color from components.\nConstruct a new <code>Xyza</code> color from components.\nCreates a new <code>Color</code> object storing a <code>Oklaba</code> color with an …\nCreates a new <code>Color</code> object storing a <code>Oklaba</code> color.\nCreates a new <code>Color</code> object storing a <code>Oklcha</code> color with an …\nCreates a new <code>Color</code> object storing a <code>Oklcha</code> color.\nCreates a new <code>Color</code> object storing a <code>LinearRgba</code> color.\nThe red channel. [0.0, 1.0]\nThe red channel. [0.0, 1.0]\nCreates a new <code>Color</code> object storing a <code>Srgba</code> color with an …\nConstruct a new <code>LinearRgba</code> color from (r, g, b) …\nConstruct a new <code>Srgba</code> color from (r, g, b) components, …\nReads an array of floats to creates a new <code>Color</code> object …\nCreates a new <code>Color</code> object storing a <code>LinearRgba</code> color with …\nCreates a new <code>Color</code> object storing a <code>Srgba</code> color from <code>u8</code> …\nNew <code>Srgba</code> from sRGB colorspace.\nCreates a new <code>Color</code> object storing a <code>Srgba</code> color.\nCreates a new <code>Color</code> object storing a <code>Srgba</code> color from <code>u8</code> …\nNew <code>Srgba</code> from sRGB colorspace.\nReturn a new version of this color with the hue channel …\nReturn a new version of this color with the hue channel …\nReturn a new version of this color with the hue channel …\nThe saturation channel. [0.0, 1.0]\nThe saturation channel. [0.0, 1.0]\nGenerate a deterministic but quasi-randomly distributed …\nGenerate a deterministic but quasi-randomly distributed …\nGenerate a deterministic but quasi-randomly distributed …\nSets the alpha component of this color.\nSets the hue of this color.\nCreates a new <code>Color</code> object storing a <code>Srgba</code> color with an …\nReads an array of floats to creates a new <code>Color</code> object …\nCreates a new <code>Color</code> object storing a <code>Srgba</code> color from <code>u8</code> …\nCreates a new <code>Color</code> object storing a <code>Srgba</code> color.\nCreates a new <code>Color</code> object storing a <code>Srgba</code> color from <code>u8</code> …\nConvert to an f32 array\nConvert to an f32 array without the alpha value\nConvert this color to CSS-style hexadecimal notation.\nReturn the color as a linear RGBA color.\nReturn the color as an SRGBA color.\nConvert to [u8; 4] where that makes sense (Srgba is most …\nConvert to [u8; 3] where that makes sense (Srgba is most …\nConvert to a Vec3\nConvert to a Vec4\nThe value channel. [0.0, 1.0]\nThe whiteness channel. [0.0, 1.0]\nReturn a copy of this color with the ‘a’ channel set …\nReturn a new version of this color with the given alpha …\nReturn a copy of this color with the ‘b’ channel set …\nReturn a copy of this color with the blackness channel set …\nReturn a copy of this color with the blue channel set to …\nReturn a copy of this color with the blue channel set to …\nReturn a copy of this color with the chroma channel set to …\nReturn a copy of this color with the ‘chroma’ channel …\nReturn a copy of this color with the green channel set to …\nReturn a copy of this color with the green channel set to …\nReturn a new version of this color with the hue channel …\nReturn a copy of this color with the lightness channel set …\nReturn a copy of this color with the lightness channel set …\nReturn a copy of this color with the lightness channel set …\nReturn a copy of this color with the ‘lightness’ …\nReturn a copy of this color with the ‘lightness’ …\nReturn a new version of this color with the given …\nReturn a copy of this color with the red channel set to …\nReturn a copy of this color with the red channel set to …\nReturn a copy of this color with the saturation channel …\nReturn a copy of this color with the saturation channel …\nReturn a copy of this color with the value channel set to …\nReturn a copy of this color with the whiteness channel set …\nReturn a copy of this color with the ‘x’ channel set …\nReturn a copy of this color with the ‘y’ channel set …\nReturn a copy of this color with the ‘z’ channel set …\nThe x-axis. [0.0, 1.0]\nCreates a new <code>Color</code> object storing a <code>Xyza</code> color with an …\nConstruct a new <code>Xyza</code> color from (x, y, z) components, with …\nCreates a new <code>Color</code> object storing a <code>Xyza</code> color.\nThe y-axis, intended to represent luminance. [0.0, 1.0]\nThe z-axis. [0.0, 1.0]")