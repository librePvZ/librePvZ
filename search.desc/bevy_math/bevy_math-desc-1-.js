searchState.loadedDescShard("bevy_math", 1, "Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …\nReturns the rotation axis scaled by the rotation in …\nReturns the rotation axis scaled by the rotation in …\nCalculates the transpose of the affine 4x3 matrix to a 3x4 …\nTransforms the given 2D point, applying shear, scale, …\nTransforms the given 2D vector as a point.\nTransforms the given 2D vector as a point.\nTransforms the given 2D point, applying shear, scale, …\nTransforms the given 2D vector as a point.\nTransforms the given 3D points, applying shear, scale, …\nTransforms the given 3D vector as a point.\nTransforms the given 3D points, applying shear, scale, …\nTransforms the given 3D vector as a point.\nTransforms the given <code>Vec3A</code>, applying shear, scale, …\nTransforms the given <code>Vec3A</code> as 3D point.\nTransforms the given 2D vector, applying shear, scale and …\nRotates the given 2D vector.\nRotates the given 2D vector.\nTransforms the given 2D vector, applying shear, scale and …\nRotates the given 2D vector.\nTransforms the given 3D vector, applying shear, scale and …\nTransforms the give 3D vector as a direction.\nTransforms the given 3D vector, applying shear, scale and …\nTransforms the give 3D vector as a direction.\nTransforms the given <code>Vec3A</code>, applying shear, scale and …\nTransforms the give <code>Vec3A</code> as 3D vector.\nTranslation\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nReturns <code>self</code> with a length of <code>1.0</code> if possible, and <code>None</code> …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\n<code>u16</code> vector types. \nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\n<code>u32</code> vector types. \n<code>u64</code> vector types. \nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nBuild a new rectangle formed of the union of this …\nBuild a new rectangle formed of the union of this …\nBuild a new rectangle formed of the union of this …\nBuild a new rectangle formed of the union of this …\nBuild a new rectangle formed of the union of this …\nBuild a new rectangle formed of the union of this …\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nRectangle width (max.x - min.x).\nRectangle width (max.x - min.x).\nRectangle width (max.x - min.x).\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nWrites the columns of <code>self</code> to the first 6 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 12 elements in …\nWrites the columns of <code>self</code> to the first 9 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 4 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 9 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 16 elements in …\nWrites the columns of <code>self</code> to the first 6 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 12 elements in …\nWrites the columns of <code>self</code> to the first 4 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 9 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 16 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the quaternion to an unaligned slice.\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the quaternion to an unaligned slice.\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nReturns the vector part of the quaternion.\nReturns the vector part of the quaternion.\nA 2-dimensional <code>bool</code> vector mask.\nA 3-dimensional <code>bool</code> vector mask.\nA 3-dimensional SIMD vector mask.\nA 4-dimensional <code>bool</code> vector mask.\nA 4-dimensional SIMD vector mask.\nA 2D axis-aligned bounding box, or bounding rectangle\nA 3D axis-aligned bounding box\nAn intersection test that casts an <code>Aabb2d</code> along a ray.\nAn intersection test that casts an <code>Aabb3d</code> along a ray.\nA trait with methods that return 2D bounded volumes for a …\nA trait with methods that return 3D bounded volumes for a …\nA trait implemented on 2D shapes which determines the 3D …\nA bounding circle\nAn intersection test that casts a <code>BoundingCircle</code> along a …\nA bounding sphere\nAn intersection test that casts a <code>BoundingSphere</code> along a …\nA trait that generalizes different bounding volumes. …\nThe type used for the size of the bounding volume. Usually …\nA trait that generalizes intersection tests against a …\nA raycast intersection test for 2D bounding volumes\nA raycast intersection test for 3D bounding volumes\nThe rotation type used for the volume. This should be <code>f32</code> …\nThe position type used for the volume. This should be <code>Vec2</code> …\nThe aabb that is being cast\nThe aabb that is being cast\nGet an axis-aligned bounding box for the shape with the …\nComputes the smallest <code>Aabb2d</code> containing this <code>BoundingCircle</code>…\nGet an axis-aligned bounding box for the shape with the …\nComputes the smallest <code>Aabb3d</code> containing this <code>BoundingSphere</code>…\nGet the distance at which the <code>Aabb2d</code>s collide, if at all.\nGet the distance at which the <code>Aabb3d</code>s collide, if at all.\nGet the distance of an intersection with an <code>Aabb2d</code>, if any.\nGet the distance of an intersection with an <code>Aabb3d</code>, if any.\nGet a bounding circle for the shape The rotation is in …\nComputes the smallest <code>BoundingCircle</code> containing this <code>Aabb2d</code>…\nGet a bounding sphere for the shape with the given …\nComputes the smallest <code>BoundingSphere</code> containing this <code>Aabb3d</code>…\nReturns the center of the bounding volume.\nThe center of the bounding circle\nThe center of the bounding sphere\nThe circle\nThe circle that is being cast\nGet the distance at which the <code>BoundingCircle</code>s collide, if …\nGet the distance of an intersection with a <code>BoundingCircle</code>, …\nFinds the point on the AABB that is closest to the given …\nFinds the point on the bounding circle that is closest to …\nFinds the point on the AABB that is closest to the given …\nFinds the point on the bounding sphere that is closest to …\nChecks if this bounding volume contains another one.\nThe direction of the ray.\nGet the cached multiplicative inverse of the direction of …\nGet the cached multiplicative inverse of the direction of …\nGet an axis-aligned bounding box for an extrusion with …\nGet an axis-aligned bounding box for an extrusion with …\nGet a bounding sphere for an extrusion of the <code>base_shape</code> …\nGet a bounding sphere for an extrusion of the <code>base_shape</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nComputes the smallest <code>Aabb2d</code> containing the given set of …\nComputes a <code>BoundingCircle</code> containing the given set of …\nComputes the smallest <code>Aabb3d</code> containing the given set of …\nComputes a <code>BoundingSphere</code> containing the given set of …\nConstruct a <code>RayCast2d</code> from a <code>Ray2d</code> and max distance.\nConstruct an <code>AabbCast2d</code> from an <code>Aabb2d</code>, <code>Ray2d</code>, and max …\nConstruct a <code>BoundingCircleCast</code> from a <code>BoundingCircle</code>, <code>Ray2d</code>…\nConstruct a <code>RayCast3d</code> from a <code>Ray3d</code> and max distance.\nConstruct an <code>AabbCast3d</code> from an <code>Aabb3d</code>, <code>Ray3d</code>, and max …\nConstruct a <code>BoundingSphereCast</code> from a <code>BoundingSphere</code>, <code>Ray3d</code>…\nIncreases the size of the bounding volume in each …\nReturns the half size of the bounding volume.\nCheck if a volume intersects with this intersection test\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum, conventionally top-right, point of the box\nThe maximum point of the box\nThe maximum distance for the ray\nThe maximum distance for the ray\nComputes the smallest bounding volume that contains both …\nThe minimum, conventionally bottom-left, point of the box\nThe minimum point of the box\nConstructs an AABB from its center and half-size.\nConstructs a bounding circle from its center and radius.\nConstructs an AABB from its center and half-size.\nConstructs a bounding sphere from its center and radius.\nConstruct a <code>RayCast2d</code> from an origin, <code>Dir2</code>, and max …\nConstruct an <code>AabbCast2d</code> from an <code>Aabb2d</code>, origin, <code>Dir2</code>, and …\nConstruct a <code>BoundingCircleCast</code> from a <code>BoundingCircle</code>, …\nConstruct a <code>RayCast3d</code> from an origin, [<code>Dir3</code>], and max …\nConstruct an <code>AabbCast3d</code> from an <code>Aabb3d</code>, origin, [<code>Dir3</code>], …\nConstruct a <code>BoundingSphereCast</code> from a <code>BoundingSphere</code>, …\nThe origin of the ray.\nGet the radius of the bounding circle\nGet the radius of the bounding sphere\nThe ray for the test\nThe ray along which to cast the bounding volume\nThe ray along which to cast the bounding volume\nThe ray along which to cast the bounding volume\nThe ray along which to cast the bounding volume\nRotates the bounding volume around the origin by the given …\nRotates the bounding volume around the origin by the given …\nRotates the bounding volume around the origin by the given …\nRotates the bounding volume around the origin by the given …\nRotates the bounding volume around the origin by the given …\nRotates the bounding volume around the origin by the given …\nScale the size of the bounding volume around its center by …\nDecreases the size of the bounding volume in each …\nThe sphere\nThe sphere that is being cast\nGet the distance at which the <code>BoundingSphere</code>s collide, if …\nGet the distance of an intersection with a <code>BoundingSphere</code>, …\nTransforms the bounding volume by first rotating it around …\nTransforms the bounding volume by first rotating it around …\nTransforms the bounding volume by first rotating it around …\nTransforms the bounding volume by first rotating it around …\nTransforms the bounding volume by first rotating it around …\nTransforms the bounding volume by first rotating it around …\nTranslates the bounding volume by the given translation.\nTranslates the bounding volume by the given translation.\nComputes the visible surface area of the bounding volume. …\nThe provided knots were all equal. Knots must contain at …\nA spline interpolated continuously across the nearest four …\nA spline composed of a single cubic Bezier curve.\nA spline interpolated continuously across the nearest four …\nA collection of <code>CubicSegment</code>s chained into a single …\nImplement this on cubic splines that can generate a cubic …\nA spline interpolated continuously between the nearest two …\nNon-uniform Rational B-Splines (NURBS) are a powerful …\nError during construction of <code>CubicNurbs</code>\nA segment of a cubic curve, used to hold precomputed …\nThe provided knots had a descending knot pair. Subsequent …\nProvided the wrong number of knots.\nA spline interpolated linearly between the nearest 2 …\nThe number of control points provided is less than 4.\nA collection of <code>RationalSegment</code>s chained into a single …\nImplement this on cubic splines that can generate a …\nA segment of a rational cubic curve, used to hold …\nProvided a different number of weights and control points.\nInstantaneous acceleration of a point at parametric value <code>t</code>…\nCompute the second derivative with respect to t at <code>t</code>. This …\nInstantaneous acceleration of a point at parametric value <code>t</code>…\nCompute the second derivative with respect to t at <code>t</code>. This …\nCoefficients of the segment\nThe coefficients matrix of the cubic curve.\nThe control points of the Bezier curve\nThe control points of the Hermite curve\nThe control points of the Cardinal spline\nThe control points of the spline\nThe control points of the NURBS\nReturns the length of of the domain of the parametric …\nGiven a <code>time</code> within <code>0..=1</code>, returns an eased value that …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIterate over the curve split into <code>subdivisions</code>, sampling …\nIterate over the curve split into <code>subdivisions</code>, sampling …\nIterate over the curve split into <code>subdivisions</code>, sampling …\nIterate over the curve split into <code>subdivisions</code>, sampling …\nA flexible iterator used to sample curves with arbitrary …\nA flexible iterator used to sample curves with arbitrary …\nIterate over the curve split into <code>subdivisions</code>, sampling …\nIterate over the curve split into <code>subdivisions</code>, sampling …\nThe width of the domain of this segment.\nKnots\nCreate a new cubic Bezier curve from sets of control …\nCreate a new Hermite curve from sets of control points.\nBuild a new Cardinal spline.\nBuild a new B-Spline.\nBuild a Non-Uniform Rational B-Spline.\nCreate a new linear spline\nConstruct a cubic Bezier curve for animation easing, with …\nBuild a new Catmull-Rom spline, the special case of a …\nGenerates open uniform knots, which makes the ends of the …\nThe control points of the NURBS\nInstantaneous position of a point at parametric value <code>t</code>.\nCompute the position of a point on the cubic curve at the …\nInstantaneous position of a point at parametric value <code>t</code> in …\nCompute the position of a point on the curve at the …\nAdds a segment to the curve\nAdds a segment to the curve.\nThe list of segments contained in this <code>CubicCurve</code>.\nThe list of segments contained in this <code>RationalCurve</code>.\nSegments of the curve\nThe segments in the curve\nTension\nBuild a <code>CubicCurve</code> by computing the interpolation …\nBuild a <code>RationalCurve</code> by computing the interpolation …\nGenerates uniform knots that will generate the same curve …\nInstantaneous velocity of a point at parametric value <code>t</code>.\nCompute the first derivative with respect to t at <code>t</code>. This …\nInstantaneous velocity of a point at parametric value <code>t</code> in …\nCompute the first derivative with respect to t at <code>t</code>. This …\nThe homogeneous weight coefficients.\nWeights\nExpected number of knots\nExpected number of weights\nProvided number of knots\nProvided number of weights\nThe number of control points provided\nA 2D affine transform, which can represent translation, …\nA 3D affine transform, which can represent translation, …\nA 2x2 column major matrix.\nA 3x3 column major matrix.\nA 3x3 column major matrix.\nA 4x4 column major matrix.\nA quaternion representing an orientation.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nCreates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2D affine transform, which can represent translation, …\nA 3D affine transform, which can represent translation, …\nA 2x2 column major matrix.\nA 3x3 column major matrix.\nA 4x4 column major matrix.\nA quaternion representing an orientation.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nCreates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA primitive shape formed by the region between two …\nA primitive representing an arc between two points on a …\nA polygon with a variable number of vertices, allocated on …\nA series of connected line segments in 2D space, allocated …\nA series of connected line segments in 3D space, allocated …\nA 2D capsule primitive, also known as a stadium or pill …\nA 3D capsule primitive. A three-dimensional capsule is …\nA circle primitive\nA primitive representing a circular sector: a pie slice of …\nA primitive representing a circular segment: the area …\nA clockwise winding order\nA cone primitive centered on the midpoint between the tip …\nA conical frustum primitive. A conical frustum can be …\nA counterclockwise winding order\nA cuboid primitive, more commonly known as a box.\nA cylinder primitive\nAn ellipse primitive\nA 3D shape representing an extruded 2D <code>base_shape</code>.\nA torus that has no hole but also doesn’t intersect …\nAn unbounded plane in 3D space. It forms a separating …\nA torus with non-geometric properties like a minor or …\nAn invalid winding order indicating that it could not be …\nAn infinite line along a direction in 2D space.\nAn infinite line along a direction in 3D space.\nA trait for getting measurements of 2D shapes\nA trait for getting measurements of 3D shapes\nAn unbounded plane in 2D space. It forms a separating …\nA bounded plane in 3D space. It forms a surface starting …\nA polygon with N vertices.\nA series of connected line segments in 2D space.\nA series of connected line segments in 3D space.\nA marker trait for 2D primitives\nA marker trait for 3D primitives\nA rectangle primitive\nA polygon where all vertices lie on a circle, equally far …\nA rhombus primitive, also known as a diamond shape.\nA torus that has a ring. The major radius is greater than …\nA segment of a line along a direction in 2D space.\nA segment of a line along a direction in 3D space.\nA sphere primitive\nA self-intersecting torus. The major radius is less than …\nA tetrahedron primitive.\nA torus primitive, often representing a ring or donut shape\nThe type of torus determined by the minor and major radii\nA triangle in 2D space\nA 3D triangle primitive.\nThe winding order for a set of points\nGet the bounding box of the triangle.\nGet the angle of the arc\nGet the angle of the sector\nGet the angle of the segment\nGet the length of the apothem of this arc, that is, the …\nGet the length of the apothem of this sector\nGet the length of the apothem of this segment, which is …\nThe arc defining the sector\nThe arc defining the segment\nGet the length of the arc defining the sector\nGet the length of the arc defining the segment\nGet the area of the shape\nGet the surface area of the shape\nGet the area of the circle\nReturns the area of this sector\nReturns the area of this segment\nGet the area of the ellipse\nGet the area of the annulus\nGet the area of the rhombus\nGet the area of the triangle\nGet the area of the rectangle\nGet the area of the regular polygon\nGet the surface area of the sphere\nGet the surface area of the cuboid\nGet the total surface area of the cylinder\nGet the surface area of the capsule\nGet the total surface area of the cone\nGet the surface area of the torus. Note that this only …\nGet the area of the triangle.\nGet the surface area of the tetrahedron.\nGet the surface area of the extrusion\nGet the base of the cylinder as a <code>Circle</code>\nGet the base of the cone as a <code>Circle</code>\nGet the surface area of one base of the cylinder\nGet the surface area of the base of the cone\nThe base shape of the extrusion\nGet the bounding sphere of the triangle.\nGet the centroid of the triangle.\nGet the centroid of the tetrahedron.\nGet the distance between the endpoints (the length of the …\nGet the length of the chord defined by the sector\nGet the length of the segment’s base, also known as its …\nGet the midpoint of the two endpoints (the midpoint of the …\nGet the midpoint of the chord defined by the sector\nGet the midpoint of the segment’s base, also known as …\nGet the circumcenter of the triangle.\nCompute the circle passing through all three vertices of …\nThe circumcircle on which all vertices lie\nGet the radius of the circumcircle on which all vertices …\nGet the radius of the circumcircle on which all vertices …\nFinds the point on the circle that is closest to the given …\nFinds the point on the annulus that is closest to the …\nFinds the point on the rhombus that is closest to the …\nFinds the point on the rectangle that is closest to the …\nFinds the point on the sphere that is closest to the given …\nFinds the point on the cuboid that is closest to the given …\nReturns the default <code>Circle</code> with a radius of <code>0.5</code>.\nReturns the default <code>Arc2d</code> with radius <code>0.5</code>, covering one …\nReturns the default <code>CircularSector</code> with radius <code>0.5</code> and …\nReturns the default <code>CircularSegment</code> with radius <code>0.5</code> and …\nReturns the default <code>Ellipse</code> with a half-width of <code>1.0</code> and a …\nReturns the default <code>Annulus</code> with radii of <code>0.5</code> and <code>1.0</code>.\nReturns the default <code>Rhombus</code> with a half-horizontal and …\nReturns the default <code>Plane2d</code> with a normal pointing in the …\nReturns the default <code>Triangle2d</code> with the vertices <code>[0.0, 0.5]</code>…\nReturns the default <code>Rectangle</code> with a half-width and …\nReturns the default <code>RegularPolygon</code> with six sides (a …\nReturns the default <code>Capsule2d</code> with a radius of <code>0.5</code> and a …\nReturns the default <code>Sphere</code> with a radius of <code>0.5</code>.\nReturns the default <code>Plane3d</code> with a normal pointing in the …\nReturns the default <code>InfinitePlane3d</code> with a normal pointing …\nReturns the default <code>Cuboid</code> with a width, height, and depth …\nReturns the default <code>Cylinder</code> with a radius of <code>0.5</code> and a …\nReturns the default <code>Capsule3d</code> with a radius of <code>0.5</code> and a …\nReturns the default <code>Cone</code> with a base radius of <code>0.5</code> and a …\nReturns the default <code>ConicalFrustum</code> with a top radius of …\nReturns the default <code>Torus</code> with a minor radius of <code>0.25</code> and …\nReturns the default <code>Triangle3d</code> with the vertices …\nReturns the default <code>Tetrahedron</code> with the vertices …\nGet the diameter of the circle\nGet the diameter of the annulus\nGet the diameter of the sphere\nThe direction of the line. The line extends infinitely in …\nThe direction of the line segment\nThe direction of the line\nThe direction of the line\nReturns the eccentricity of the ellipse. It can be thought …\nGet the endpoints of the arc\nGet the external angle of the regular polygon in degrees.\nGet the external angle of the regular polygon in radians.\nGet the triangles that form the faces of this tetrahedron.\nGet the focal length of the ellipse. This corresponds to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>Rectangle</code> from two corner points\nCreate a new <code>Cuboid</code> from two corner points\nCreate a new <code>Arc2d</code> from a <code>radius</code> and an <code>angle</code> in degrees.\nCreate a new <code>CircularSector</code> from a <code>radius</code> and an <code>angle</code> in …\nCreate a new <code>CircularSegment</code> from a <code>radius</code> and an <code>angle</code> in …\nCreate a new <code>Rhombus</code> from a given inradius with all inner …\nCreate a <code>Rectangle</code> from a single length. The resulting …\nCreate a <code>Cuboid</code> from a single length. The resulting <code>Cuboid</code> …\nCreate a new <code>Segment2d</code> from its endpoints and compute its …\nCreate a new <code>Plane3d</code> based on three points and compute the …\nCreate a new <code>InfinitePlane3d</code> based on three points and …\nCreate a new <code>Segment3d</code> from its endpoints and compute its …\nCreate a new <code>Arc2d</code> from a <code>radius</code> and an <code>angle</code> in radians\nCreate a new <code>CircularSector</code> from a <code>radius</code> and an <code>angle</code> in …\nCreate a new <code>CircularSegment</code> from a <code>radius</code> and an <code>angle</code> in …\nCreate a new <code>Rhombus</code> from a side length with all inner …\nCreate a new <code>Ellipse</code> from a given full size.\nCreate a new <code>Rectangle</code> from a given full size\nCreate a new <code>Cuboid</code> from a given full size\nCreate a new <code>Arc2d</code> from a <code>radius</code> and a <code>fraction</code> of a …\nCreate a new <code>CircularSector</code> from a <code>radius</code> and a number of …\nCreate a new <code>CircularSegment</code> from a <code>radius</code> and a number of …\nGet half the angle of the sector\nGet the half-angle of the segment\nHalf the angle defining the arc\nGet half the distance between the endpoints (half the …\nGet half the length of the chord defined by the sector\nGet half the length of the segment’s base, also known as …\nHalf of the depth of the extrusion\nSize of the horizontal and vertical diagonals of the …\nThe half height of the cylinder\nHalf the length of the line segment. The segment extends …\nHalf the height of the capsule, excluding the hemicircles\nHalf the length of the line segment. The segment extends …\nHalf the height of the capsule, excluding the hemispheres\nHalf of the width and height of the ellipse.\nHalf of the width and height of the rectangle\nHalf of the width and height of the plane\nHalf of the width, height and depth of the cuboid\nThe height of the cone\nThe height of the frustum\nThe inner circle of the annulus\nGet the inner radius of the torus. For a ring torus, this …\nGet the radius of the largest circle that can be drawn …\nGet the inradius or apothem of the regular polygon. This …\nGet the internal angle of the regular polygon in degrees.\nGet the internal angle of the regular polygon in radians.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the triangle is acute, meaning all angles are …\nChecks if the triangle is acute, meaning all angles are …\nChecks if the triangle is degenerate, meaning it has zero …\nChecks if the triangle is degenerate, meaning it has zero …\nProduces true if the arc is at least half a circle.\nProduces true if the arc is at most half a circle.\nChecks if the triangle is obtuse, meaning one angle is …\nChecks if the triangle is obtuse, meaning one angle is …\nGet the <code>TorusKind</code> determined by the minor and major radii.\nGet the largest side of the triangle.\nGet the surface area of the side of the cylinder, also …\nGet the surface area of the side of the cone, also known …\nGet the left-hand end point of the arc\nGet the length of the arc\nThe distance from the center of the torus to the center of …\nGet the midpoint of the arc\nThe radius of the tube of the torus\nCreate a new <code>Circle</code> from a <code>radius</code>\nCreate a new <code>Arc2d</code> from a <code>radius</code> and a <code>half_angle</code>\nCreate a new <code>CircularSector</code> from a <code>radius</code> and an <code>angle</code>\nCreate a new <code>CircularSegment</code> from a <code>radius</code>, and an <code>angle</code>\nCreate a new <code>Ellipse</code> from half of its width and height.\nCreate a new <code>Annulus</code> from the radii of the inner and outer …\nCreate a new <code>Rhombus</code> from a vertical and horizontal …\nCreate a new <code>Plane2d</code> from a normal\nCreate a new <code>Segment2d</code> from a direction and full length of …\nCreate a new <code>Polyline2d</code> from its vertices\nCreate a new <code>BoxedPolyline2d</code> from its vertices\nCreate a new <code>Triangle2d</code> from points <code>a</code>, <code>b</code>, and <code>c</code>\nCreate a new <code>Rectangle</code> from a full width and height\nCreate a new <code>Polygon</code> from its vertices\nCreate a new <code>BoxedPolygon</code> from its vertices\nCreate a new <code>RegularPolygon</code> from the radius of the …\nCreate a new <code>Capsule2d</code> from a radius and length\nCreate a new <code>Sphere</code> from a <code>radius</code>\nCreate a new <code>Plane3d</code> from a normal and a half size\nCreate a new <code>InfinitePlane3d</code> from a normal\nCreate a new <code>Segment3d</code> from a direction and full length of …\nCreate a new <code>Polyline3d</code> from its vertices\nCreate a new <code>BoxedPolyline3d</code> from its vertices\nCreate a new <code>Cuboid</code> from a full x, y, and z length\nCreate a new <code>Cylinder</code> from a radius and full height\nCreate a new <code>Capsule3d</code> from a radius and length\nCreate a new <code>Torus</code> from an inner and outer radius.\nCreate a new <code>Triangle3d</code> from points <code>a</code>, <code>b</code>, and <code>c</code>.\nCreate a new <code>Tetrahedron</code> from points <code>a</code>, <code>b</code>, <code>c</code> and <code>d</code>.\nCreate a new <code>Extrusion&lt;T&gt;</code> from a given <code>base_shape</code> and <code>depth</code>\nGet the normal of the triangle in the direction of the …\nThe normal of the plane. The plane will be placed …\nThe normal of the plane. The plane will be placed …\nThe normal of the plane. The plane will be placed …\nThe outer circle of the annulus\nGet the outer radius of the torus. This corresponds to the …\nGet the perimeter of the shape\nGet the perimeter or circumference of the circle\nGet an approximation for the perimeter or circumference of …\nGet the perimeter or circumference of the annulus, which …\nGet the perimeter of the rhombus\nGet the perimeter of the triangle\nGet the perimeter of the rectangle\nGet the perimeter of the regular polygon. This is the sum …\nGet the perimeter of the triangle.\nGet the position of the first point on the line segment\nGet the position of the first point on the line segment\nGet the position of the second point on the line segment\nGet the position of the second point on the line segment\nGet the radius of the sector\nGet the radius of the segment\nThe radius of the circle\nThe radius of the circle\nThe radius of the capsule\nThe radius of the sphere\nThe radius of the cylinder\nThe radius of the capsule\nThe radius of the base\nThe radius of the base of the frustum\nThe radius of the top of the frustum\nReverse the <code>WindingOrder</code> of the triangle by swapping the …\nReverse the triangle by swapping the first and last …\nThis triangle but reversed.\nThis triangle but reversed.\nGet the right-hand end point of the arc\nGet the length of the sagitta of this arc, that is, the …\nGet the length of the sagitta of this sector\nGet the length of the sagitta of this segment, also known …\nReturns the length of the semi-major axis. This …\nReturns the length of the semi-minor axis. This …\nGet the length of each side of the rhombus\nGet the length of one side of the regular polygon\nThe number of sides\nGet the signed volume of the tetrahedron.\nGet the size of the rectangle\nGet the size of the cuboid\nGet the slant height of the cone, the length of the line …\nGet the thickness of the annulus\nGet the part connecting the hemispherical ends of the …\nReturns an iterator over the vertices of the regular …\nThe vertices of the polyline\nThe vertices of the polyline\nThe vertices of the triangle\nThe vertices of the <code>Polygon</code>\nThe vertices of the <code>BoxedPolygon</code>\nThe vertices of the polyline\nThe vertices of the polyline\nThe vertices of the triangle.\nThe vertices of the tetrahedron.\nGet the volume of the shape\nGet the volume of the sphere\nGet the volume of the cuboid\nGet the volume of the cylinder\nGet the volume of the capsule\nGet the volume of the cone\nGet the volume of the torus. Note that this only produces …\nGet the volume of the tetrahedron.\nGet the volume of the extrusion\nGet the <code>WindingOrder</code> of the triangle\nThe <code>ShapeSample</code> trait, allowing random sampling from …\nThis module holds local implementations of the <code>Distribution</code>…\nA wrapper struct that allows boundary sampling from a …\nA wrapper struct that allows interior sampling from a …\nThe type of vector returned by the sample methods, <code>Vec2</code> …\nExposes methods to uniformly sample a variety of primitive …\nExtract a <code>Distribution</code> whose samples are points of this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nExtract a <code>Distribution</code> whose samples are points of this …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUniformly sample a point from the surface of this shape, …\nUniformly sample a point from inside the area/volume of …\nErgonomics trait for a type with a <code>Standard</code> distribution, …\nConstruct a value of this type uniformly at random using …\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.")