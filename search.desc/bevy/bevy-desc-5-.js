searchState.loadedDescShard("bevy", 5, "Describe the position of an entity relative to the …\nUse this <code>Resource</code> to control the global volume of all …\nRepresentation of a loaded glTF file.\nLabels that can be used to load part of a glTF\nAdditional untyped data that can be present on most glTF …\nIndicates that something can be grabbed (dragged to be …\nIndicates that something is being grabbed (dragged to be …\nTrait for returning a grayscale color of a provided …\nUse CSS Grid layout model to determine the position of …\nControls whether grid items are placed row-wise or …\nRepresents the position of a grid item in a single axis.\nErrors that occur when setting constraints for a …\nA <code>GridTrack</code> is a Row or Column of a CSS Grid. This struct …\nHow many times to repeat a repeated grid track\nA strong or weak handle to a specific <code>Asset</code>. If a <code>Handle</code> …\nReturns a bool that describes if an entity has the …\nHelp is available for the object under the cursor. Often …\nHelp. Not present on standard PC keyboards.\nError returned if a hex string could not be parsed as a …\nHide overflowing items by influencing layout and then …\nAn entity with <code>Visibility::Hidden</code> will be unconditionally …\nProvides hierarchy functionality to a Bevy app.\nAn extension trait for <code>Query</code> that adds hierarchy related …\nUse for dedicated ひらがな key found on some Japanese …\nHome or ↖\nA torus that has no hole but also doesn’t intersect …\nThe node has been hovered over\nFile is currently being hovered over a window.\nFile hovering was canceled.\nColor in Hue-Saturation-Lightness (HSL) color space with …\nA color in the HSL color space with alpha.\nColor in Hue-Saturation-Value (HSV) color space with alpha.\nA color in the HSV color space with alpha.\nTrait for manipulating the hue of a color.\nColor in Hue-Whiteness-Blackness (HWB) color space with …\nA color in the HWB color space with alpha.\nLegacy modifier key.\nA rectangle defined by two opposite corners.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nA UI node that is an image\nAdds the <code>Image</code> as an asset and makes sure that they are …\nControls how the image is altered when scaled.\nA Input Method Editor event.\nWrapper type to mark a <code>SystemParam</code> as an input.\nThe input type to this system. See <code>System::In</code>.\nThe system’s input. See <code>In</code> for <code>FunctionSystem</code>s.\nUses the monitor with the specified index.\nA small / efficient runtime identifier that can be used to …\nAn unbounded plane in 3D space. It forms a separating …\nInherit from parent node.\nAn entity with <code>Visibility::Inherited</code> will inherit the …\nWhether or not an entity is visible in the hierarchy. This …\nThe type contained within this smart pointer\nInsert or Ins. Not present on Apple keyboards.\nCommand that inserts a child at a given index of a parent…\nDescribes what type of input interaction has occurred for …\nInterpolation method to use between keyframes.\nLocated between the left Shift and Z keys. Labeled \\ on a …\nLocated between the / and right Shift keys. Labeled \\ (ro) …\nLocated between the = and Backspace keys. Labeled ¥ (yen) …\nErrors that occur while converting an <code>Image</code> into a …\nConversion trait to turn something into a <code>System</code>.\nTypes that can convert into a <code>SystemConfigs</code>.\nTypes that can be converted into a <code>SystemSet</code>.\nTypes that can convert into a <code>SystemSetConfigs</code>.\nA torus with non-geometric properties like a minor or …\nAn invalid winding order indicating that it could not be …\nAn I/O error occurred.\nMarker used to identify default cameras, they will have …\nUsed to control how items are distributed.\nUsed to control how each individual item is aligned by …\nUsed to control how the specified item is aligned within …\nDescribes the horizontal alignment of multiple lines of …\nJapanese: カタカナ/ひらがな/ローマ字 …\nUse for dedicated カタカナ key found on some Japanese …\na on a US keyboard. Labeled q on an AZERTY (e.g., French) …\nb on a US keyboard.\nc on a US keyboard.\nThe key code of a <code>KeyboardInput</code>.\nd on a US keyboard.\ne on a US keyboard.\nf on a US keyboard.\ng on a US keyboard.\nh on a US keyboard.\ni on a US keyboard.\nj on a US keyboard.\nk on a US keyboard.\nl on a US keyboard.\nm on a US keyboard.\nn on a US keyboard.\no on a US keyboard.\np on a US keyboard.\nq on a US keyboard. Labeled a on an AZERTY (e.g., French) …\nr on a US keyboard.\ns on a US keyboard.\nt on a US keyboard.\nu on a US keyboard.\nv on a US keyboard.\nw on a US keyboard. Labeled z on an AZERTY (e.g., French) …\nx on a US keyboard.\ny on a US keyboard. Labeled z on a QWERTZ (e.g., German) …\nz on a US keyboard. Labeled w on an AZERTY (e.g., French) …\nList of keyframes for one of the attribute of a <code>Transform</code>.\nProvided the wrong number of knots.\nColor in LAB color space, with alpha\nA color in the LAB color space with alpha.\nMarker struct for labels\nKorean: HangulMode 한/영 (han/yeong)\nKorean: Hanja 한 (hanja)\nJapanese (word-processing keyboard): Katakana\nJapanese (word-processing keyboard): Hiragana\nJapanese (word-processing keyboard): Zenkaku/Hankaku\nRuns last in the schedule.\nSometimes labelled My Computer on the keyboard\nSometimes labelled Calculator on the keyboard\nLaunchMail\nColor in LCH color space, with alpha\nA color in the LCH color space with alpha.\nLeftmost character is immediately to the right of the …\nThe left mouse button.\nThe horizontal value of the left stick.\nThe vertical value of the left stick.\nThe left thumb stick button.\nText is written left to right.\nThe first left trigger.\nThe second left trigger.\nThe value of the left <code>Z</code> button.\nInvalid length.\nConfigures how a color is attributed to a light gizmo.\nThe <code>GizmoConfigGroup</code> used to configure the visualization …\nA marker component for a light probe, which is a cuboid …\nAn infinite line along a direction in 2D space.\nAn infinite line along a direction in 3D space.\nLinear interpolation between the two closest keyframes.\nA linear fog falloff that grows in intensity between <code>start</code> …\nLinear RGB color with alpha.\nA color in the linear sRGB color space with alpha.\nEmitted whenever an <code>Asset</code> has been fully loaded (including …\nA system local <code>SystemParam</code>.\nIndicates the order in which this node should be rendered …\nMethods for changing the luminance of a color. Note that …\nThe schedule that contains the app logic that is evaluated …\nUser-specified color.\nReduce transparency to fully opaque or fully transparent …\nA 2x2 column major matrix.\nA 3x3 column major matrix.\nA 4x4 column major matrix.\nTake the color of the represented light.\nMaterials are used alongside <code>MaterialPlugin</code> and …\n<code>Material{}</code>: glTF Material as a Bevy <code>StandardMaterial</code>\nA component bundle for entities with a <code>Mesh</code> and a <code>Material</code>.\nA UI node that is rendered using a <code>UiMaterial</code>\nAdds the necessary ECS resources and render logic to …\nTrack minimum size should be content sized under a …\nTrack maximum size should be content sized under a …\nA trait for getting measurements of 2D shapes\nA trait for getting measurements of 3D shapes\nMediaPlayPause\nMediaSelect\nMediaStop\nMediaTrackNext\nMediaTrackPrevious\nA 3D object made out of vertices representing triangles, …\n<code>Mesh{}</code>: glTF Mesh as a <code>GltfMesh</code>\nA trait used to build <code>Mesh</code>es from a configuration\nA trait for shapes that can be turned into a <code>Mesh</code>.\nLegacy modifier key. Also called “Super” in certain …\nThe middle mouse button.\nTrack minimum size should be content sized under a …\nTrack maximum size should be content sized under a …\nThis plugin group will add the minimal plugins for a <em>Bevy</em> …\n- on a US keyboard.\nExtends both lines at the joining point until they meet in …\nLinear interpolation of two colors within a given color …\nThe mode button.\nEmitted whenever an <code>Asset</code> value is modified.\nReferences a screen monitor.\n<code>Mesh{}/Primitive{}/MorphTargets</code>: Morph target animation …\nControls the morph targets for all child <code>Handle&lt;Mesh&gt;</code> …\nA button on a mouse device.\nIndicates something is to be moved.\nConfiguration resource for Multi-Sample Anti-Aliasing.\nCombines the color of the fragments with the colors behind …\nUnique mutable borrow of an entity’s component or of a …\nThe north border to be moved.\nComponent used to identify an entity. Stores a hash for …\nThe north-east corner to be moved.\nThe north-east and south-west corners to be moved.\nThe next state of <code>State&lt;S&gt;</code>.\nIndicates that the dragged item cannot be dropped at the …\nSingle line, will overflow if needed.\nBase component for a UI node, which also provides the …\n<code>Node{}</code>: glTF Node as a <code>GltfNode</code>\nThe basic UI node.\nJapanese: 無変換 (muhenkan)\nShared borrow of a non-<code>Send</code> resource.\nUnique borrow of a non-<code>Send</code> resource.\nDoes not draw any line joints.\nNothing has happened\nUse no layout, don’t render this node and its children.\nNo clear color is used: the camera will simply draw on top …\nThe upper action button of the action pad (i.e. PS: …\nIndicates that the requested action will not be carried …\nThe number of control points provided is less than 4.\nThe south and north borders to be moved.\nOn the Mac, this is used for the numpad Clear key.\n0 Ins on a keyboard. 0 on a phone or remote control\n1 End on a keyboard. 1 or 1 QZ on a phone or remote control\n2 ↓ on a keyboard. 2 ABC on a phone or remote control\n3 PgDn on a keyboard. 3 DEF on a phone or remote control\n4 ← on a keyboard. 4 GHI on a phone or remote control\n5 on a keyboard. 5 JKL on a phone or remote control\n6 → on a keyboard. 6 MNO on a phone or remote control\n7 Home on a keyboard. 7 PQRS or 7 PRS on a phone or remote …\n8 ↑ on a keyboard. 8 TUV on a phone or remote control\n9 PgUp on a keyboard. 9 WXYZ or 9 WXY on a phone or remote …\n+\nFound on the Microsoft Natural Keyboard.\nC or A (All Clear). Also for use with numpads that have a …\nC (Clear Entry)\n, (thousands separator). For locales where the thousands …\n. Del. For locales where the decimal separator is “,” …\n/\nThe Enter key on the numpad.\n=\n# on a phone or remote control device. This key is …\nM Add current entry to the value stored in memory.\nM Clear the value stored in memory.\nM Replace the current entry with the value stored in …\nM Replace the value stored in memory with the current …\nM Subtract current entry from the value stored in memory.\n<em> on a keyboard. For use with numpads that provide </em>…\n( Found on the Microsoft Natural Keyboard.\n) Found on the Microsoft Natural Keyboard.\n* on a phone or remote control device.\n-\nThe north-west corner to be moved.\nThe north-west and south-east corners to be moved.\nAn <code>Observer</code> system. Add this <code>Component</code> to an <code>Entity</code> to …\nA simple linear interpolation, using a single texture …\nColor in Oklab color space, with alpha\nA color in the Oklab color space with alpha.\nColor in Oklch color space, with alpha\nA color in the Oklch color space with alpha.\nTrigger emitted when a component is added to an entity.\nThe label of a <code>Schedule</code> that <strong>only</strong> runs whenever <code>State&lt;S&gt;</code> …\nThe label of a <code>Schedule</code> that <strong>only</strong> runs whenever <code>State&lt;S&gt;</code> …\nTrigger emitted when a component is inserted on to to an …\nTrigger emitted when a component is removed from an entity.\nThe label of a <code>Schedule</code> that <strong>only</strong> runs whenever <code>State&lt;S&gt;</code> …\nRun once and stop.\nBase color alpha values are overridden to be fully opaque …\nFound on Sun’s USB keyboard.\nA filter that tests if any of the given filters apply.\nProject a 3D space onto a 2D surface using parallel lines, …\nMiscellaneous buttons, considered non-standard (i.e. Extra …\nNon-standard support for other axis types (i.e. HOTAS …\nAnother mouse button with the associated number.\nThe return type of this system. See <code>System::Out</code>.\nThe system’s output.\nThe <code>Outline</code> component adds an outline outside the edge of …\nThe output of <code>primitive_2d</code>. This is a builder to set …\nThe output of <code>primitive_3d</code>. This is a builder to set …\nThe type of vector returned by the sample methods, <code>Vec2</code> …\nThe output of <code>Self::mesh</code>. This will be a <code>MeshBuilder</code> used …\nWhether to show or hide overflowing items\nWhether to show or hide overflowing items\nPage Down, PgDn, or ⇟\nPage Up, PgUp, or ⇞\nThe parallax mapping method to use to compute depth based …\nAn alternative to <code>Commands</code> that can be used in parallel …\nThe <code>SystemParam</code>/s used by this system to access the <code>World</code>.\nA collection of potentially conflicting <code>SystemParam</code>s …\nHolds a reference to the parent entity of this entity. …\nParsing error.\nFound on Sun’s USB keyboard.\nPause Break\nA component bundle for PBR entities with a <code>Mesh</code> and a …\nThere is a pending transition for state <code>S</code>\nSet the value as a percentage of its parent node’s …\nTrack minimum size should be a percentage value\nTrack maximum size should be a percentage value\n. on a US keyboard.\nA 3D camera projection in which distant objects appear …\nA source of sine wave sound\nBundle for playing a bevy note sound\nAn unbounded plane in 2D space. It forms a separating …\nA bounded plane in 3D space. It forms a surface starting …\nInitial settings to be used when audio starts playing. If …\nA collection of Bevy app logic and configuration.\nCombines multiple <code>Plugin</code>s into a single unit.\nA light that emits light in all directions from a central …\nA component bundle for <code>PointLight</code> entities.\nThe cursor is a pointer that indicates a link. Often …\nA polygon with N vertices.\nA series of connected line segments in 2D space.\nA series of connected line segments in 3D space.\nThe strategy used to position this node\nThe schedule that runs once after <code>Startup</code>.\nThe schedule that contains logic that must run after <code>Update</code>…\nThis key is placed in the function section on some Apple …\nThe schedule that runs before <code>Startup</code>.\nThe schedule that contains logic that must run before …\nNotifies when a new composing text should be set at the …\nSimilar to <code>AlphaMode::Blend</code>, however assumes RGB channel …\nThe node has been pressed.\nUses the primary monitor of the system.\n<code>Mesh{}/Primitive{}</code>: glTF Primitive as a Bevy <code>Mesh</code>\nA marker trait for 2D primitives\nA marker trait for 3D primitives\nPrtScr SysRq or Print Screen\nAssets will be “pre-processed”. This enables assets to …\nA progress indicator. The program is performing some …\nA configurable <code>CameraProjection</code> that can select its …\nFound on Sun’s USB keyboard.\nCommand that adds a child to an entity.\nCommand that pushes children to the end of the entity’s …\nSet this value in logical pixels.\nTrack minimum size should be a fixed pixel value\nTrack maximum size should be a fixed pixel value\nA quaternion representing an orientation.\nSystem parameter that provides selective access to the …\nBuilder struct to create <code>QueryState</code> instances at runtime.\nProvides scoped access to a <code>World</code> state according to a …\n’ on a US keyboard.\nA collection of <code>RationalSegment</code>s chained into a single …\nImplement this on cubic splines that can generate a …\nA segment of a rational cubic curve, used to hold …\nAn infinite half-line starting at <code>origin</code> and going in …\nAn infinite half-line starting at <code>origin</code> and going in …\n<code>System</code> types that do not modify the <code>World</code> when run. This …\nAt least one pass of the fixed update schedules has …\nReal time clock representing elapsed wall clock time.\nAn event that is sent whenever a window receives a …\nA rectangle defined by two opposite corners.\nA rectangle primitive\nShared borrow of an entity’s component with access to …\nThe core trait of <code>bevy_reflect</code>, used for accessing and …\nThe main derive macro used by <code>bevy_reflect</code> for deriving …\nA struct used to operate on reflected <code>Component</code> trait of a …\nA struct used to provide the default value of a type.\nA struct used to deserialize reflected instances of a type.\nType data that represents the <code>FromReflect</code> trait and allows …\nA struct used to operate on the reflected <code>FromWorld</code> trait …\nSomething that can be interpreted as a reflection path in …\nA struct used to operate on reflected <code>Resource</code> of a type.\nA struct used to serialize reflected instances of a type.\nA bundle that contains everything needed to make an entity …\nA polygon where all vertices lie on a circle, equally far …\nRelative to all other nodes with the <code>PositionType::Relative</code>…\nDiscovers the best depth value based on binary search.\nCommand that removes children from an entity, and removes …\nCommand that removes the parent of an entity, and removes …\nEmitted whenever an <code>Asset</code> is removed.\nA <code>SystemParam</code> that yields entities that had their <code>T</code> …\nRepresents a <em>possibly</em> repeated <code>GridTrack</code>.\nReset when finished.\nCommand that clear all children from an entity, replacing …\nShared borrow of a <code>Resource</code>.\nUnique mutable borrow of a <code>Resource</code>.\nA type that can be inserted into a <code>World</code> as a singleton.\nResume\nA rhombus primitive, also known as a diamond shape.\nRightmost character is immediately to the left of the …\nThe right mouse button.\nThe horizontal value of the right stick.\nThe vertical value of the right stick.\nThe right thumb stick button.\nText is written right to left.\nThe first right trigger.\nThe second right trigger.\nThe value of the right <code>Z</code> button.\nA torus that has a ring. The major radius is greater than …\nAn error occurred in RON serialization or deserialization.\nA counterclockwise 2D rotation.\nKeyframes for rotation.\nDraws a round corner with the specified resolution between …\nSame way as text direction along the main axis.\nItems are placed by filling each row in turn, adding new …\nCombines <code>Row</code> with the dense packing algorithm.\nIndicates that the item/row can be resized vertically. …\nOpposite way as text direction along the main axis.\nUpdates the running gamepad rumble effects.\nThe total <code>DEPENDENCY_DEPTH</code> of all the states that are part …\nThe south border to be moved.\nA constant indicating the storage type used for this …\nKeyframes for scale.\nTo spawn a scene, you can use either:\n<code>Scene{}</code>: glTF Scene as a Bevy <code>Scene</code>\nA component bundle for a <code>Scene</code> root.\nA filter used to control which types can be added to a …\nHandles spawning and despawning scenes in the world, …\nA collection of systems, and the metadata and executor …\nResource that stores <code>Schedule</code>s mapped to <code>ScheduleLabel</code>s …\nPlugin for screen space ambient occlusion.\nScroll Lock\nThe south-east corner to be moved.\nA segment of a line along a direction in 2D space.\nA segment of a line along a direction in 3D space.\nThe select button.\nFound on Sun’s USB keyboard.\n; on a US keyboard.\nA version of <code>Handle&lt;AnimationClip&gt;</code> suitable for …\nA version of <code>AnimationGraph</code> suitable for serializing as an …\nA version of <code>AnimationGraphNode</code> suitable for serializing …\nThe type of <code>SystemSet</code> this instance converts into.\nA shader, as defined by its <code>ShaderSource</code> and <code>ShaderStage</code> …\nExposes methods to uniformly sample a variety of primitive …\nShift or ⇧\nShift or ⇧\nControls whether or not the events in an <code>EventRegistry</code> …\nAdd this <code>Component</code> to an entity to draw its <code>Aabb</code> component.\nAdd this <code>Component</code> to an entity to draw any of its lights …\n<code>Skin{}</code>: glTF mesh skin as Bevy <code>SkinnedMeshInverseBindposes</code>\n/ on a US keyboard.\nSleep\nDefines how a texture slice scales when resized\nThe texture will be cut in 9 slices, keeping the texture …\nA solid line without any decorators\nThe set of states from which the <code>Self</code> is derived.\nThe set of states from which the <code>Self</code> is derived.\nThe bottom action button of the action pad (i.e. PS: …\n  (space)\nThe items are distributed such that the gap between and …\nThe items are distributed such that the gap between and …\nThe items are distributed such that the gap between any …\nThe items are distributed such that the gap between any …\nThe items are distributed such that the gap between and …\nThe items are distributed such that the gap between and …\nAn error occurred in RON deserialization, and the location …\nUsed to control spatial audio during playback.\nA <code>Bundle</code> that allows the correct positional rendering of …\nSettings for the listener for spatial audio sources.\nThe schedule that contains scene spawning.\nA sphere primitive\nA self-intersecting torus. The major radius is less than …\nA light that emits light in a given direction from a …\nA component bundle for spot light entities\nSpecifies the rendering properties of a sprite.\nA <code>Bundle</code> of components for drawing a single sprite from an …\nA <code>Bundle</code> of components for drawing a single sprite from a …\nNon-linear standard RGB with alpha.\nA color in the sRGB color space with alpha.\nA material with “standard” properties used in PBR …\nThe start button.\nThe items are packed towards the start of the axis.\nThe items are packed towards the start of the axis.\nThis item will be aligned with the start of the axis.\nThis item will be aligned with the start of the axis.\nThe items are packed towards the start of the axis.\nThe items are packed towards the start of the axis.\nThe schedule that runs once when the app starts.\nA finite-state machine whose transitions have associated …\nEntities marked with this component will be removed when …\nA <code>States</code> type or tuple of types which implement <code>States</code>.\nRuns state transitions.\nEvent sent when any state transition of <code>S</code> happens. This …\nTypes that can define world-wide states in a finite-state …\nStep interpolation, the value of the start keyframe is …\nThe slice will be stretched to fit the area\nThe items are stretched to fill the space they’re given.\nThe items are stretched to fill the space they’re given.\nThis item will be stretched to fill the container.\nThis item will be stretched to fill the space it’s given.\nThe items are stretched to fill the container along the …\nThe items are stretched to fill the container along the …\nA “strong” reference to a live (or loading) <code>Asset</code>. If …\nA trait used to power struct-like operations via reflection…\nDescribes the style of a UI container node\nA secondary application with its own <code>World</code>. These can run …\nA sub-state is a state that exists only when the source …\n<code>App</code> exited without any problems.\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Windows, ⌘, Command, or other OS symbol key.\nSuspend\nThe south-west corner to be moved.\nAn ECS system that can be added to a <code>Schedule</code>\nThe type of <code>System</code> that this instance converts into.\nBuilder struct used to construct state for <code>SystemParam</code> …\nA trait implemented for all functions that can be used as …\nTypes that identify logical groups of systems.\nDerive macro generating an impl of the trait <code>SystemSet</code>.\nTab or ⇥\nIndicates that this root <code>Node</code> entity should be rendered to …\nHelper for configuring and creating the default task …\nSetup of default task pools: <code>AsyncComputeTaskPool</code>, …\nA tetrahedron primitive.\nIndicates text that may be selected. Often rendered as an …\nThe bundle of components needed to draw text in a 2D scene …\nA UI node that is text\n<code>Texture{}</code>: glTF Texture as a Bevy <code>Image</code>\nComponent used to draw a specific section of a texture.\nA builder which is used to create a texture atlas from …\nStores a map used to lookup the position of a texture in a …\nSingle texture slice, representing a texture rect to draw …\nSlices a texture using the <strong>9-slicing</strong> technique. This …\nThe slice will be tiled to fit the area\nThe texture will be repeated if stretched beyond …\nA generic clock resource that tracks how much it has …\nTracks elapsed time. Enters the finished state once …\nSpecifies <code>Timer</code> behavior.\nA torus primitive, often representing a ring or donut shape\nThe type of torus determined by the minor and major radii\nA touch input event.\nA collection of <code>Touch</code>es.\nDescribe the position of an entity. If the entity has a …\nA <code>Bundle</code> of the <code>Transform</code> and <code>GlobalTransform</code> [<code>Component</code>]…\nSystem parameter for computing up-to-date <code>GlobalTransform</code>s.\nThe base plugin for handling <code>Transform</code> components\nA trait for point transformation methods.\nPropagates changes in transform to children’s …\nSet enum for the systems relating to transform propagation\nSystem set that runs transition schedule(s) for state <code>S</code>.\nKeyframes for translation.\nA triangle in 2D space\nA 3D triangle primitive.\nType containing triggered <code>Event</code> information for a given …\nA trait used to power tuple struct-like operations via …\nTurbo\nA static accessor to type paths and names.\nDerives the <code>TypePath</code> trait, providing a stable alternative …\nRegistration of default types to the <code>TypeRegistry</code> resource.\nA rectangle defined by two opposite corners.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nThe 2D texture displayed for this UI node\nMaterials are used alongside <code>UiMaterialPlugin</code> and …\nAdds the necessary ECS resources and render logic to …\nA type which is commonly used to define margins, paddings …\nThe current scale of the UI.\nNo state transition is pending\nFound on Sun’s USB keyboard.\nThis variant is used when the key cannot be translated to …\nEncountered an unknown error during conversion.\nLoads assets from their <code>AssetSource</code>’s default <code>AssetReader</code>…\nRepresents an unset filter.\nConversion into dynamic image not supported for source …\nAn untyped variant of <code>Handle</code>, which internally stores the …\nEmitted when the last <code>super::Handle::Strong</code> of an <code>Asset</code> is …\nThe schedule that contains app logic. Ideally containing …\nA stable-across-runs / const asset identifier. This will …\nSet this value in percent of the viewport’s larger …\nTrack minimum size should be a percent of the viewport’s …\nTrack maximum size should be a percent of the viewport’s …\nSet this value in percent of the viewport’s smaller …\nTrack minimum size should be a percent of the viewport’s …\nTrack maximum size should be a percent of the viewport’s …\nRepresents the possible value types for layout properties.\nPrint a warning for each <code>Entity</code> with a <code>T</code> component whose …\nDescribes how an attribute of a <code>Transform</code> or <code>MorphWeights</code> …\nRandom color derived from the light’s <code>Entity</code>.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nIndicates vertical-text that may be selected. Often …\nSet this value in percent of the viewport height\nTrack minimum size should be a percent of the viewport’s …\nTrack maximum size should be a percent of the viewport’s …\nAlgorithmically-computed indication of whether an entity …\nThe virtual game clock representing game time.\nUser indication of whether an entity is visible. …\nA <code>Bundle</code> of the <code>Visibility</code>, <code>InheritedVisibility</code>, and …\nShow overflowing items.\nAn entity with <code>Visibility::Visible</code> will be unconditionally …\nSet this value in percent of the viewport width\nTrack minimum size should be a percent of the viewport’s …\nTrack maximum size should be a percent of the viewport’s …\nA pure white color.\nThe west border to be moved.\nIndicates that the program is busy and the user should …\nWe need to wait until at least one pass of the fixed …\nWakeUp\nA “weak” reference to an <code>Asset</code>. If a <code>Handle</code> is …\nKeyframes for morph target weights.\nProvided a different number of weights and control points.\nThe left action button of the action pad (i.e. PS: Square, …\nThe winding order for a set of points\nThe defining <code>Component</code> for window entities, storing …\nAn event that is sent when a window is repositioned in …\nA <code>Plugin</code> that defines an interface for windowing support …\nDefines where a <code>Window</code> should be placed on the screen.\nThe size limits on a <code>Window</code>.\nFilter that selects entities with a component <code>T</code>.\nFilter that selects entities without a component <code>T</code>.\nStores and exposes operations on entities, components, …\nStruct for adding children to an entity directly through …\nMultiple lines, if needed.\nSame as <code>FlexWrap::Wrap</code> but new lines will appear before …\nIntrinsic three-axis rotation XYZ\nIntrinsic three-axis rotation XZY\nCIE 1931 color space, also known as XYZ, with an alpha …\nA color in the XYZ color space with alpha.\nIntrinsic three-axis rotation YXZ\nIntrinsic three-axis rotation YZX\nThe Z button.\nIndicates that this <code>Node</code> entity’s front-to-back ordering …\nIntrinsic three-axis rotation ZXY\nIntrinsic three-axis rotation ZYX\nIndicates that something can be zoomed in. Often rendered …\nIndicates that something can be zoomed in. Often rendered …\nThe a axis. [-1.5, 1.5]\nThe ‘a’ channel. [-1.0, 1.0]\nInsert an asset similarly to <code>Assets::add</code>.\nAdds a single child.\nAdds a single child.\nSets up a type implementing <code>ComputedStates</code>.\nSets up a type implementing <code>SubStates</code>.\nWhether or not to additively blend this input into the …\nA system that alters the weight of currently-playing …\nRun after all systems in <code>set</code>. If <code>set</code> has any systems that …\nRuns before all systems in <code>set</code>. If <code>set</code> has any systems …\nRun after all systems in <code>set</code>.\nRun after all systems in <code>set</code>.\nUsed to control how items are distributed.\nUsed to control how each individual item is aligned by …\nUsed to control how the specified item is aligned within …\nReturn a the alpha component of this color.\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nReturns this material’s <code>AlphaMode</code>. Defaults to …\nHow to apply the alpha channel of the <code>base_color_texture</code>.\nSuppress warnings and errors that would result from these …\nSuppress warnings and errors that would result from …\nSuppress warnings and errors that would result from these …\nSuppress warnings and errors that would result from …\n<code>Anchor</code> point of the sprite in the world\nReturns a new run condition that only returns <code>true</code> if both …\nAll animations loaded from the glTF file.\nThe direction of increased roughness, in radians relative …\nIncreases the roughness along a specific direction, so …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if there …\nApplies a reflected value to this value.\nInstructs the executor to call <code>System::apply_deferred</code> on …\nApplies any <code>Deferred</code> system parameters (or other system …\nThe arc defining the sector\nThe arc defining the segment\nReturns the system’s archetype component <code>Access</code>.\nGet the area of the shape\nGet the surface area of the shape\nThe area that the projection covers relative to …\nReturns the value as a <code>&amp;dyn Any</code>.\nReturns the value as a <code>&amp;mut dyn Any</code>.\nCasts this value to a form where it can be compared with …\nCasts this type to a reflected value.\nCasts this type to a mutable reflected value.\nThe aspect ratio of the node (defined as <code>width / height</code>)\nThe aspect ratio (width divided by height) of the viewing …\nUsed to determine number of async compute threads to …\nThe sprite sheet texture atlas, allowing to draw a custom …\nThe resulting (non-absorbed) color after white light …\nHow far, on average, light travels through the volume …\nThe type of the axis.\nThe b axis. [-1.5, 1.5]\nThe ‘b’ channel. [-1.0, 1.0]\nThe background color, which serves as a “fill” for …\nThe color of the background that will fill the containing …\nThe background color that will fill the containing node\nThe background color that will fill the containing node\nThe color of the surface of the material before lighting.\nThe UV channel to use for the …\nThe texture component of the material’s color before …\nThe base shape of the extrusion\nRuns before all systems in <code>set</code>. If <code>self</code> has any systems …\nRuns before all systems in <code>set</code>. If <code>self</code> has any systems …\nRun before all systems in <code>set</code>.\nRun before all systems in <code>set</code>.\nThe blackness channel. [0.0, 1.0]\nBlends one or more values together.\nThe blue channel. [0.0, 1.0]\nThe blue channel. [0.0, 1.0]\nThe sprite borders, defining the 9 sections of the image\nThe amount of space between the margins of a node and its …\nThe color of the Node’s border\nThe color of the Node’s border\nThe border radius of the node\nThe border radius of the node\nThe value corresponding to the bottom side of the UI rect.\nPixel padding to the bottom\nThe vertical position of the bottom edge of the node.\nExtract a <code>Distribution</code> whose samples are points of this …\nA direct scale factor multiplied with <code>color</code> before being …\nConfigures the <code>App</code> to which this plugin is added.\nConfigures the <code>Plugin</code>s that are to be added.\nBuilds a <code>Mesh</code> based on the configuration in <code>self</code>.\nMarker component that signals this node is a button\nThe type of the button.\nManually bypasses change detection, allowing you to mutate …\nRaw data of the audio source.\nThe calculated size based on the given image\nThe calculated size based on the given image\nThe calculated size based on the given image\nThe “html canvas” element selector.\nDefines how the center part of the 9 slices will scale\nTreat this collection as a sequence of systems.\nTreat this collection as a sequence of system sets.\nTreat this collection as a sequence of systems.\nTreat this collection as a sequence of systems.\nReceived character.\nChecks any <code>Tick</code>s stored on this system and wraps their …\n<code>Entity</code> whose parent must be removed.\nChild entity to add.\nThe chroma channel. [0.0, 1.5]\nThe ‘chroma’ channel. [0.0, 1.0]\nThe circumcircle on which all vertices lie\nRuns after all plugins are built and finished, but before …\nRemoves all children from this entity. The <code>Children</code> …\nRemoves all children from this entity. The <code>Children</code> …\nThe clear color operation to perform on the render target.\nAn extra thin translucent layer on top of the main PBR …\nThe roughness of the clearcoat material. This is specified …\nThe animation clip associated with this node, if any.\nCorresponds to the <code>clip</code> field on <code>AnimationGraphNode</code>.\nThe rect of the clip\nClones the struct into a <code>DynamicStruct</code>.\nClones the struct into a <code>DynamicTupleStruct</code>.\nClones the value as a <code>Reflect</code> trait object.\nWhether to close windows when they are requested to be …\nCoefficients of the segment\nThe coefficients matrix of the cubic curve.\nThe color of the box.\nDefault color strategy for all light gizmos.\nDefault color strategy for this light gizmo. if <code>None</code>, use …\nThe sprite’s color tint\nThe color of the fog effect.\nThe color of this light source.\nThe color of the outline.\nThe tint color used to draw the image.\nThe size of the gutters between items in a horizontal …\nReturns the system’s component <code>Access</code>.\nHow the alpha channel of textures should be handled while …\nComputes the next value of <code>State&lt;Self&gt;</code>. This function gets …\nUsed to determine number of compute threads to allocate\nComputed values for this camera, such as the projection …\nThe currently used <code>GizmoConfig</code>\nThe currently used <code>GizmoConfigGroup</code>\nThe control points of the Bezier curve\nThe control points of the Hermite curve\nThe control points of the Cardinal spline\nThe control points of the spline\nThe control points of the NURBS\nThe cosine of the rotation angle in radians.\nReturns the name of the crate the type is in, or <code>None</code> if …\nWhether to cull the “front”, “back” or neither …\nThe cursor of this window.\nAn optional custom size for the sprite that will be used …\nReturn a darker version of this color. The <code>amount</code> should …\nDebug formatter for the value.\nConstructs an event at the debug level.\nCall <code>debug!</code> once per call site.\nConstructs a span at the debug level.\nBuild and return a <code>Self::Decoder</code> of the implementing type\nShould the window have decorations enabled?\nAn ergonomic abbreviation for <code>Default::default()</code> to make …\nThe default color for bounding box gizmos.\nThe default image sampler to use when <code>ImageSampler</code> is set …\nDefault scene to be displayed.\nReturns the system’s default system sets.\nReturns this material’s deferred fragment shader. If …\nUsed for selecting the deferred lighting pass for deferred …\nReturns this material’s deferred vertex shader. If …\nThe change in the position of the cursor since the last …\nAdd a bias to the view depth of the mesh which can be used …\nHow closer to the camera than real geometry the line …\nAdjust rendered depth.\nThe depth clear operation to perform for the main 3d pass.\nThe depth map used for parallax mapping.\nThe texture usages for the depth texture created for the …\nOptional hint given to the rendering API regarding the …\nDespawns all descendants of the given entity.\nDespawns the provided entity alongside all descendants.\nFunction for despawning an entity and all its children\nThe blurry image that represents diffuse radiance …\nThe amount of light transmitted <em>diffusely</em> through the …\nDefines the text direction. For example, English is …\nThe direction of the line. The line extends infinitely in …\nThe direction of the line segment\nThe direction of the line\nThe direction of the line\nThe direction of the ray.\nThe direction of the ray.\n<code>Color</code> to use for drawing a <code>DirectionalLight</code> gizmo when …\nColor used to modulate the influence of directional light …\nThe exponent applied to the directional light alignment …\nWhich layout algorithm to use when laying out this node’…\nAdd a run condition to each contained system.\nSupport two-sided lighting by automatically flipping the …\nDraws all bounding boxes in the scene when set to <code>true</code>.\nDraw a gizmo for all lights if true.\nslice draw size\nDuration for which sound will be played\nClones this <code>SystemSet</code>.\nFeeds this value into the given <code>Hasher</code>.\nGets a <code>&amp;T</code> to the specified element on the given <code>Reflect</code> …\nGets a <code>&amp;mut T</code> to the specified element on the given <code>Reflect</code>…\nColor the material “emits” to the camera.\nThe UV channel to use for the …\nThe weight in which the camera exposure influences the …\nThe emissive map, multiplies pixels with <code>emissive</code> to get …\nReturns true if this sink has no more sounds to play.\nEnable state-scoped entity clearing for state <code>S</code>.\nSet to <code>false</code> to stop drawing gizmos.\nSpecifies which window control buttons should be enabled.\nThe state being entered.\nThe state being entered.\nEntities contained in the dynamic scene.\nThe unique identifier of the entity as a fallback.\nTarget entity\nTarget entity\nThe cubemaps that make up this environment map.\nConstructs an event at the error level.\nCall <code>error!</code> once per call site.\nConstructs a span at the error level.\nWhether to exit the app when there are no open windows.\nThe state being exited.\nThe state being exited.\nA system that removed transitions that have completed from …\nDetermines which falloff mode to use, and its parameters.\nThe distance from the camera in world units of the viewing …\nThe distance of the far clipping plane in world units.\nReturns a reference to the value of the field named <code>name</code> …\nReturns a reference to the value of the field with index …\nReturns a reference to the value of the field with index …\nReturns a mutable reference to the value of the field with …\nReturns the number of fields in the struct.\nReturns the number of fields in the tuple struct.\nReturns a mutable reference to the value of the field …\nReturns a mutable reference to the value of the field with …\nThe default file path to use (relative to the project …\nFinish adding this plugin to the <code>App</code>, once all plugins …\nWhether or not to fit the canvas element’s size to its …\nThe initial length of a flexbox in the main axis, before …\nWhether a Flexbox container should be a row or a column. …\nDefines how much a flexbox item should grow if there’s …\nDefines how much a flexbox item should shrink if there’s …\nWhether a Flexbox container should wrap its contents onto …\nNormal map textures authored for DirectX have their …\nFlip the sprite along the <code>X</code> axis\nWhether the image should be flipped along its x-axis\nFlip the sprite along the <code>Y</code> axis\nWhether the image should be flipped along its y-axis\nWhether this node should block interaction with lower nodes\nWhether this node should block interaction with lower nodes\nWhether this node should block interaction with lower nodes\nWhether this node should block interaction with lower nodes\nWhether this node should block interaction with lower nodes\nWhether this node should block interaction with lower nodes\nGet/set whether the window is focused.\nWhether to enable fog for this material.\nIf this is not specified, then\nThe vertical height of rasterized glyphs in the font atlas …\nDescribes how hard the screen was pressed.\nThe vertical field of view (FOV) in radians.\nReturns this materials fragment shader. If …\nReturns this material’s fragment shader. If …\nFrequency at which sound will be played\nConvert from an f32 array\nConvert from an f32 array without the alpha value\nConstructs a concrete instance of <code>Self</code> from a reflected …\nConstruct a value of this type uniformly at random using …\nConvert from [u8; 4] where that makes sense (Srgba is most …\nConvert to [u8; 3] where that makes sense (Srgba is most …\nConvert from a Vec3\nConvert from a Vec4\nCreates <code>Self</code> using data from the given <code>World</code>.\nThe gamepad on which the button is located on.\nThe gamepad on which the axis is located on.\nGets this <code>Bundle</code>’s component ids. This will be <code>None</code> if …\nReturns a reference to the value of the field named <code>name</code>, …\nReturns a reference to the value of the field with index …\nReturns a mutable reference to the value of the field …\nReturns a mutable reference to the value of the field with …\nGets the tick indicating the last time this system ran.\nReturns the <code>TypeInfo</code> of the type <em>represented</em> by this value.\nThe global transform of the entity.\nGlobal transform of the scene root entity.\nGlobal transform of the scene root entity.\nThe absolute transform of the sprite. This should …\nThe absolute transform of the sprite. This should …\nThe global transform of the text.\nThe global transform of the node\nThe global transform of the node\nThe global transform of the node\nThe global transform of the node\nThe global transform of the node\nThe global transform of the node\nThe global transform of the entity.\nThe <code>petgraph</code> data structure that defines the animation …\nCorresponds to the <code>graph</code> field on <code>AnimationGraph</code>.\nReturns a grey color with the provided lightness from (0.0 …\nThe green channel. [0.0, 1.0]\nThe green channel. [0.0, 1.0]\nDefines the size of implicitly created columns. Columns …\nControls whether automatically placed grid items are …\nDefines the size of implicitly created rows. Rows are …\nThe column in which a grid item starts and how many …\nThe row in which a grid item starts and how many rows it …\nDefines the number of columns a grid has and the sizes of …\nDefines the number of rows a grid has and the sizes of …\nHalf the angle defining the arc\nHalf of the depth of the extrusion\nSize of the horizontal and vertical diagonals of the …\nThe half height of the cylinder\nHalf the length of the line segment. The segment extends …\nHalf the height of the capsule, excluding the hemicircles\nHalf the length of the line segment. The segment extends …\nHalf the height of the capsule, excluding the hemispheres\nHalf of the width and height of the ellipse.\nHalf of the width and height of the rectangle\nHalf of the width and height of the plane\nHalf of the width, height and depth of the cuboid\nReturns true if system as deferred buffers\nIf this is set to <code>true</code>, the camera will use an …\nThe ideal height of the node. <code>height</code> is used when it is …\nThe height of the cone\nThe height of the frustum\nReturn the hue of this color [0.0, 360.0].\nThe hue channel. [0.0, 360.0]\nThe hue channel. [0.0, 360.0]\nThe hue channel. [0.0, 360.0]\nThe hue channel. [0.0, 360.0]\nThe ‘hue’ channel. [0.0, 360.0]\nThe <code>ID</code> of the gamepad.\nThe unique identifier of the finger.\nList of <code>ComponentId</code>s to ignore when reporting system order …\nIlluminance in lux (lumens per square meter), representing …\nThe image of the node.\nThe image of the node\nThe image of the node\nThe size of the image in pixels\nThe size of the image in pixels\nShould the window use Input Method Editor?\nSets location of IME candidate box in client area …\nAdd these systems to the provided <code>set</code>.\nAdd these system sets to the provided <code>set</code>.\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nTexture atlas section index\nConstructs an event at the info level.\nCall <code>info!</code> once per call site.\nConstructs a span at the info level.\nInherited visibility of an entity.\nInherited visibility of the scene root entity.\nInherited visibility of the scene root entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nThe inherited visibility of the entity.\nInitializes the given <code>Asset</code> in the <code>App</code> by:\nInitializes the given loader in the <code>App</code>’s <code>AssetServer</code>.\nRegisters <code>GizmoConfigGroup</code> in the app enabling the use of …\nInitializes a <code>State</code> with standard starting values.\nInitialize the system.\nAngle defining the distance from the spot light direction …\nThe inner circle of the annulus\nInserts children at the given index.\nInserts children at the given index.\nInsert a <code>GizmoConfig</code> into a specific <code>GizmoConfigGroup</code>.\nInserts a specific <code>State</code> to the current <code>App</code> and overrides …\nLuminous power in lumens, representing the amount of light …\nLuminous power in lumens, representing the amount of light …\nScale factor applied to the diffuse and specular light …\nDescribes whether and how the button has been interacted …\nExtract a <code>Distribution</code> whose samples are points of this …\nReturns an <code>Interned</code> value corresponding to <code>self</code>.\nStores internal state that isn’t directly accessible.\nInterpolates between <code>a</code> and <code>b</code> with  a interpolation factor …\nInterpolation method to use between keyframes.\nReturns the value as a <code>Box&lt;dyn Any&gt;</code>.\nConvert into a <code>SystemConfigs</code>.\nCasts this type to a boxed reflected value.\nTurns this value into its corresponding <code>System</code>.\nConverts this instance to its associated <code>SystemSet</code> type.\nReturns <code>v</code> normalized to the range <code>[a, b]</code>.\nUsed to determine number of IO threads to allocate\nThe index of refraction of the material.\nIf this is set to <code>true</code>, this camera will be rendered to …\nReturns <code>true</code> if this value was added after the system last …\nReturns <code>true</code> if this system set is an <code>AnonymousSet</code>.\nReturns <code>true</code> if this value was added or mutably …\nIndicates whether or not this type is a <em>dynamic</em> type.\nReturns true if the system must be run exclusively.\nIs the alpha component of this color greater than or equal …\nIs the alpha component of this color less than or equal to …\nIs this sink paused?\nReturns true if the system is <code>Send</code>.\nIf the plugin can be meaningfully instantiated several …\nReturns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …\nReturns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …\nReturns an iterator over the values of the reflectable …\nReturns an iterator over the values of the tuple struct’…\nThe text’s internal alignment. Should not affect its …\nUsed to control how items are distributed.\nUsed to control how each individual item is aligned by …\nUsed to control how the specified item is aligned within …\nTimestamp for each of the keyframes.\nList of the keyframes.\nThe width of the domain of this segment.\nKnots\nReturns the change tick recording the time this data was …\nReturns the latest state transition event of type <code>S</code>, if …\nTexture atlas layout handle\nThe value corresponding to the left side of the UI rect.\nPixel padding to the left\nThe horizontal position of the left edge of the node.\nLeft ear position relative to the <code>GlobalTransform</code>.\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nConstants for operating with the light units: lumens, and …\nMarks this environment map as a light probe.\nReturn a lighter version of this color. The <code>amount</code> should …\nThe exposure (brightness) level of the lightmap, if …\nThe lightness channel. [0.0, 1.0]\nThe lightness channel. [0.0, 1.5]\nThe lightness channel. [0.0, 1.5]\nThe ‘lightness’ channel. [0.0, 1.0]\nThe ‘lightness’ channel. [0.0, 1.0]\nDescribe how lines should join\nApply perspective to gizmo lines.\nDetermine the style of gizmo lines.\nLine width specified in pixels.\nHow the text should linebreak when running out of the …\nLoad an asset similarly to <code>AssetServer::load</code>.\nLoad an asset with settings, similarly to …\nThe transform of the entity.\nReturn the luminance of this color (0.0 - 1.0).\nThe distance from the center of the torus to the center of …\nPass the output of this system into the passed function <code>f</code>, …\nMap an entity to another entity\nThe amount of space around a node outside its border.\nThe <code>UiMaterial</code> used to render the node.\nAll materials loaded from the glTF file.\nThe maximum corner point of the rect.\nThe maximum corner point of the rect.\nThe maximum corner point of the rect.\nDefines the maximum scale of the 4 corner slices (default …\nThe maximum height the window can have.\nThe maximum height of the node. <code>max_height</code> is used if it …\nIn how many layers to split the depth maps for parallax …\nIf the number of physical cores is greater than …\nThe maximum width the window can have.\nThe maximum width of the node. <code>max_width</code> is used if it is …\nCreates a <code>Mesh</code> for a shape.\nAll meshes loaded from the glTF file.\nHow/If asset meta files should be checked.\nHow “metallic” the material appears, within <code>[0.0, 1.0]</code>.\nThe UV channel to use for the …\nMetallic and roughness maps, stored as a single texture.\nThe minimum corner point of the rect.\nThe minimum corner point of the rect.\nThe minimum corner point of the rect.\nThe minimum height the window can have.\nThe minimum height of the node. <code>min_height</code> is used if it …\nIf the number of physical cores is less than …\nThe minimum width the window can have.\nThe minimum width of the node. <code>min_width</code> is used if it is …\nThe radius of the tube of the torus\nLinearly interpolate between this and another color, by …\nLinearly interpolate between this and another color, by …\nThe desired playback behavior.\nWhich fullscreen or windowing mode should be used.\nThe <code>AssetMode</code> to use for this server.\nReturns the path to the module the type is in, or <code>None</code> if …\nIf this is enabled, a previous camera exists that shares …\nReturns the system’s name.\nConfigures a name for the <code>Plugin</code> which is primarily used …\nConfigures a name for the <code>PluginGroup</code> which is primarily …\nA <code>Name</code> that the entity might have that is displayed if …\nStores the application ID (on <strong><code>Wayland</code></strong>), <code>WM_CLASS</code> (on <strong><code>X11</code></strong>) …\nReturns the name of the field with index <code>index</code>.\nNamed animations loaded from the glTF file.\nNamed materials loaded from the glTF file.\nNamed meshes loaded from the glTF file.\nNamed nodes loaded from the glTF file.\nNamed scenes loaded from the glTF file.\nThe distance from the camera in world units of the viewing …\nThe distance of the near clipping plane in world units.\nDescribes the logical size of the node\nDescribes the logical size of the node\nDescribes the logical size of the node\nDescribes the logical size of the node\nDescribes the logical size of the node\nDescribes the logical size of the node\nAll nodes loaded from the glTF file.\nThe normal of the plane. The plane will be placed …\nThe normal of the plane. The plane will be placed …\nThe normal of the plane. The plane will be placed …\nThe UV channel to use for the …\nUsed to fake the lighting of bumps and dents on a material.\nGenerates a <code>Condition</code> that inverses the result of passed …\nThe UV channel to use for the …\nSpecifies the level of exposure to ambient light.\noffset of the slice\nThe amount of space between a node’s outline the edge of …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nCall some expression only once per call site.\nReturns if this material should be rendered by the …\nRender method used for opaque materials. (Where <code>alpha_mode</code> …\nReturns a new run condition that returns <code>true</code> if either …\nCameras with a higher order are rendered later, and thus …\nThe origin of the ray.\nThe origin of the ray.\nAngle defining the distance from the spot light direction …\nThe outer circle of the annulus\nThe <code>CameraOutputMode</code> for this camera.\nWhether overflowing content should be displayed or clipped.\nThe amount of space between the edges of a node and its …\nHow deep the offset introduced by the depth map should be.\nWhich parallax mapping method to use.\nParent entity to add the child to.\nReturns a statically typed reference to the value …\nReturns a statically typed mutable reference to the value …\nPauses playback of this sink.\nCreate the sink in paused state. Useful for “deferred …\nLinear perceptual roughness, clamped to <code>[0.089, 1.0]</code> in …\nGet the perimeter of the shape\nThe phase of the touch input.\nPass the output of this system <code>A</code> into a second system <code>B</code>, …\nResumes playback of a paused sink.\n<code>Color</code> to use for drawing a <code>PointLight</code> gizmo when …\nThe cursor position in logical pixels.\nWhere the window moved to in physical pixels.\nWhere the window should be placed.\nThe position of the finger on the touchscreen.\nWhether a node should be laid out in-flow with, or …\nPost-processes the value using resources in the <code>World</code>. …\nControls if the prepass is enabled for the Material. For …\nReturns this material’s prepass fragment shader. If …\nReturns this material’s prepass vertex shader. If …\nPreregisters a loader for the given extensions, that will …\nWhat presentation mode to give the window.\nWhether or not to stop events from propagating out of the …\nSettings for the primary window.\nRenders a 2D primitive with its associated details.\nRenders a 3D primitive with its associated details.\nThe default file path to use (relative to the project …\nNote: default value for <code>OrthographicProjection.near</code> is <code>0.0</code> …\nPushes children to the back of the builder’s children. …\nPushes children to the back of the builder’s children. …\nEnqueues any <code>Deferred</code> system parameters (or other system …\nThe radius of the circle\nThe radius of the circle\nSimulates a light source coming from a spherical volume …\nThe radius of the capsule\nThe radius of the sphere\nThe radius of the cylinder\nThe radius of the capsule\nThe radius of the base\nThe radius of the base of the frustum\nThe radius of the top of the frustum\nCut-off for the light’s area-of-effect. Fragments …\nReturns whether the material would like to read from …\nHas the plugin finished its setup? This can be useful for …\nSets whether this window recognizes [<code>DoubleTapGesture</code>]\nSets whether this window recognizes [<code>PanGesture</code>], with a …\nSets whether this window recognizes [<code>PinchGesture</code>]\nSets whether this window recognizes [<code>RotationGesture</code>]\nAn optional rectangle representing the region of the sprite…\nThe red channel. [0.0, 1.0]\nThe red channel. [0.0, 1.0]\nGets a reference to the specified element on the given …\nGets a mutable reference to the specified element on the …\nReturns a hash of the value (which includes the type).\nReturns a zero-sized enumeration of “kinds” of type.\nReturns a mutable enumeration of “kinds” of type.\nReturns an owned enumeration of “kinds” of type.\nReturns a “partial equality” comparison result.\nReturns a reference to the value specified by <code>path</code>.\nReturns a mutable reference to the value specified by <code>path</code>.\nReturns an immutable enumeration of “kinds” of type.\nA macro that automatically generates type data for traits, …\nSpecular intensity for non-metals on a linear scale of …\nRegisters the given <code>loader</code> in the <code>App</code>’s <code>AssetServer</code>.\nRegisters the given <code>processor</code> in the <code>App</code>’s <code>AssetProcessor</code>…\nRegisters the asset type <code>T</code> using <code>[App::register]</code>, and adds …\nRegisters the given <code>AssetSourceBuilder</code> with the given <code>id</code>.\nCalled when registering this component, allowing mutable …\nThis function sets up systems that compute the state …\nSets up the systems needed to compute <code>T</code> whenever any <code>State</code> …\nThis function sets up systems that compute the state …\nSets up the systems needed to compute whether <code>T</code> exists …\nRemap <code>self</code> from the input range to the output range.\nRemoves the given children\nRemoves the given children\nRemoves the <code>Parent</code> of this entity.\nRemoves the <code>Parent</code> of this entity.\nMake this entity parentless while preserving this entity’…\nDescribes which rendering layers gizmos will be rendered …\nRemoves all current children from this entity, replacing …\nRemoves all current children from this entity, replacing …\nOverwrites this smart pointer with the given value, if and …\nShould the window be resizable?\nThe limits of the window’s logical size (found in its …\nWhat resolution the window should have.\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nResources stored in the dynamic scene.\nThe value corresponding to the right side of the UI rect.\nPixel padding to the right\nThe horizontal position of the right edge of the node.\nRight ear position relative to the <code>GlobalTransform</code>.\nThe index of the root node in the animation graph.\nCorresponds to the <code>root</code> field on <code>AnimationGraph</code>.\nReturn a new version of this color with the hue channel …\nRotation of the entity.\nThe size of the gutters between items in a vertical …\nExecutes this system once. See <code>System::run</code> or …\nRuns the system with the given input in the world.\nRun the systems only if the <code>Condition</code> is <code>true</code>.\nRun the systems in this set(s) only if the <code>Condition</code> is …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nRuns this system with the given input in the world.\nRuns the system with the given input in the world. Unlike …\nUniformly sample a point from the surface of this shape, …\nUniformly sample a point from inside the area/volume of …\nThe <code>ImageSampler</code> to use during rendering.\nThe saturation channel. [0.0, 1.0]\nThe saturation channel. [0.0, 1.0]\nScale of the entity.\nScales the projection.\nHow the projection will scale to the viewport.\nHandle to the scene to spawn.\nHandle to the scene to spawn.\nAll scenes loaded from the glTF file.\nThe quality of the screen space specular transmission blur …\nHow many individual steps should be performed in the …\nSegments of the curve\nThe segments in the curve\nReturns a serializable version of the value.\nPerforms a type-checked assignment of a reflected value to …\nSets the value of the given <code>Plugin</code>, if it exists\nSets the alpha component of this color.\nFlags this value as having been changed.\nSets the default asset processor for the given <code>extension</code>.\nSets the hue of this color.\nOverwrites this smart pointer with the given value, if and …\nManually sets the change tick recording the time when this …\nOverwrites the tick indicating the last time this system …\nSets the parent of this entity.\nSets the parent of this entity.\nChange this entity’s parent while preserving this entity…\nChanges the speed of the sound.\nChanges the volume of the sound.\nInitial settings that the audio starts playing with. If …\nInitial settings that the audio starts playing with. If …\nInitial settings that the audio starts playing with. If …\nA bias used when sampling shadow maps to avoid “…\nA bias applied along the direction of the fragment’s …\nA bias applied along the direction of the fragment’s …\nA bias applied along the direction of the fragment’s …\nControls if shadows are enabled for the Material.\nWhether this light casts shadows.\nReturns a short, pretty-print enabled path to the type.\nThis function gets called whenever one of the <code>SourceStates</code> …\nThe number of sides\nDefines how the 4 side parts of the 9 slices will scale\nThe sine of the rotation angle in radians.\nSets whether the window should be shown in the taskbar.\nAsset containing the audio data to play.\nAsset containing the audio data to play.\nAsset containing the audio data to play.\nThe gltf root of the gltf asset, see …\nEnables spatial audio for this source.\nContains a transform that specifies the position of this …\nOptional scale factor applied to the positions of this …\nCustomizes the default <code>RenderPipelineDescriptor</code> for a …\nThe typically-sharper, mipmapped image that represents …\nThe amount of light transmitted <em>specularly</em> through the …\nGets the speed of the sound.\nSpeed to play at.\n<code>Color</code> to use for drawing a <code>SpotLight</code> gizmo when …\nSpecifies the rendering properties of the sprite, such as …\nSpecifies the rendering properties of the sprite, such as …\nMarks that this is a <code>SpriteSource</code>.\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nStops the sink.\nStyles which control the layout (size and position) of the …\nStyles which control the layout (size and position) of the …\nStyles which control the layout (size and position) of the …\nStyles which control the layout (size and position) of the …\nStyles which control the layout (size and position) of the …\nStyles which control the layout (size and position) of the …\nReturns <code>Some</code> if this system set is a <code>SystemTypeSet</code>.\nGet the <code>TypeId</code> of the <code>System</code> produced after calling …\nAttempts to downcast the given value to <code>Self</code> using, …\nThe “target” that this camera will render to.\nOptions for the <code>TaskPool</code> created at application start.\nTension\nContains the text.\nContains the text of the node\nThe maximum width and height of the text.\nHow the text is positioned relative to its transform.\nText system flags\nContains the size of the text and its glyph’s position …\nText layout information\nA reference-counted handle to the image asset to be drawn.\nThe sprite sheet base texture\nHandle to the texture.\nA handle to the texture atlas to use for this Ui Node\ntexture area to draw\nThe specific areas of the atlas where each texture can be …\nThickness of the volume beneath the material surface.\nStores the title of the window.\nBuild a <code>CubicCurve</code> by computing the interpolation …\nBuild a <code>RationalCurve</code> by computing the interpolation …\nConvert to an f32 array\nConvert to an f32 array without the alpha value\nConvert to [u8; 4] where that makes sense (Srgba is most …\nConvert to [u8; 3] where that makes sense (Srgba is most …\nConvert to a Vec3\nConvert to a Vec4\nToggles the playback of this sink.\nThe value corresponding to the top side of the UI rect.\nPixel padding to the top\nThe vertical position of the top edge of the node.\nConstructs an event at the trace level.\nCall <code>trace!</code> once per call site.\nConstructs a span at the trace level.\nTransform of the scene root entity.\nTransform of the scene root entity.\nThe local transform of the sprite, relative to its parent.\nThe local transform of the sprite, relative to its parent.\nThe transform of the text.\nThe transform of the node\nThe transform of the node\nThe transform of the node\nThe transform of the node\nThe transform of the node\nThe transform of the node\nThe transform of the entity.\nTransform a point.\nPosition of the entity. In 2d, the last value of the <code>Vec3</code> …\nShould the window be transparent?\nTries to <code>apply</code> a reflected value to this value.\nReturns the <code>TypeId</code> of the underlying system type.\nReturns the name of the type, or <code>None</code> if it is anonymous.\nReturns the fully qualified path of the underlying type.\nWhether to apply only the base color to this material.\nUpdate the system’s archetype component <code>Access</code>.\nThe schedule that will be run by <code>update</code>.\nThe transform applied to the UVs corresponding to …\nThe input value to be blended.\nContent of the extra data.\nThe value channel. [0.0, 1.0]\nReturns this materials vertex shader. If <code>ShaderRef::Default</code>…\nReturns this material’s vertex shader. If …\nThe vertices of the polyline\nThe vertices of the polyline\nThe vertices of the triangle\nThe vertices of the <code>Polygon</code>\nThe vertices of the <code>BoxedPolygon</code>\nThe vertices of the polyline\nThe vertices of the polyline\nThe vertices of the triangle.\nThe vertices of the tetrahedron.\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed visibility of the scene root …\nAlgorithmically-computed visibility of the scene root …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nThe view visibility of the entity.\nIf set, this camera will render to the given <code>Viewport</code> …\nSpecifies the origin of the viewport as a normalized …\nUser indication of whether an entity is visible\nUser indication of whether an entity is visible\nUser-driven visibility of the scene root entity.\nUser-driven visibility of the scene root entity.\nUser indication of whether an entity is visible\nUser indication of whether an entity is visible\nThe visibility properties of the text.\nDescribes the visibility properties of the node\nDescribes the visibility properties of the node\nDescribes the visibility properties of the node\nDescribes the visibility properties of the node\nDescribes the visibility properties of the node\nDescribes the visibility properties of the node\nUser indication of whether an entity is visible\nEnables or disables the light\nEnables or disables the light\nEnables or disables the light\nThe visibility of the entity.\nThe visibility of the entity.\nSets the window’s visibility.\nGets the volume of the sound.\nGet the volume of the shape\nVolume to play at.\nThe global volume of all audio.\nConstructs an event at the warn level.\nCall <code>warn!</code> once per call site.\nConstructs a span at the warn level.\nIf set, will override the default “watch for changes” …\nThe individual item’s weight. This may not be bound to …\nThe weight of this node.\nCorresponds to the <code>weight</code> field on <code>AnimationGraphNode</code>.\nThe homogeneous weight coefficients.\nWeights\nThe whiteness channel. [0.0, 1.0]\nThe ideal width of the node. <code>width</code> is used when it is …\nThe width of the outline.\nWindow that the cursor moved inside.\nWindow that the cursor entered.\nWindow that the cursor left.\nWindow that received the character.\nWindow that moved.\nThe window entity registering the touch.\nWhere should the window appear relative to other …\nSets a specific theme for the window.\nReturn a new version of this color with the given alpha …\nTakes a closure which builds children for this entity …\nTakes a closure which builds children for this entity …\nReturn a new version of this color with the hue channel …\nReturn a new version of this color with the given …\nThe world of the scene, containing its entities and …\nThe x-axis. [0.0, 1.0]\nWhether to show or clip overflowing items on the x axis\nThe y-axis, intended to represent luminance. [0.0, 1.0]\nWhether to show or clip overflowing items on the y axis\nThe z-axis. [0.0, 1.0]\nIndicates the depth at which the node should appear in the …\nIndicates the depth at which the node should appear in the …\nIndicates the depth at which the node should appear in the …\nIndicates the depth at which the node should appear in the …\nIndicates the depth at which the node should appear in the …\nIndicates the depth at which the node should appear in the …\nExpected number of knots\nExpected number of weights\nProvided number of knots\nProvided number of weights\nThe number of control points provided\nPath to the file that was dropped in.\nPath to the file that might be dropped in.\nWindow the file was dropped into.\nWindow a file is possibly going to be dropped into.\nWindow that had a canceled file drop.\nMultiplier applied to the world distance (within the …\nMultiplier applied to the world distance (within the …\nDistance from the camera where fog is completely opaque, …\nControls how much light is removed due to atmospheric …\nControls how much light is added due to light scattering …\nDistance from the camera where fog is completely …\nIndex of this material\nUsed to set the <code>Face</code> of the material, useful if it is used …\nIndex of the mesh for this primitive\nIndex of the mesh for this primitive\nIndex of this primitive in its parent mesh\nIndex of this primitive in its parent mesh\nThe texture will repeat when the ratio between the <em>drawing </em>…\nShould the image repeat horizontally\nShould the image repeat vertically\nCursor begin and end position.\nCurrent value.\nInput string\nWindow that received the event.\nWindow that received the event.\nWindow that received the event.\nWindow that received the event.\nHow many additional steps to use at most to find the depth …\nThe slice will repeat when the ratio between the <em>drawing </em>…\nApproximations for converting the wattage of lamps to …\nPredefined for lux values in several locations.\nThe amount of light (lux) from ambient daylight (not …\nThe amount of light (lux) during the dark limit of civil …\nThe amount of light (lux) during sunrise or sunset on a …\nThe amount of light (lux) in very dark overcast day\nThe amount of light (lux) in direct sunlight.\nThe amount of light (lux) in full daylight (not direct …\nThe amount of light (lux) during a full moon on a clear …\nThe amount of light (lux) in an office building’s …\nThe amount of light (lux) in family living room lights.\nThe amount of light (lux) in a moonless, overcast night …\nThe amount of light (lux) in an office.\nThe amount of light (lux) on a overcast day; typical TV …\nA singular element access within a path. Multiple accesses …\nAn error originating from an <code>Access</code> of an element within a …\nThe kind of <code>AccessError</code>, along with some kind-specific …\nA enumeration of all error outcomes that might happen when …\nA trait used to power array-like operations via reflection.\nA container for compile-time array info.\nAn iterator over an <code>Array</code>.\nAttempted to apply to types with mismatched sizez, e.g. a […\nA fixed-size list of reflected values.\nA dynamic representation of an enum.\nA list of reflected values.\nAn ordered mapping between reflected values.\nA struct type which allows fields to be added at runtime.\nA tuple which allows fields to be added at runtime.\nA tuple struct which allows fields to be added at runtime.\nDynamic dispatch for <code>TypePath</code>.\nA dynamic representation of an enum variant.\nA trait used to power enum-like operations via reflection.\nA container for compile-time enum info, used by <code>TypeInfo</code>.\nA name-based field access on a struct.\nA index-based field access on a struct.\nAn iterator over the field values of a struct.\nA trait that enables types to be dynamically constructed …\nDerives the <code>FromReflect</code> trait.\nTrait used to generate <code>TypeData</code> for trait reflection.\nA convenience trait which combines fetching and …\nA trait which allows nested <code>Reflect</code> values to be retrieved …\nA convenience trait which combines fetching and …\nA convenience trait which combines fetching and …\nA trait which allows a type to generate its …\nAn error that occurs when using an <code>Access</code> on the wrong …\nAn error that occurs when using an <code>Access</code> on the wrong …\nAn error caused by trying to access a path that’s not …\nAn error that occurs when a type cannot downcast to a …\nA trait used to power list-like operations via reflection.\nAn index-based access on a list.\nA container for compile-time list info.\nAn iterator over an <code>List</code>.\nA trait used to power map-like operations via reflection.\nA container for compile-time map info.\nAn iterator over the key-value pairs of a <code>Map</code>.\nAttempted to apply the wrong kind to a type, e.g. a struct …\nTried to apply incompatible types.\nEnum variant that we tried to apply to was missing a field.\nAn error that occurs when a certain type doesn’t contain …\nThe named field of a reflected struct.\nAn <code>Access</code> combined with an <code>offset</code> for more helpful error …\nAn error that occurs when parsing reflect path strings.\nAn error caused by an invalid path string that couldn’t …\nA pre-parsed path to an element within a type.\nThe core trait of <code>bevy_reflect</code>, used for accessing and …\nThe main derive macro used by <code>bevy_reflect</code> for deriving …\nA struct used to deserialize reflected instances of a type.\n<code>Reflect</code> values are commonly used in situations where the …\nType data that represents the <code>FromReflect</code> trait and allows …\nA zero-sized enumuration of the “kinds” of a reflected …\nA mutable enumeration of “kinds” of a reflected type.\nAn owned enumeration of “kinds” of a reflected type.\nSomething that can be interpreted as a reflection path in …\nAn error returned from a failed path string query.\nAn immutable enumeration of “kinds” of a reflected …\nA struct used to serialize reflected instances of a type.\nA trait used to power struct-like operations via reflection…\nStruct enums take the form:\nStruct enums take the form:\nA container for compile-time named struct info.\nType info for struct variants.\nA trait used to power tuple-like operations via reflection.\nTuple enums take the form:\nTuple enums take the form:\nAn iterator over the field values of a tuple.\nAn index-based access on a tuple.\nA container for compile-time tuple info.\nA trait used to power tuple struct-like operations via …\nAn iterator over the field values of a tuple struct.\nA container for compile-time tuple struct info.\nType info for tuple variants.\nA trait used to type-erase type metadata.\nCompile-time type information for various reflected types.\nA static accessor to type paths and names.\nDerives the <code>TypePath</code> trait, providing a stable alternative …\nProvides dynamic access to all methods on <code>TypePath</code>.\nRuntime storage for type metadata, registered into the …\nA registry of reflected types.\nA synchronized wrapper around a <code>TypeRegistry</code>.\nA static accessor to compile-time type information.\nUnit enums take the form:\nUnit enums take the form:\nType info for unit variants.\nThe enum we tried to apply to didn’t contain a variant …\nThe unnamed field of a reflected tuple or tuple struct.\nA container for compile-time info related to general value …\nAn iterator over the fields in the current enum variant.\nA container for compile-time enum variant info.\nDescribes the form of an enum variant.\nRepresentation for individual element accesses within a …\nThe returns the <code>Access</code> that this <code>AccessError</code> occurred in.\nThe <code>Access</code> itself.\nAttempts to register the type described by <code>registration</code>.\nApplies a reflected value to this value.\nApplies the reflected array data to the given array.\nThe default debug formatter for <code>Array</code> types.\nReturns the <code>u64</code> hash of the given array.\nCompares two arrays (one concrete and one reflected) to …\nTries to apply the reflected array data to the given array …\nReturns the value as a <code>&amp;dyn Any</code>.\nReturns the value as a <code>&amp;mut dyn Any</code>.\nCasts this type to a reflected value.\nConvert <code>Ptr</code> into <code>&amp;dyn Reflect</code>.\nCasts this type to a mutable reflected value.\nConvert <code>PtrMut</code> into <code>&amp;mut dyn Reflect</code>.\nThe compile-time capacity of the array.\nClones the map, producing a <code>DynamicMap</code>.\nClones the struct into a <code>DynamicStruct</code>.\nClones the struct into a <code>DynamicTuple</code>.\nClones the struct into a <code>DynamicTupleStruct</code>.\nClones the list, producing a <code>DynamicArray</code>.\nClones the list, producing a <code>DynamicList</code>.\nClones the value as a <code>Reflect</code> trait object.\nChecks if a variant with the given name exists within this …\nReturns the name of the crate the type is in, or <code>None</code> if …\nSee <code>TypePath::crate_name</code>.\nReturns the custom attributes for this item.\nReturns the custom attributes for this item.\nReturns the custom attributes for this item.\nReturns the custom attributes for this item.\nReturns the custom attributes for this item.\nReturns the custom attributes for this variant.\nReturns the custom attributes for this item.\nReturns the custom attributes for this item.\nReturns the custom attributes for this item.\nReturns a reference to the value of type <code>T</code> in this …\nReturns a mutable reference to the value of type <code>T</code> in this …\nDebug formatter for the value.\nDeserializes a reflected value.\nReturns a reference to this <code>Access</code>’s inner value as a …\nReturns a boxed object from a boxed trait object if the …\nDowncasts the value to type <code>T</code>, consuming the trait object.\nReturns a mutable reference to the object within the trait …\nDowncasts the value to type <code>T</code> by mutable reference.\nReturns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …\nReturns a reference to the object within the trait object …\nDowncasts the value to type <code>T</code> by reference.\nDrain the elements of this array to get a vector of owned …\nDrain the elements of this list to get a vector of owned …\nDrain the key-value pairs of this map to get a vector of …\nDrain the fields of this tuple to get a vector of owned …\nGets a <code>&amp;T</code> to the specified element on the given <code>Reflect</code> …\nGets a <code>&amp;mut T</code> to the specified element on the given <code>Reflect</code>…\nCreate a type registry with <em>no</em> registered types.\nThe default debug formatter for <code>Enum</code> types.\nReturns the <code>u64</code> hash of the given enum.\nCompares an <code>Enum</code> with a <code>Reflect</code> value.\nReturns a reference to the value of the field named <code>name</code> …\nReturns a reference to the value of the field with index …\nReturns a reference to the value of the field with index …\nReturns a reference to the value of the field (in the …\nGet the field with the given name.\nGet the field with the given name.\nReturns a reference to the value of the field with index …\nReturns a reference to the value of the field (in the …\nGet the field at the given index.\nGet the field at the given index.\nGet the field at the given index.\nGet the field at the given index.\nGet the field at the given index.\nReturns a mutable reference to the value of the field with …\nReturns a mutable reference to the value of the field (in …\nReturns the number of fields in the struct.\nReturns the number of fields in the tuple.\nReturns the number of fields in the tuple struct.\nReturns the number of fields in the current variant.\nThe total number of fields in this struct.\nThe total number of fields in this tuple.\nThe total number of fields in this struct.\nThe total number of fields in this variant.\nThe total number of fields in this variant.\nReturns a mutable reference to the value of the field …\nReturns a mutable reference to the value of the field with …\nReturns a mutable reference to the value of the field with …\nReturns a mutable reference to the value of the field (in …\nA slice containing the names of all fields in order.\nA slice containing the names of all fields in order.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a <code>DynamicEnum</code> from an existing one.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a function pointer to turn a <code>Ptr</code> into <code>&amp;dyn Reflect</code> for …\nGet a function pointer to turn a <code>PtrMut</code> into …\nCreate a <code>DynamicEnum</code> from an existing one.\nConstructs a concrete instance of <code>Self</code> from a reflected …\nPerform a <code>FromReflect::from_reflect</code> conversion on the …\nReturns a reference to the element at <code>index</code>, or <code>None</code> if …\nReturns a reference to the element at <code>index</code>, or <code>None</code> if …\nReturns a reference to the value associated with the given …\nReturns a reference to the <code>TypeRegistration</code> of the type …\nReturns the key-value pair at <code>index</code> by reference, or <code>None</code> …\nReturns the key-value pair at <code>index</code> by reference where the …\nGets a custom attribute by type.\nGets a custom attribute by type.\nGets a custom attribute by type.\nGets a custom attribute by type.\nGets a custom attribute by type.\nGets a custom attribute by type.\nGets a custom attribute by type.\nGets a custom attribute by type.\nGets a custom attribute by type.\nGets a custom attribute by its <code>TypeId</code>.\nGets a custom attribute by its <code>TypeId</code>.\nGets a custom attribute by its <code>TypeId</code>.\nGets a custom attribute by its <code>TypeId</code>.\nGets a custom attribute by its <code>TypeId</code>.\nGets a custom attribute by its <code>TypeId</code>.\nGets a custom attribute by its <code>TypeId</code>.\nGets a custom attribute by its <code>TypeId</code>.\nGets a custom attribute by its <code>TypeId</code>.\nReturns a reference to the value of the field named <code>name</code>, …\nReturns a reference to the value of the field with index …\nReturns a reference to the value of the field with index …\nReturns a mutable reference to the value of the field …\nReturns a mutable reference to the value of the field with …\nReturns a mutable reference to the value of the field with …\nReturns a mutable reference to the element at <code>index</code>, or …\nReturns a mutable reference to the element at <code>index</code>, or …\nReturns a mutable reference to the value associated with …\nReturns a mutable reference to the <code>TypeRegistration</code> of the …\nReturns the <code>TypeInfo</code> of the type <em>represented</em> by this value.\nTurn the value into a serializable representation\nReturns a reference to the <code>TypeData</code> of type <code>T</code> associated …\nReturns a mutable reference to the <code>TypeData</code> of type <code>T</code> …\nReturns the <code>TypeInfo</code> associated with the given <code>TypeId</code>.\nReturns the default <code>TypeRegistration</code> for this type.\nReturns a reference to the <code>TypeRegistration</code> of the type …\nReturns a mutable reference to the <code>TypeRegistration</code> of the …\nReturns a reference to the <code>TypeRegistration</code> of the type …\nReturns a mutable reference to the <code>TypeRegistration</code> of the …\nReturns <code>true</code> if this item has a custom attribute of the …\nReturns <code>true</code> if this item has a custom attribute of the …\nReturns <code>true</code> if this item has a custom attribute of the …\nReturns <code>true</code> if this item has a custom attribute of the …\nReturns <code>true</code> if this item has a custom attribute of the …\nReturns <code>true</code> if this variant has a custom attribute of the …\nReturns <code>true</code> if this item has a custom attribute of the …\nReturns <code>true</code> if this item has a custom attribute of the …\nReturns <code>true</code> if this item has a custom attribute of the …\nReturns <code>true</code> if this item has a custom attribute with the …\nReturns <code>true</code> if this item has a custom attribute with the …\nReturns <code>true</code> if this item has a custom attribute with the …\nReturns <code>true</code> if this item has a custom attribute with the …\nReturns <code>true</code> if this item has a custom attribute with the …\nReturns <code>true</code> if this variant has a custom attribute with …\nReturns <code>true</code> if this item has a custom attribute with the …\nReturns <code>true</code> if this item has a custom attribute with the …\nReturns <code>true</code> if this item has a custom attribute with the …\nSee <code>TypePath::type_ident</code>.\nA macro used to generate a <code>FromReflect</code> trait …\nA replacement for <code>#[derive(Reflect)]</code> to be used with …\nA macro used to generate reflection trait implementations …\nA replacement for deriving <code>TypePath</code> for use on foreign …\nReturns the index of the field.\nReturns the index of the field (in the current variant) …\nGet the index of the field with the given name.\nGets the index of the field with the given name.\nGet the index of the variant with the given name.\nGet the index of the field with the given name.\nInserts an element at position <code>index</code> within the list, …\nInserts an instance of <code>T</code> into this registration’s type …\nInserts a typed key-value pair into the map.\nInserts a field named <code>name</code> with the typed value <code>value</code> into …\nAppends a typed element with value <code>value</code> to the tuple.\nAppends a typed element with value <code>value</code> to the tuple …\nInserts a key-value pair into the map.\nInserts a field named <code>name</code> with value <code>value</code> into the …\nAppends an element with value <code>value</code> to the tuple.\nAppends an element with value <code>value</code> to the tuple struct.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the value as a <code>Box&lt;dyn Any&gt;</code>.\nConverts this into an “owned” value.\nCasts this type to a boxed reflected value.\nReturns true if the trait object wraps an object of type …\nCheck if the given type matches the array type.\nCheck if the given type matches the field type.\nCheck if the given type matches the field type.\nCheck if the given type matches the list type.\nCheck if the given type matches the map type.\nReturns <code>true</code> if the underlying value is of type <code>T</code>, or <code>false</code>\nCheck if the given type matches the struct type.\nCheck if the given type matches the tuple type.\nCheck if the given type matches the tuple struct type.\nCheck if the given type matches the underlying type.\nCheck if the given type matches the value type.\nCheck if the given type matches the enum type.\nReturns <code>true</code> if the given short type path is ambiguous, …\nIndicates whether or not this type is a <em>dynamic</em> type.\nReturns <code>true</code> if the collection contains no elements.\nReturns <code>true</code> if the collection contains no elements.\nReturns <code>true</code> if the list contains no elements.\nReturns true if the current variant’s type matches the …\nCheck if the given type matches the array item type.\nCheck if the given type matches the list item type.\nThe <code>TypeId</code> of the array item.\nThe <code>TypeId</code> of the list item.\nA representation of the type path of the array item.\nA representation of the type path of the list item.\nReturns an iterator over the array.\nReturns an iterator over the list.\nReturns an iterator over the key-value pairs of the map.\nReturns an iterator over the <code>TypeRegistration</code>s of the …\nIterate over the fields of this struct.\nIterate over the fields of this tuple.\nIterate over the fields of this struct.\nIterate over the variants of this enum.\nIterate over the fields of this variant.\nIterate over the fields of this variant.\nReturns an iterator over the values of the reflectable …\nReturns an iterator over the values of the tuple’s …\nReturns an iterator over the values of the tuple struct’…\nReturns an iterator over the values of the current variant…\nReturns a mutable iterator over the <code>TypeRegistration</code>s of …\nChecks to see if the <code>TypeData</code> of type <code>T</code> is associated with …\nCheck if the given type matches the key type.\nThe <code>TypeId</code> of the key.\nA representation of the type path of the key type.\nReturns the “kind” of this reflected type without any …\nReturns the “kind” of this reflected type without any …\nReturns the “kind” of this reflected type without any …\nReturns the kind of <code>AccessError</code>.\nReturns the number of elements in the array.\nReturns the number of elements in the list.\nReturns the number of elements in the map.\nApplies the elements of <code>b</code> to the corresponding elements of …\nThe default debug formatter for <code>List</code> types.\nReturns the <code>u64</code> hash of the given list.\nCompares a <code>List</code> with a <code>Reflect</code> value.\nTries to apply the elements of <code>b</code> to the corresponding …\nApplies the elements of reflected map <code>b</code> to the …\nThe default debug formatter for <code>Map</code> types.\nCompares a <code>Map</code> with a <code>Reflect</code> value.\nTries to apply the elements of reflected map <code>b</code> to the …\nReturns the path to the module the type is in, or <code>None</code> if …\nSee <code>TypePath::module_path</code>.\nThe name of the field.\nThe name of this variant.\nThe name of this variant.\nThe name of this variant.\nReturns the name of the field with index <code>index</code>.\nReturns the name of the field (in the current variant) …\nCreates a new <code>ArrayIter</code>.\nCreates a new <code>ListIter</code>.\nCreates a new <code>MapIter</code>.\nCreate a type registry with default registrations for …\nCreate a new <code>ArrayInfo</code>.\nCreate a new <code>NamedField</code>.\nCreate a new <code>ListInfo</code>.\nCreate a new <code>MapInfo</code>.\nCreate a new <code>StructInfo</code>.\nCreate a new <code>TupleInfo</code>.\nCreate a new <code>TupleStructInfo</code>.\nCreate a new <code>DynamicEnum</code> to represent an enum at runtime.\nCreate a new <code>EnumInfo</code>.\nCreate a new <code>StructVariantInfo</code>.\nCreate a new <code>TupleVariantInfo</code>.\nCreate a new <code>UnitVariantInfo</code>.\nCreate a new <code>DynamicEnum</code> with a variant index to represent …\nCreates type registration information for <code>T</code>.\nCreates a new table from a type.\nIf the <code>Access</code> was created with a parser or an offset was …\nA character offset in the string the path was parsed from.\nRegisters the type described by <code>registration</code>.\nParses a <code>ParsedPath</code> from a string.\nSimilar to <code>Self::parse</code> but only works on <code>&amp;&#39;static str</code> and …\nReturns a statically typed reference to the value …\nSee <code>TypePath::type_path</code>.\nReturns a statically typed mutable reference to the value …\nRemoves the <em>back</em> element from the list and returns it, or …\nAppends an element to the <em>back</em> of the list.\nAppends a typed value to the list.\nAppends a <code>Reflect</code> trait object to the list.\nTakes a read lock on the underlying <code>TypeRegistry</code>.\nSee <code>TypePath::crate_name</code>.\nGets a reference to the specified element on the given …\nGets a mutable reference to the specified element on the …\nReturns a hash of the value (which includes the type).\nReturns a zero-sized enumeration of “kinds” of type.\nSee <code>TypePath::module_path</code>.\nReturns a mutable enumeration of “kinds” of type.\nReturns an owned enumeration of “kinds” of type.\nReturns a “partial equality” comparison result.\nReturns a reference to the value specified by <code>path</code>.\nReturns a mutable reference to the value specified by <code>path</code>.\nReturns an immutable enumeration of “kinds” of type.\nSee <code>TypePath::short_type_path</code>.\nA macro that automatically generates type data for traits, …\nSee <code>TypePath::type_ident</code>.\nSee <code>TypePath::type_path</code>.\nAttempts to register the type <code>T</code> if it has not yet been …\nRegisters the type data <code>D</code> for type <code>T</code>.\nRegisters other types needed by this type.\nRemoves and returns the element at position <code>index</code> within …\nRemoves an entry from the map.\nReturns <code>true</code> if the underlying value represents a value of …\nReturns a serializable version of the value.\nPerforms a type-checked assignment of a reflected value to …\nSets the type to be represented by this <code>DynamicArray</code>.\nSets the type to be represented by this <code>DynamicList</code>.\nSets the type to be represented by this <code>DynamicMap</code>.\nSets the type to be represented by this <code>DynamicStruct</code>.\nSets the type to be represented by this <code>DynamicTuple</code>.\nSets the type to be represented by this <code>DynamicTupleStruct</code>.\nSets the type to be represented by this <code>DynamicEnum</code>.\nSet the current enum variant represented by this struct.\nSet the current enum variant represented by this struct …\nSee <code>TypePath::short_type_path</code>.\nReturns a short, pretty-print enabled path to the type.\nThe default debug formatter for <code>Struct</code> types.\nCompares a <code>Struct</code> with a <code>Reflect</code> value.\nDowncasts the value to type <code>T</code>, unboxing and consuming the …\nAttempts to downcast the given value to <code>Self</code> using, …\nTries to <code>apply</code> a reflected value to this value.\nApplies the elements of <code>b</code> to the corresponding elements of …\nThe default debug formatter for <code>Tuple</code> types.\nCompares a <code>Tuple</code> with a <code>Reflect</code> value.\nThe default debug formatter for <code>TupleStruct</code> types.\nCompares a <code>TupleStruct</code> with a <code>Reflect</code> value.\nTries to apply the elements of <code>b</code> to the corresponding …\nReturns the <code>TypeId</code> of the type.\nThe <code>TypeId</code> of the array.\nThe <code>TypeId</code> of the field.\nThe <code>TypeId</code> of the field.\nThe <code>TypeId</code> of the list.\nThe <code>TypeId</code> of the map.\nThe <code>TypeId</code> of the struct.\nThe <code>TypeId</code> of the tuple.\nThe <code>TypeId</code> of the tuple struct.\nThe <code>TypeId</code> of the underlying type.\nThe <code>TypeId</code> of the value.\nReturns the <code>TypeId</code> that the <code>ReflectFromPtr</code> was constructed …\nThe <code>TypeId</code> of the enum.\nReturns the name of the type, or <code>None</code> if it is anonymous.\nReturns the compile-time info for the underlying type.\nReturns a reference to the registration’s <code>TypeInfo</code>\nReturns the fully qualified path of the underlying type.\nThe stable, full type path of the array.\nThe stable, full type path of the field.\nThe stable, full type path of the field.\nThe stable, full type path of the list.\nThe stable, full type path of the map.\nThe stable, full type path of the struct.\nThe stable, full type path of the tuple.\nThe stable, full type path of the struct.\nThe stable, full type path of the underlying type.\nThe stable, full type path of the value.\nThe stable, full type path of the value.\nA representation of the type path of the array.\nA representation of the type path of the field.\nA representation of the type path of the field.\nA representation of the type path of the list.\nA representation of the type path of the map.\nA representation of the type path of the struct.\nA representation of the type path of the tuple.\nA representation of the type path of the struct.\nA representation of the type path of the underlying type.\nA representation of the type path of the value.\nA representation of the type path of the value.\nHelpers for working with Bevy reflection.\nCheck if the given type matches the value type.\nThe <code>TypeId</code> of the value.\nA representation of the type path of the value type.\nGet a variant with the given name.\nGet a variant at the given index.\nThe index of the current variant.\nThe number of variants in this enum.\nThe name of the current variant.\nA slice containing the names of all variants in order.\nReturns the full path to the current variant.\nReturns the full path to the given variant.\nThe type of the current variant.\nSets the custom attributes for this field.\nSets the custom attributes for this field.\nSets the custom attributes for this struct.\nSets the custom attributes for this struct.\nSets the custom attributes for this enum.\nSets the custom attributes for this variant.\nSets the custom attributes for this variant.\nSets the custom attributes for this variant.\nTakes a write lock on the underlying <code>TypeRegistry</code>.\nThe actual <code>ReflectKind</code> that was found.\nThe actual <code>VariantType</code> that was found.\nThe <code>ReflectKind</code> that was expected based on the <code>Access</code>.\nThe <code>VariantType</code> that was expected based on the <code>Access</code>.\nThe underlying error.\nPosition in <code>path</code>.\nThe path that the error occurred in.\nA singular element access within a path. Multiple accesses …\nA name-based field access on a struct.\nA index-based field access on a struct.\nAn index-based access on a list.\nAn index-based access on a tuple.\nA collection of custom attributes for a type, field, or …\nReturns <code>true</code> if this collection contains a custom …\nReturns <code>true</code> if this collection contains a custom …\nReturns the argument unchanged.\nGets a custom attribute by type.\nGets a custom attribute by its <code>TypeId</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this collection is empty.\nReturns an iterator over all custom attributes.\nReturns the number of custom attributes in this collection.\nInserts a custom attribute into the collection.\nAn object-safe equivalent of Serde’s <code>Deserializer</code> trait.\nContains the error value\nError when a <code>Serializer</code> or <code>Deserializer</code> trait object fails.\nContains the success value\nResult type alias where the error is <code>erased_serde::Error</code>.\nAn object-safe equivalent of Serde’s <code>Serialize</code> trait.\nAn object-safe equivalent of Serde’s <code>Serializer</code> trait.\nDeserialize a value of type <code>T</code> from the given trait object.\nConvert any Serde <code>Deserializer</code> to a trait object.\nConvert any Serde <code>Serializer</code> to a trait object.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerialize the given type-erased serializable value.\nImplement <code>serde::Serialize</code> for a trait object that has …\nA trait that enables types to be dynamically constructed …\nDerives the <code>FromReflect</code> trait.\nA convenience trait which combines fetching and …\nA trait which allows nested <code>Reflect</code> values to be retrieved …\nA convenience trait which combines fetching and …\nThe core trait of <code>bevy_reflect</code>, used for accessing and …\nThe main derive macro used by <code>bevy_reflect</code> for deriving …\nA struct used to provide the default value of a type.\nA struct used to deserialize reflected instances of a type.\nType data that represents the <code>FromReflect</code> trait and allows …\nSomething that can be interpreted as a reflection path in …\nA struct used to serialize reflected instances of a type.\nA trait used to power struct-like operations via reflection…\nA trait used to power tuple struct-like operations via …\nA static accessor to type paths and names.\nDerives the <code>TypePath</code> trait, providing a stable alternative …\nApplies a reflected value to this value.\nReturns the value as a <code>&amp;dyn Any</code>.\nReturns the value as a <code>&amp;mut dyn Any</code>.\nCasts this type to a reflected value.\nCasts this type to a mutable reflected value.\nClones the struct into a <code>DynamicStruct</code>.\nClones the struct into a <code>DynamicTupleStruct</code>.\nClones the value as a <code>Reflect</code> trait object.\nReturns the name of the crate the type is in, or <code>None</code> if …\nDebug formatter for the value.\nGets a <code>&amp;T</code> to the specified element on the given <code>Reflect</code> …\nGets a <code>&amp;mut T</code> to the specified element on the given <code>Reflect</code>…\nReturns a reference to the value of the field named <code>name</code> …\nReturns a reference to the value of the field with index …\nReturns a reference to the value of the field with index …\nReturns a mutable reference to the value of the field with …\nReturns the number of fields in the struct.\nReturns the number of fields in the tuple struct.\nReturns a mutable reference to the value of the field …\nReturns a mutable reference to the value of the field with …\nReturns the argument unchanged.\nConstructs a concrete instance of <code>Self</code> from a reflected …\nReturns a reference to the value of the field named <code>name</code>, …\nReturns a reference to the value of the field with index …\nReturns a mutable reference to the value of the field …\nReturns a mutable reference to the value of the field with …\nReturns the <code>TypeInfo</code> of the type <em>represented</em> by this value.\nCalls <code>U::from(self)</code>.\nReturns the value as a <code>Box&lt;dyn Any&gt;</code>.\nCasts this type to a boxed reflected value.\nIndicates whether or not this type is a <em>dynamic</em> type.\nReturns an iterator over the values of the reflectable …\nReturns an iterator over the values of the tuple struct’…\nReturns the path to the module the type is in, or <code>None</code> if …\nReturns the name of the field with index <code>index</code>.\nReturns a statically typed reference to the value …\nReturns a statically typed mutable reference to the value …\nGets a reference to the specified element on the given …\nGets a mutable reference to the specified element on the …\nReturns a hash of the value (which includes the type).\nReturns a zero-sized enumeration of “kinds” of type.\nReturns a mutable enumeration of “kinds” of type.\nReturns an owned enumeration of “kinds” of type.\nReturns a “partial equality” comparison result.\nReturns a reference to the value specified by <code>path</code>.\nReturns a mutable reference to the value specified by <code>path</code>.\nReturns an immutable enumeration of “kinds” of type.\nA macro that automatically generates type data for traits, …\nReturns a serializable version of the value.\nPerforms a type-checked assignment of a reflected value to …\nReturns a short, pretty-print enabled path to the type.\nAttempts to downcast the given value to <code>Self</code> using, …\nTries to <code>apply</code> a reflected value to this value.\nReturns the name of the type, or <code>None</code> if it is anonymous.\nReturns the fully qualified path of the underlying type.\nA general purpose deserializer for reflected types.\nA general purpose serializer for reflected types.\nContains data relevant to the automatic reflect powered …\nData needed for (de)serialization of a skipped field.\nA deserializer for type registrations.\nA deserializer for reflected types whose <code>TypeRegistration</code> …\nA serializer for reflected types whose type will be known …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerates a default instance of the skipped field at the …\nGenerates a default instance of the field.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if there are no skipped fields.\nReturns true if the given index corresponds to a field …\nReturns an iterator over the skipped fields.\nReturns the number of skipped fields.\nCreates a new <code>SerializationData</code> instance with the given …\nCreate a new <code>SkippedField</code>.\nA struct used to provide the default value of a type.\nA container for <code>TypedProperty</code> over generic types, allowing …\nSee <code>GenericTypeCell</code>.\nSee <code>GenericTypeCell</code>.\nA container for <code>TypeInfo</code> over non-generic types, allowing …\nSee <code>NonGenericTypeCell</code>.\nUsed to store a <code>String</code> in a <code>GenericTypePathCell</code> as part of …\nA type that can be stored in a (<code>Non</code>)<code>GenericTypeCell</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a reference to the <code>TypedProperty</code> stored in the …\nReturns a reference to the <code>TypedProperty</code> stored in the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInitialize a <code>NonGenericTypeCell</code> for non-generic types.\nInitialize a <code>GenericTypeCell</code> for generic types.\nDeterministic fixed state hasher to be used by …\nCleanup render resources here.\nA helper for accessing <code>MainWorld</code> content using a system …\nThis is used for applying the commands from the …\nSchedule which extract data from the main world and …\nThe simulation <code>World</code> of the application, stored as a …\nCreate any additional views such as those used for shadow …\nSort the <code>SortedRenderPhase</code>s and <code>BinKey</code>s here.\nPrepare render resources from extracted data for the GPU …\nPrepare assets that have been created/modified/removed …\nA sub-set within <code>Prepare</code> for constructing bind groups, or …\nA sub-set within <code>Prepare</code> for initializing buffers, …\nFlush buffers after <code>PrepareResources</code>, but before …\nQueue drawable entities as phase items in render phases …\nA sub-set within <code>Queue</code> where mesh entity queue systems are …\nThe main render schedule.\nActual rendering happens here. In most cases, only the …\nA label for the rendering sub-app.\nContains the default Bevy rendering backend based on wgpu.\nThe systems sets of the default <code>App</code> rendering schedule.\nSets up the base structure of the rendering <code>Schedule</code>.\nInitializes the renderer, sets up the <code>RenderSet</code> and …\nInfrastructure for recording render diagnostics.\nConvenience logic for turning components from the main …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe modular rendering abstraction responsible for queuing, …\nIf <code>true</code>, disables asynchronous pipeline compilation. This …\nCombines the color of the fragments with the colors behind …\nSets how a material’s base color alpha channel is used …\nSpreads the fragment out over a hardware-dependent number …\nThe base color alpha value defines the opacity of the …\nReduce transparency to fully opaque or fully transparent …\nCombines the color of the fragments with the colors behind …\nBase color alpha values are overridden to be fully opaque …\nSimilar to <code>AlphaMode::Blend</code>, however assumes RGB channel …\nThe per-instance data to be inserted into the …\nThe per-instance data that was inserted into the …\nData used for comparison between phase items. If the …\nA trait to support getting data used for batching draw …\nA trait to support getting data used for batching draw …\nAdd this component to mesh entities to disable automatic …\nThe system parameters <code>GetBatchData::get_batch_data</code> needs in\nReturns the argument unchanged.\nGet the per-instance data to be inserted into the …\nPushes <code>gpu_preprocessing::IndirectParameters</code> necessary to …\nGet the per-instance data to be inserted into the …\nReturns the index of the <code>GetFullBatchData::BufferInputData</code> …\nReturns the index of the <code>GetFullBatchData::BufferInputData</code> …\nBatching functionality when GPU preprocessing is in use.\nCalls <code>U::from(self)</code>.\nBatching functionality when GPU preprocessing isn’t in …\nSorts a render phase that uses bins.\nThe GPU buffers holding the data needed to render batches.\nBoth GPU preprocessing and GPU culling are available.\nRecords whether GPU preprocessing and/or GPU culling are …\nThe <code>wgpu</code> indirect parameters structure.\nThe buffer containing the list of <code>IndirectParameters</code>, for …\nNo GPU preprocessing support is available at all.\nOne invocation of the preprocessing shader: i.e. one mesh …\nThe buffer of GPU preprocessing work items for a single …\nGPU preprocessing is available, but GPU culling isn’t.\nFor <code>ArrayIndirectParameters</code>, <code>first_instance</code>; for …\nCreates batches for a render phase that uses bins.\nBatch the items in a sorted render phase, when GPU …\nThe buffer of work items.\nClears out the buffers in preparation for a new frame.\nA system that runs early in extraction and clears out all …\nThe uniform data inputs for the current frame.\nA storage area for the buffer data that the GPU compute …\nA system that removes GPU preprocessing work item buffers …\nFor <code>ArrayIndirectParameters</code>, this is padding; for …\nThe index of the first vertex we’re to draw.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTrue if we’re using GPU culling.\nThe index of the batch input data in the input buffer that …\nThe number of instances we’re going to draw.\nReturns the binding of the buffer that contains the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates new buffers.\nCreates the indirect parameters buffer.\nIn direct mode, this is the index of the <code>MeshUniform</code> in …\nThe uniform data inputs for the previous frame.\nFor <code>ArrayIndirectParameters</code>, <code>vertex_count</code>; for …\nThe index of the buffer data in the current input buffer …\nA system that writes all instance buffers to the GPU.\nThe GPU buffers holding the data needed to render batches.\nCreates batches for a render phase that uses bins, when …\nBatch the items in a sorted render phase, when GPU …\nA system that clears out the <code>BatchedInstanceBuffer</code> for the …\nReturns the argument unchanged.\nReturns the binding of the buffer that contains the …\nCalls <code>U::from(self)</code>.\nCreates a new buffer.\nWrites the instance buffer data to the GPU.\nKeeping the aspect ratio while the axes can’t be bigger …\nKeeping the aspect ratio while the axes can’t be smaller …\nThis value was calibrated to match Blender’s …\nThe defining <code>Component</code> for camera entities, storing …\nThis component lets you control the <code>TextureUsages</code> field of …\nControl how this camera outputs once rendering is …\nTrait to control the projection matrix of a camera.\nAdds <code>Camera</code> driver systems for a given projection type.\nConfigures the <code>RenderGraph</code> name assigned to be run for a …\nLabel for <code>camera_system&lt;T&gt;</code>, shared across all <code>T</code>.\nA <code>Resource</code> that stores the color that is used to clear the …\nFor a camera, specifies the color used to clear the …\nHolds internally computed <code>Camera</code> values.\nThe given clear color is used, overriding the <code>ClearColor</code> …\nThe clear color is taken from the world’s <code>ClearColor</code> …\nThis value was calibrated to match Blender’s …\nHow much energy a <code>Camera3d</code> absorbs from incoming light.\nManually specify the projection’s size, ignoring window …\nKeep the projection’s width constant; height will be …\nKeep the projection’s height constant; width will be …\nImage to which the camera’s view is rendered.\nImage to which the camera’s view is rendered.\nA manually managed <code>TextureView</code> for use as a …\nA unique id that corresponds to a specific …\nStores manually managed <code>ManualTextureView</code>s for use as a …\nCamera component specifying a mip bias to apply when …\nNo clear color is used: the camera will simply draw on top …\nNormalized version of the render target.\nProject a 3D space onto a 2D surface using parallel lines, …\nA 3D camera projection in which distant objects appear …\nParameters based on physical camera characteristics for …\nA configurable <code>CameraProjection</code> that can select its …\nThe “target” that a <code>Camera</code> will render to. For …\nInformation about the current <code>RenderTarget</code>.\nScaling mode for <code>OrthographicProjection</code>.\nSkips writing the camera output to the configured render …\nCameras sorted by their order field. This is updated in …\nA subpixel offset to jitter a perspective camera’s …\nTexture View to which the camera’s view is rendered. …\nTexture View to which the camera’s view is rendered. …\nRender viewport configuration for the <code>Camera</code> component.\nWindow to which the camera’s view is rendered.\nWindow to which the camera’s view is rendered.\nMatch the viewport size. The argument is the number of …\nWrites the camera output to configured render target.\nhttps://en.wikipedia.org/wiki/F-number\nThe area that the projection covers relative to …\nGet a handle to the render target’s image, or <code>None</code> if …\nThe aspect ratio (width divided by height) of the viewing …\nSystem in charge of updating a <code>Camera</code> when its window or …\nThe clear color operation to perform on the render target.\nCompute camera frustum for camera with given projection …\nComputed values for this camera, such as the projection …\nThe minimum and maximum depth to render (on a scale from …\nScale the <code>ScalingMode</code>. For example, dividing by 2 makes …\nCalculate the EV100.\n…\nConverts EV100 values to exposure values. …\nThe distance from the camera in world units of the viewing …\nThe distance of the far clipping plane in world units.\nThe vertical field of view (FOV) in radians.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieves the <code>TextureFormat</code> of this render target, if it …\nIf this is set to <code>true</code>, the camera will use an …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf this is set to <code>true</code>, this camera will be rendered to …\nIf this is enabled, a previous camera exists that shares …\nScale the <code>ScalingMode</code>. For example, multiplying by 2 makes …\nThe distance from the camera in world units of the viewing …\nThe distance of the near clipping plane in world units.\nCreates a new <code>CameraRenderGraph</code> from any string-like type.\nNormalize the render target down to a more concrete value, …\nOffset is in range [-0.5, 0.5].\nCameras with a higher order are rendered later, and thus …\nThe <code>CameraOutputMode</code> for this camera.\nThe physical position to render this viewport to within …\nThe physical size of the viewport rectangle to render to …\nThe physical size of this render target (in physical …\nScales the projection.\nThe scale factor of this render target.\nHow the projection will scale to the viewport.\nhttps://en.wikipedia.org/wiki/Film_speed\nThe height of the image sensor format in meters.\nSets the graph name.\nhttps://en.wikipedia.org/wiki/Shutter_speed\nThe “target” that this camera will render to.\nIf set, this camera will render to the given <code>Viewport</code> …\nSpecifies the origin of the viewport as a normalized …\nThe blend state that will be used by the pipeline that …\nThe clear color operation to perform on the final render …\nGuard returned by <code>RecordDiagnostics::pass_span</code>.\nAllows recording diagnostic spans.\nEnables collecting render diagnostics, such as CPU/GPU …\nGuard returned by <code>RecordDiagnostics::time_span</code>.\nEnd the span. You have to provide the same encoder which …\nEnd the span. You have to provide the same encoder which …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBegin a pass span, which will record elapsed CPU and GPU …\nBegin a time span, which will record elapsed CPU and GPU …\nStores all uniforms of the component type.\nStores the index of a uniform inside of <code>ComponentUniforms</code>.\nDescribes how a component gets extracted for rendering.\nImplements <code>ExtractComponent</code> trait for a component. The …\nThis plugin extracts the components into the “render …\nThe output from extraction.\nECS <code>ReadOnlyQueryData</code> to fetch the components to extract.\nFilters the entities with additional constraints.\nThis plugin prepares the components of the corresponding …\nDefines how the component is transferred into the “…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDescribes how to extract data needed for rendering from a …\nThis plugin extracts one or more components into the “…\nStores all extract instances of a type in the render world.\nECS <code>ReadOnlyQueryData</code> to fetch the components to extract.\nFilters the entities with additional constraints.\nDefines how the component is transferred into the “…\nCreates a new <code>ExtractInstancesPlugin</code> that extracts to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>ExtractInstancesPlugin</code> that unconditionally …\nDescribes how a resource gets extracted for rendering.\nThis plugin extracts the resources into the “render world…\nThis system extracts the resource of the corresponding …\nDefines how the resource is transferred into the “render …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe buffer containing the <code>GlobalsUniform</code>\nContains global values useful when writing shaders. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis plugin prepares the components of the corresponding …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA builder for creating a <code>Mesh</code> with an <code>Annulus</code> shape.\nUV space is distributed by how much of the capsule …\nThe center of the base circle\nOur base mesh pipeline key bits start from the highest bit …\nThe center of the bottom circle cap\nA builder used for creating a <code>Mesh</code> with a <code>Capsule2d</code> shape.\nA builder used for creating a <code>Mesh</code> with a <code>Capsule3d</code> shape.\nManner in which UV coordinates are distributed vertically.\nA builder used for creating a <code>Mesh</code> with a <code>Circle</code> shape.\nSpecifies how to generate UV-mappings for the …\nA builder used for creating a <code>Mesh</code> with a <code>CircularSector</code> …\nA builder used for creating a <code>Mesh</code> with a <code>CircularSegment</code> …\nAnchoring options for <code>ConeMeshBuilder</code>\nA builder used for creating a <code>Mesh</code> with a <code>Cone</code> shape.\nA builder used for creating a <code>Mesh</code> with a <code>ConicalFrustum</code> …\nAnchoring options for <code>CylinderMeshBuilder</code>\nA builder used for creating a <code>Mesh</code> with a <code>Cylinder</code> shape.")