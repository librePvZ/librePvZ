searchState.loadedDescShard("bevy_core", 0, "This crate provides core functionality for Bevy Engine.\nConvenient query for giving a human friendly name to an …\nAutomatically generated [<code>WorldQuery</code>] item type for …\nMaintains a count of frames rendered since the start of …\nAdds frame counting functionality to Apps.\nComponent used to identify an entity. Stores a hash for …\nA dummy type that is <code>!Send</code>, to force systems to run on the …\nHelper for configuring and creating the default task …\nSetup of default task pools: <code>AsyncComputeTaskPool</code>, …\nDefines a simple way to determine how many threads to use …\nRegistration of default types to the <code>TypeRegistry</code> resource.\nGets the name of the entity as a <code>&amp;str</code>.\nUsed to determine number of async compute threads to …\nUsed to determine number of compute threads to allocate\nInserts the default thread pools into the given resource …\nThe unique identifier of the entity as a fallback.\nThe unique identifier of the entity as a fallback.\nSAFETY: we call <code>fetch</code> for each member that implements <code>Fetch</code>…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUsed to determine number of IO threads to allocate\nUnder no circumstance use more than this many threads for …\nIf the number of physical cores is greater than …\nForce using at least this many threads\nIf the number of physical cores is less than …\nUpdates the name of the entity in place.\nA <code>Name</code> that the entity might have that is displayed if …\nA <code>Name</code> that the entity might have that is displayed if …\nCreates a new <code>Name</code> from any string-like type.\nTarget using this percentage of total cores, clamped by …\nThe Bevy Core Prelude.\nSets the entity’s name.\nSAFETY: we call <code>set_archetype</code> for each member that …\nSAFETY: we call <code>set_table</code> for each member that implements …\nOptions for the <code>TaskPool</code> created at application start.\nA system used to increment <code>FrameCount</code> with wrapping …\nCreate a configuration that forces using the given number …")