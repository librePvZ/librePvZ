searchState.loadedDescShard("bevy_sprite", 0, "Provides 2D sprite rendering functionality.\nHow a sprite is positioned relative to its <code>Transform</code>. It …\nStruct defining a <code>Sprite</code> border with padding values\nA 2d material that renders 2d meshes with a texture tinted …\nThe GPU representation of the uniform data of a …\nA component bundle for entities with a <code>Mesh2dHandle</code> and a …\nCustom anchor point. Top left is <code>(-0.5, 0.5)</code>, center is …\n<code>RenderCommand</code> for sprite rendering.\nHelper utility to update <code>TextureAtlasLayout</code> on the fly.\nContains the error value\nControls how the image is altered when scaled.\nMaterials are used alongside <code>Material2dPlugin</code> and …\nRender pipeline data for a given <code>Material2d</code>\nAdds the necessary ECS resources and render logic to …\nA component bundle for entities with a <code>Mesh2dHandle</code> and a …\nComponent for rendering with meshes in the 2d pipeline, …\nDisables wireframe rendering for any entity it is attached …\nContains the success value\nData prepared for a <code>Material2d</code> instance.\nDefines how a texture slice scales when resized\nThe texture will be cut in 9 slices, keeping the texture …\nSpecifies the rendering properties of a sprite.\nA <code>Bundle</code> of components for drawing a single sprite from an …\nAdds support for 2D sprite rendering.\nA <code>Bundle</code> of components for drawing a single sprite from a …\nA component that marks entities that aren’t themselves …\nSystem set for sprite rendering.\nThe slice will be stretched to fit the area\nComponent used to draw a specific section of a texture.\nA builder which is used to create a texture atlas from …\nStores a map used to lookup the position of a texture in a …\nSingle texture slice, representing a texture rect to draw …\nSlices a texture using the <strong>9-slicing</strong> technique. This …\nThe slice will be tiled to fit the area\nThe texture will be repeated if stretched beyond …\nEnables wireframe rendering for any entity it is attached …\nSets the color of the <code>Wireframe2d</code> of the entity it is …\nA <code>Plugin</code> that draws wireframes for 2D meshes.\nA convenient alias for <code>With&lt;Mesh2dHandle&gt;&gt;</code>, for use with …\nA convenient alias for <code>Or&lt;With&lt;Sprite&gt;, With&lt;SpriteSource&gt;&gt;</code>…\nAdd a new texture to <code>atlas_layout</code>.\nAdd a <em>section</em> to the list in the layout and returns its …\nAdds a texture to be copied to the texture atlas.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\n<code>Anchor</code> point of the sprite in the world\nThe sprite sheet texture atlas, allowing to draw a custom …\nControl whether the added texture should be converted to …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe sprite borders, defining the 9 sections of the image\nPixel padding to the bottom\nConsumes the builder, and returns the newly created …\nSystem calculating and inserting an <code>Aabb</code> component to …\nDefines how the center part of the 9 slices will scale\nThe sprite’s color tint\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nSlices the given <code>rect</code> into at least 9 sections. If the …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nChange the on-screen size of the sprite\nAn optional custom size for the sprite that will be used …\nIf <code>Self::global</code> is set, any <code>Entity</code> that does not have a …\nAdd a bias to the view depth of the mesh which can be used …\nAdd a bias to the view depth of the mesh which can be used …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nslice draw size\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nFlip the sprite along the <code>X</code> axis\nFlip the sprite along the <code>Y</code> axis\nSets the texture format for textures in the atlas.\nReturns this material’s fragment shader. If …\nReturns this material’s fragment shader. If …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nCreates a new material from a given color\nGenerate a <code>TextureAtlasLayout</code> as a grid where each …\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nRetrieves the texture <em>section</em> index of the given <code>texture</code> …\nWhether to show wireframes for all meshes. Can be …\nThe absolute transform of the sprite. This should …\nThe absolute transform of the sprite. This should …\nAsset ID of the <code>Image</code> of this sprite PERF: storing an …\nTexture atlas section index\nInherited visibility of an entity.\nInherited visibility of an entity.\nSets the initial size of the atlas in pixels.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nTexture atlas layout handle\nPixel padding to the left\nThe number of textures in the <code>TextureAtlasLayout</code>\nDefines the maximum scale of the 4 corner slices (default …\nSets the max size of the atlas in pixels.\nCreate a new <code>DynamicTextureAtlasBuilder</code>\nCreate a new empty layout with custom <code>dimensions</code>\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\noffset of the slice\nFor cases where additional <code>ExtractedSprites</code> are created …\nSets the amount of padding in pixels to add between the …\nSelect an area of the texture\nAn optional rectangle representing the region of the sprite…\nCreates a new border as a rectangle, with:\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nPixel padding to the right\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nDefines how the 4 side parts of the 9 slices will scale\nCustomizes the default <code>RenderPipelineDescriptor</code>.\nCustomizes the default <code>RenderPipelineDescriptor</code>.\nSpecifies the rendering properties of the sprite, such as …\nSpecifies the rendering properties of the sprite, such as …\nCreates a new border as a square, with identical pixel …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nA reference-counted handle to the image asset to be drawn.\nThe sprite sheet base texture\nRetrieves the current texture <code>URect</code> of the sprite sheet …\ntexture area to draw\nThe specific areas of the atlas where each texture can be …\nTransforms the given slice in an collection of tiled …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nPixel padding to the top\nThe local transform of the sprite, relative to its parent.\nThe local transform of the sprite, relative to its parent.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nReturns this material’s vertex shader. If …\nReturns this material’s vertex shader. If …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nUser indication of whether an entity is visible\nUser indication of whether an entity is visible\nUser indication of whether an entity is visible\nUser indication of whether an entity is visible\nThe texture will repeat when the ratio between the <em>drawing </em>…\nShould the image repeat horizontally\nShould the image repeat vertically\nThe slice will repeat when the ratio between the <em>drawing </em>…")