searchState.loadedDescShard("bevy_animation", 0, "Animation for the game engine Bevy\nThe UUID namespace of animation targets (e.g. bones).\nAn animation that an <code>AnimationPlayer</code> is currently either …\nA list of <code>VariableCurve</code>s and the <code>AnimationTargetId</code>s to …\nA mapping from <code>AnimationTargetId</code> (e.g. bone in a skinned …\nInformation needed during the traversal of the animation …\nAnimation controls\nAdds animation support to an app\nAn entity that can be animated by an <code>AnimationPlayer</code>.\nA unique UUID for an animation target (e.g. bone in a …\nThe animation will finish after running “n” times.\nCubic spline interpolation. The value of the two closest …\nThe animation will never finish.\nInterpolation method to use between keyframes.\nList of keyframes for one of the attribute of a <code>Transform</code>.\nLinear interpolation between the two closest keyframes.\nThe animation will finish after running once.\nRepetition behavior of an animation.\nKeyframes for rotation.\nKeyframes for scale.\nStep interpolation, the value of the start keyframe is …\nKeyframes for translation.\nDescribes how an attribute of a <code>Transform</code> or <code>MorphWeights</code> …\nKeyframes for morph target weights.\nAdds a <code>VariableCurve</code> to an <code>AnimationTarget</code> named by an …\nMultiplies the speed of all active animations by the given …\nA system that advances the time for all playing animations.\nCheck if all playing animations have finished, according …\nCheck if all playing animations are paused.\nA system that modifies animation targets (e.g. bones in a …\nReturns the <code>ActiveAnimation</code> associated with the given …\nReturns true if the animation is currently playing or …\nReturns a mutable reference to the <code>ActiveAnimation</code> …\nReturns the number of times this animation has completed.\n<code>VariableCurve</code>s for each animation target. Indexed by the …\nGets the curves for a single animation target.\nGets mutable references of the curves for a single …\nGet mutable references of <code>VariableCurve</code>s for each …\nDuration of the clip, represented in seconds.\nReturns the amount of time the animation has been playing.\nFind the index of the keyframe at or before the current …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>AnimationTargetId</code> by hashing a single name.\nCreates a new <code>AnimationTargetId</code> by hashing a list of names.\nThe ID of this animation target.\nInterpolation method to use between keyframes.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the number of keyframes is zero.\nCheck if the animation has finished, based on its …\nReturns true if this animation is currently paused.\nReturns true if the animation is playing in reverse.\nCheck if the given animation node is being played.\nTimestamp for each of the keyframes.\nList of the keyframes.\nReturns the number of keyframes.\nPause the animation.\nResume all playing animations.\nStart playing an animation, unless the requested animation …\nThe entity containing the <code>AnimationPlayer</code>.\nIterates through all animations that this <code>AnimationPlayer</code> …\nIterates through all animations that this <code>AnimationPlayer</code> …\nMarks this animation as repeating forever.\nReturns the repeat mode assigned to this active animation.\nReset back to the initial state as if no time has elapsed.\nUnpause the animation.\nResume all active animations.\nSeeks to the beginning of the animation.\nRewinds all active animations.\nSeeks all active animations forward or backward by the …\nReturns the seek time of the animation.\nSeeks to a specific time in the animation.\nSet the duration of the clip in seconds.\nSets the repeat mode for this playing animation.\nSets the speed of the animation playback.\nSets the weight of this animation.\nReturns the speed of the animation playback.\nStart playing an animation, restarting it if necessary.\nStops playing the given animation, removing it from the …\nStops all currently-playing animations.\nReturns the current weight of this animation.")