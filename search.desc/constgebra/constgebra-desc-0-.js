searchState.loadedDescShard("constgebra", 0, "A <code>const</code> matrix type, with dimensions checked at compile …\nA helper type to construct row vectors. <code>CMatrix</code> is used …\nUsed with <code>CMatrix::apply_each</code> to specify an operation, as …\nAdd two <code>CMatrix</code> and return the result.\nApply an operation to each member of the matrix …\nDot product of two <code>CVector</code> of the same size.\nConverts a <code>CMatrix</code> back into a two-dimensional array.\n<code>CMatrix::finish</code>, but returns <code>const_soft_float::SoftF64</code>\nSpecial case of <code>CMatrix::finish</code> for use with a CVector, …\n<code>CVector::finish_vector</code>, but returns soft floats\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate an identity <code>CMatrix</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMultiply two <code>CMatrix</code> and return the result. Columns of …\nCreate a <code>CMatrix</code> from a 2D array of <code>f64</code>.\nEquivalent to <code>CMatrix::new</code> using <code>const_soft_float::SoftF64</code> …\nSpecial case of <code>CMatrix::new</code> for constructing a CVector …\nSubtract two <code>CMatrix</code> and return the result.\nSingular Value Decomposition\nReturn the transpose of a <code>CMatrix</code>.\nCreate a <code>CMatrix</code> filled with zeroes.")