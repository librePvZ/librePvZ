(function() {var implementors = {
"bevy":[],
"bevy_pbr":[["impl <a class=\"trait\" href=\"encase/core/traits/trait.CalculateSizeFor.html\" title=\"trait encase::core::traits::CalculateSizeFor\">CalculateSizeFor</a> for <a class=\"struct\" href=\"bevy_pbr/struct.GpuClusterableObjectsStorage.html\" title=\"struct bevy_pbr::GpuClusterableObjectsStorage\">GpuClusterableObjectsStorage</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"encase/core/traits/trait.ShaderType.html\" title=\"trait encase::core::traits::ShaderType\">ShaderType</a>&lt;ExtraMetadata = StructMetadata&lt;1usize&gt;&gt;,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"bevy_pbr/struct.GpuClusterableObject.html\" title=\"struct bevy_pbr::GpuClusterableObject\">GpuClusterableObject</a>&gt;: <a class=\"trait\" href=\"encase/core/traits/trait.CalculateSizeFor.html\" title=\"trait encase::core::traits::CalculateSizeFor\">CalculateSizeFor</a>,</div>"]],
"bevy_render":[],
"encase":[]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()